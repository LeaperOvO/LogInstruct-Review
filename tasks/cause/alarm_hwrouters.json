[
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwEntityInvalid:Physical entity failed. (BaseTrapSeverity=[BaseTrapSeverity], BaseTrapProbableCause=[ProbableCause], BaseTrapEventType=[BaseTrapEventType], EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalContainedIn=[EntContainedIn], EntPhysicalName=[EntPhysicalName], RelativeResource=[RelativeResource], ReasonDescription=The app of the power module is abnormal.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/3/hwPtpTimeOffsetSumOver:The ptp time offset sum is abnormal. (hwPtpTimeOffsetSumP2P=[hwPtpTimeOffsetSumP2P], hwPtpAlarmThresholdOffsetSum=[hwPtpAlarmThresholdOffsetSum])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOptCfgNotMatch:The optical module configuration does not match. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=148224,ReasonDescription=After the optical module was inserted, its configuration was not supported.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisSeqNumExceedThreshold:The LSP sequence number has exceeded the upper threshold value. (SysInstance=[isisSysInstance], SysLevel=[isisSysLevelIndex], LspId=[isisPduLspId], ThresholdValue=0x[thresholdVal])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPIPConflictEvent:Detected an IP address collision. (IpAddress=[IpAddr], Local MacAddress=[LocalMacAddr], Local InterfaceName=[LocalIfName], Local VLAN=[LocalPVid], Local INNER-VLAN=[LocalCVid], Received MacAddress=[RcvMacAddr], Received InterfaceName=[RcvIfName], Received VLAN=[RcvPVid], Received INNER-VLAN=[RcvCVid], Collision Type=[type])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsTunnelBesteffortDown:The best-effort LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOpticalInvalid:The optical module failed completely. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=136216,ReasonDescription=The voltage of the Smart-Clock module was abnormal.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/hwVrrpExtTrapNonMaster:The VRRP status changed between backup and initialize. (ifIndex=[ifIndex], VrId=[VrId], MasterIpAddr=[MasterIpAddr], sysName=[sysName], ifName=[ifName], CurrentState=[CurrentState], ChangeReason=[ChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/ospfNbrStateChange:The status of the non-virtual neighbor has changed. (RouterId=[RouterId], NbrIpAddress=[NbrIpAddress], NbrAddressLessIndex=[NbrAddressLessIndex], NbrRtrId=[NbrRtrId], NbrState=[NbrState], ProcessId=[ProcessId], AreaId=[AreaId], IfnetIndex=[IfnetIndex], LocalIfIpAddress=[LocalIfIpAddress], IfName=[IfName], VpnName=[VpnName], Reason=[NbrStateChangeReason], SubReason=[SubReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceOutputBelowThreshold:The SSM of output below threshold notification. (hwClockAttributeChassisIndex=[hwClockAttributeChassisIndex], hwClockChassisId=[hwClockChassisId], hwClockPllId=[hwClockPllId], hwClockAttributeOutThreshold=[hwClockAttributeOutThreshold], hwClockAttributeOutValue=[hwClockAttributeOutValue], hwClockCurSourceName=[hwClockCurSourceName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpPartnerMisconnect:The peer link of the LACP member interface might be incorrectly connected. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpVrfRouteNumReachThreshold:The number of routes in the VPN instance reached the alarm threshould. (CurrentRouteNum=[CurrentRouteNum], ThresholdValue=[ThresholdValue], RouteType=[RouteType], Vpn-instance=[Vpn-instance], Address Family=[AddressFamily])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/4/hwSrPolicyStatusChange:The sr-te policy status has been changed. (hwSrPolicyEndpoint=[SrPolicyEndpoint], hwSrPolicyColor=[SrPolicyColor], hwSrPolicyStatus=[SrPolicyStatus], hwSrPolicyDownReason=[DownReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwETrunkStatusChange:The status of an E-Trunk changed.(ETrunkId=[ETrunkId], State=[State], StateReason=[StateReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSCLOCK/4/hwClockChanged:The system UTC time is changed with UTCTime [UTCTime].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgRestoreFail:Failed to restore system configurations.(Result=[Result])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/3/hwTrunkBandwidthImbalance:The bandwidth of the member interfaces of trunk differs greatly. Backpressure may occur on member interfaces with low bandwidth, affecting traffic forwarding. (trunk=[trunkName], memberInterfaceName=[InterfaceName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwBoardFail:The board partially failed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=132665,Reason=The NP chip is under back pressure status, this may cause traffic drop.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwL3ucBoardSrv6SliceResourceNotSufficientAlarmOccur:SRv6 slice resources are insufficient, and the bandwidth of the slice interface on which services are transmitted cannot be guaranteed. (InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpTotalLinkLoss:Link bandwidth lost totally. (TrunkIndex=[TrunkIndex], TrunkIfIndex=[TrunkIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnMacThresholdExceed:The number of MACs in the EVPN instance exceeded the upper threshold. (EVPNInstanceName=[EVPNInstanceName], EVPNInstanceMACCount=[EVPNInstanceMACCount], EVPNInstanceMaxMACValue=[EVPNInstanceMaxMACValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/ifstatechange:The status of the non-virtual interface has changed. (RouterId=[RouterId], IfIndex=[IfIndex], IfInstId=[IfInstId], IfState=[IfState], InterfaceName=[InterfaceName], ChgReason=[ChgReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwVoltRisingAlarm:Voltage exceeded the upper prealarm limit. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=72705,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],BaseThresholdValue=[BaseThresholdValue],BaseThresholdUnit=[BaseThresholdUnit],HighWarning=[BaseThresholdHighWarning],HighCritical=[BaseThresholdHighCritical])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceStateChange:The status of the clock source changed. (hwClockChassisId=[hwClockChassisId], hwClockCurSourceName=[hwClockCurSourceName], hwClockOldSourceState=[hwClockOldSourceState], hwClockSrcCfgChassisIndex=[hwClockSrcCfgChassisIndex], hwClockSrcCfgSourceTypeIndex=[hwClockSrcCfgSourceTypeIndex], hwClockSrcCfgSourceIndex=[hwClockSrcCfgSourceIndex], hwClockSrcCfgSourceState=[hwClockSrcCfgSourceState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwMacLimitNumRaisingThreshold:The port learned mac-address number rising threshold. (PortIndex=[port_index], VlanId=[Vlan_ID], BDId=[BD_ID], VsiName=[vsi_name], PortNum=[port_num], BaseTrapSeverity=[Base_Severity], BaseTrapProbableCause=[trap_cause], BaseTrapEventType=[trap_event], LearnNumber=[learn_number], LimitNumber=[limit_number], PortName=[port_name], EvpnName=[evpn_name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwBoardFwdResLack:The board forwarding engine resources were overloaded. (EntityPhysicalIndex=[EntityPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Slot=[SlotStr], Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfv2ImportAseRouteThreshold:The number of AS-external LSAs generated when an OSPF process imports external routes exceeds the configured alarm upper threshold. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2Threshold=[hwOspfv2Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwEntityRegFail:Physical entity register failed. (EntityPhysicalIndex=[EntityPhysicalIndex],BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=70144,BaseTrapEventType=[BaseTrapEventType],EntPhysicalContainedIn=[EntPhysicalContainedIn],EntPhysicalName=[EntPhysicalName],RelativeResource=[RelativeResource],ReasonDescription=Board registration failed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/5/hwMflpBdLinkBlocked:The AC interfaces of the main interface have been blocked due to MAC-Flapping association. (BD=[bdid], ACInterfaceName=[ACName], MainInterfaceName=[MainIfName], BlockTime=[blockTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpInterfaceNeighborChange:Neighbor information of the interface was changed. (NeighborIndex=[remoteIndex], Action=[eventType], Interface=[localPort], RemoteChassisType=[chassisSubType], RemoteChassisId=[chassisId], RemotePortIdType=[portIdSubType], RemotePortId=[portId], RemoteSystemName=[systemName], RemoteSystemDescription=[systemDescription], RemoteSystemCapabilitySupported=[systemCapSupported], RemoteSystemCapabilityEnabled=[systemCapEnabled], RemoteManagementAddressType=[managementAddrType], RemoteManagementAddress=[managementAddr], RemoteManufacturerName=[manufacturerName], RemoteModelName=[modelName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwFlexEPhyFcsSdAlarm:The FCS-SD error is rising. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwInputErrorAlarm:Input error alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/1/hwhqosBufferAlarm:The buffersize on slot [slot-id] chip [chip-id] has reached [buffer-size]%.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/ospfVirtIfRxBadPacket:An OSPF packet that is received on a virtual interface cannot be parsed. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/4/hwGtlTrialResFeatureEnable:The trial of resource items has been enabled. (RemainDay=[hwGtlItemTrialResRemainTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ThirdPartRouteBeDeletedByPurgeInexact:OSPFv3 routes advertised by another device were deleted, and the possibly faulty device did not support OSPFv3 flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospfv3 flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], RuledOutDeviceNum=[hwOspfv3RuledOutDeviceNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwEntityCheckFail:Physical entity is detected failed. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=68174,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalContainedIn=[EntPhysicalContainedIn],EntPhysicalName=[EntPhysicalName],RelativeResource=[RelativeResource],ReasonDescription=The number of tm resources exceeded 90% of the total tm resources.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDM/4/hwBaseSecurityMaDiscardedRateRising:The Protection on Administration and Service level dropped packets is detected to slide into a warning state. (ChassisID=[ChassisID], SlotID=[SlotID], Protocol=[Protocol], CurrentRateLow=[CurrentRateLow], CurrentRateHigh=[CurrentRateHigh], NotifyEnabled=[NotifyEnabled], RateThreshold=[RateThreshold], RateInterval=[RateInterval])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SAID_CFC/2/hwFwdEntryInconsistent:The entry on the control plane became inconsistent with that on the forwarding plane. (ServiceType=[ServiceType], VPN=[Fvrfindex], DespIPAddress=[DespIp], Mask=[DestIPMask], ReservedParameter=[Index], Description=[Description])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwPortGroupTransModeDiff:The interfaces in this group worked in different transmission modes. (IfIndex=[IfIndex],SlotId=[SlotId],CardId=[CardId],PortId=[PortId],ReasonDescription=[ReasonDescription])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwEntityRemove:Physical entity is removed. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=65542,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalContainedIn=[EntPhysicalContainedIn],EntPhysicalName=[EntPhysicalName],Reason=A CMU was removed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2DeleteRouteByPurge:The local device deleted OSPF routes advertised by other devices. Reset or isolate the device from the network. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/invalid-register:PIM receives an invalid register message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvRegAddressType=[InvRegAddressType], InvRegOriginAddr=[InvRegOriginAddr], InvRegGrpAddr=[InvRegGrpAddr], InvRegRpAddr=[InvRegRpAddr], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwBoardInvalid:The board totally failed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=132610,Reason=The board did not match the device.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/hwIpv4RouteExceed:The number of IPv4 routes in the VPN instance exceeded the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], maximum value=[max])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/2/hwIfitDynFlowIngressNumExceedAlarm:The number of IFIT dynamic ingress flow reaches the upper limit. (UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/1/hwOpticalFail:The optical module failed partially. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=136203,ReasonDescription=The optical module on card is not matched.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3RouteBeDeletedByPurgeExact:OSPFv3 routes advertised by the local device were deleted by another device. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwDHCPRelayProxyUsrThreshold:The number of DHCP relay proxy entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwPrdiAlarm:The remote defect indication in the higher order path alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfPerRouteExceed:The routes number of the specified type received from peers in a BGP address family reached the maximum value. (Address Family=[AddressFamily], RouteType=[RouteType], MaxRouteNumber=[RouteLimitNum], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPaisAlarm:Indication signal in the higher order path alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/hwVrrpExtTrapMasterDown:The VRRP status changed from master to another state. (ifIndex=[ifIndex], VrId=[VrId], MasterIpAddr=[MasterIpAddr], sysName=[sysName], ifName=[ifName], CurrentState=[CurrentState], ChangeReason=[ChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFlexEGrpFecModeMismatch:The FEC mode of the FlexE physical interfaces in the FlexE Group mismatch alarm. (hwFlexEGrpInSlot=[hwFlexEGrpInSlot],hwFlexEGrpInCard=[hwFlexEGrpInCard],hwFlexEGrpID=[hwFlexEGrpID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSCarBindwidthExceedChipLimitAlarm:The bandwidth configured for CAR exceeds the rate limiting capability of the NP. (slot-id=[slot-id],car-type=[car-type],cir=[cir],pir=[pir],maximum-rate-limiting=[maximum-rate-limit],is-percent=[is-percent])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2IntraAreaDRIpAddressConflict:IP addresses of DRs in an intra area conflict. (ProcessId=[ProcessId], AreaId=[AreaId], SelfIfnetIndex=[SelfIfnetIndex], NbrIpAddr=[NbrIpAddr], RouterId=[RouterId], InterfaceIpAddress=[InterfaceIpAddress], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/piminterfaceelection:The interface was elected as a DR. (IfIndex=[IfIndex], IfIPverion=[IfIPverion], IfAddrType=[IfAddrType], Addr=[Addr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/2/hwIfitDynFlowMidEgressNumExceedAlarm:The number of IFIT dynamic midegress flow reaches the upper limit. (UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwCopperPolarityError:Copper polarity error alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/L3VPN_MIB_TRAP_TUNNEL_UPDOWN_EVENT:The tunnel up/down event is occurred. (VpnIndex=[VpnIndex], NextHop=[NextHop], Ckey=[Ckey], TrapType=[TrapType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwNhmCyclicIterateRestrain:Cyclic iteration was suppressed. (restrainType=[restrainType], vpnName=[vpnName], nexthop=[nexthop], protocolType=[protocolType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisPeerFlapSuppStatusChange:The status of peer flapping suppress is changed. (isisSysInstance=[isisSysInstance], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], ifIndex=[ifIndex], ifName=[ifName], SuppressStatus=[hwIsisPeerFlappingSuppressStatus], Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfTxRetransmit:An OSPF packet is retransmitted on a non-virtual interface. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], NbrIfIpAddress=[NbrIfIpAddress], NbrAddressLessIf=[NbrAddressLessIf], IfNeighbor=[IfNeighbor], PacketType=[PacketType], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisLinkCostAdjustment:An IS-IS link cost adjustment event occurs. (ProcessId=[hwisisSysInstance], MtId=[hwisisMtId], InterfaceIndex=[ifIndex], InterfaceName=[ifName], Level=[hwisisSysLevelIndex], Event=[hwisisCostAdjustReason], OriginalCost=[hwisisOriginalCost], AdjustedCost=[hwisisAdjustedCost])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwL3vpnIpv6PrefixExceed:The number of IPv6 prefixes in the VPN instance exceeded the maximum value. (VpnInstanceName=[VpnInstanceName], PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_L2/4/hwServiceNotSupportSrteLoadBanlance:The service can not support ecmp SR-MPLS TE tunnel load banlance and SR-MPLS TE tilfa fast switch.(TunnelName=[TunnelName], ServiceName=[ServiceName]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpNegotiateFailed:The member of LAG can neither receive PDUs nor send PDUs. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName], Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockClusterTopoFail:Clock cluster inter-chassis synchronization topo compute failed. (hwClockClusterNewSyncType=[hwClockClusterNewSyncType], hwClockClusterNewTopoType=[hwClockClusterNewTopoType], hwClockClusterNewTopoLinkType=[hwClockClusterNewTopoLinkType], hwClockClusterNewTopoStatus=[hwClockClusterNewTopoStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/4/hwIfitIngressNumAlmostExceedAlarm:The number of IFIT ingress flows reaches 90 percent of the upper limit. (UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ImportAseRouteExceed:The number of AS-external LSAs generated when an OSPF process imports external routes exceeds the maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2MaxLimit=[hwOspfv2MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/6/hwOspfv3GreaterAgeLsaRecived:OSPFv3 receive LSA with greater Lsa-Age. (ProcessId=[ProcessId], RouterId =[RouterId], AreaId=[AreaId], IfName=[IfName], LsaId=[LsaId], LsaAge=[LsaAge])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanTnlUp:The status of the vxlan tunnel changed to up. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr], TunnelStatus=[TnlStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiCmpDownloadCertFail:The CMP session failed to download certificate. (SessionName=[SessionName],RequestType=[RequestType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwB2TcaAlarm:B2 threshold crossing alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceFreqCheck:The check of frequence abnormal notification. (hwClockSrcCfgChassisIndex=[hwClockSrcCfgChassisIndex], hwClockSrcCfgSourceTypeIndex=[hwClockSrcCfgSourceTypeIndex], hwClockSrcCfgSourceIndex=[hwClockSrcCfgSourceIndex], hwClockChassisId=[hwClockChassisId], hwClockSrcCfgFreqCheckResult=[hwClockSrcCfgFreqCheckResult], hwClockSrcCfgSourceDescr=[hwClockSrcCfgSourceDescr])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2IntraAreaRouterIdConflictRecovered:Router IDs confliction is recovered. (ProcessId=[ProcessId], AreaId=[AreaId], OldRouterId=[OldRouterId], NewRouterId=[NewRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSDP/2/backward:MSDP peer exit the established state. (RemoteAddr=[RemoteAddr], PeerState=[PeerState], InstanceName=[InstanceName], ExitReason=[ExitReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDAntiAttackRateLimit:Packet speed exceeded the configured speed-limit value. (PacketType=[PktType], SuppressValue=[SupVal], CurrentValue=[CurVal], SuppressType=[SupType], InterfaceName=[IfName], WorkIfName=[WorkIfName], SourceMacAddress=[SrcMac], DestinationMacAddress=[DstMac], SourceAddress=[SrcIp], DestinationAddress=[DstIp], TargetAddress=[TgtIp], PE-VLAN=[PeVlan], CE-VLAN=[CeVlan])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisRejectedAdjacency:IS-IS failed to establish the adjacency with its peer. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwXQoSCpDefendDiscardedPacketAlarm:Security cpu-defend drop packets alarmed. (ChassisID=[ChassisID], SlotID=[SlotID], ObjectIndex=[ObjectIndex], DiscardedPackets=[DiscardedPackets], DiscardedThreshold=[DiscardedThreshold], ProtocolDescription=[ProtocolDescription], Reason=[ReasonDesc])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/2/hwOtuSfAlarm:OTU Signal fail. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/rm_mib_trap_tnlgroup_down:The status of the tunnel group changed to Down. (Destination=[Destination], TunnelPolicy=[TunnelPolicy])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/1/hwCardInvalid:The card failed completely. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=135426,ReasonDescription=The key component on the subcard was faulty.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwEntityOffline:Physical entity changed to the offline state. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=69130,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalContainedIn=[EntPhysicalContainedIn],EntPhysicalName=[EntPhysicalName],RelativeResource=[RelativeResource],ReasonDescription=A subboard was powered off.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_RSVP/2/hwRsvpTeAddrConflict:The IP address conflicted with that of other devices. (ConflictAddr=[ipaddr], SuspiciousAddr1=[suspiciousAddr1], SuspiciousAddr2=[suspiciousAddr2], SuspiciousAddr3=[suspiciousAddr3], SuspiciousAddr4=[suspiciousAddr4], SuspiciousAddr5=[suspiciousAddr5], SuspiciousAddr6=[suspiciousAddr6], SuspiciousAddr7=[suspiciousAddr7], SuspiciousAddr8=[suspiciousAddr8])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwcfgNextStartupFileIntegrityFail:Integrity check of the next startup configuration file failed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2RouteBeDeletedByPurgeExact:OSPF routes advertised by the local device were deleted by another device. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PORT/5/hwInputRateChangeOverThresholdNotice:The input rate change ratio exceeded the threshold. (IfIndex = [IfIndex], InterfaceName = [InterfaceName], ThresholdPercent = [ThresholdPercent], CurrentStatisticalPeriodRate = [CurrentStatisticalPeriodRate] Mbit/s, LastStatisticalPeriodRate = [LastStatisticalPeriodRate] Mbit/s)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwBoardFwdMsgCongest:The message forwarding on the board is congested. (SlotName=[SlotName], FeNodeId=[FeNodeId], ReasonId=[ReasonId], ReasonDesc=[ReasonDesc])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/traceRouteTestCompleted:TraceRoute entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], AddressType=[AddressType], Address=[Address])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampMemTwoWayJitterExceed:The two-way jitter of the TWAMP test instance exceeded the upper threshold in three consecutive test intervals. (Test SessionId=[sessionId], MemberId=[memberId], MemberName=[memberName], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgConfigUnsaved:Configuration changes are not saved within the specified time.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTeLspBfdDown:The status of BFD for TE LSP changed to down. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], LspRole=[LspRole], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanIPv6TnlUp:The status of the IPv6 VXLAN tunnel changed to up. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr], TunnelStatus=[Tnl6Status])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/3/hwBgpSidLabelConflict:The prefix-sid label conflict is detected. (label=[Label], Vpn instance =[Vpn-instance], BGP instance name=[InstanceName], Address Family=[AddressFamily], prefix=[Prefix])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_7021/4/hwTmPerformanceALarm:A TM performance threshold-crossing alarm is generated. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=151563,Reason=The TM bandwidth exceeds the alarm threshold.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/ospfv3NbrStateChange:The status of the non-virtual neighbor has changed. (RouterId=[RouterId], NbrIfIndex=[NbrIfIndex], NbrIfInstId=[NbrIfInstId], NbrRtrId=[NbrRtrId], NbrState=[NbrState], IfName=[IfName], Reason=[NbrStateChangeReason], SubReason=[SubReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserSshLogin:The SSH connection login successful. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/4/hwBoardFwdResThresholdExceed:The board forwarding engine resources exceeded the threshold. (EntityPhysicalIndex=[EntiyPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Slot=[SlotStr], ReasonId=[ReasonId], ReasonDescription=[Reason])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_MPLS/4/hwTunnelNotSupportInterface:The tunnel does not support the existing outbound interface. (TunnelName=[TunnelName], InterfaceName=[InterfaceName], Description=[Description])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "GRESM/3/hwSidResourceThresholdExceed:SID resource usage exceeded a specified upper threshold. (SIDPoolID=[SIDPoolID], ResourceCurrentCount=[ResourceCurrentCount], ResourceTotalCount=[ResourceTotalCount], ResourceThresholdUpperLimit=[ResourceThresholdUpperLimit], ResourceThresholdLowerLimit=[ResourceThresholdLowerLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpEstablishedNotification:The BGP FSM enters the Established state. (BgpPeerRemoteAddr=[PeerIpv4Addr], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState],VpnInstance=[VpnInstance])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwL3LoopDetectAlarm:L3 loop detect alarmed. (ChassisID=[hwL3LoopDetectChassisID], Slot=[hwL3LoopDetectSlotID], IP=[hwL3LoopDetectIPAddr])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnMacFlappingVpnAlarm:MAC address flapping frequently occurs in an EVPN instance. (EVPNInstanceName=[EVPNInstanceName], TAG=[TAG], MAC=[MAC], InterfaceName1=[InterfaceName1], InterfaceName2=[InterfaceName2], InterfaceName3=[InterfaceName3], InterfaceName4=[InterfaceName4], IPAddress1=[IPAddress1], IPAddress2=[IPAddress2], IPAddress3=[IPAddress3], IPAddress4=[IPAddress4], VcId=[VcId], EvplInstId1=[EvplInstId1], EvplInstId2=[EvplInstId2], EvplInstId3=[EvplInstId3], EvplInstId4=[EvplInstId4])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwGateAlarm:The access control system was abnormal. (EntityThresholdType=[EntityThresholdType],EntityThresholdValue=[EntityThresholdValue],EntityThresholdCurrent=[EntityThresholdCurrent],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiRtpLrOverThresholdSlot:The multicast RTP-LR reached the threshold.(Slot=[SlotName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/hwOspfv3ImportNssaRouteThreshold:The number of NSSA LSAs generated when an OSPFv3 process imports external routes exceeds the configured alarm upper threshold. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3AreaIdIndex=[hwOspfv3AreaIdIndex], hwOspfv3Threshold=[hwOspfv3Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/hwOspfv2GreaterAgeLsaRecived:OSPF receive LSA with greater Lsa-Age. (ProcessId=[ProcessId], AreaId=[AreaId], IfIndex=[IfIndex], NbrIPaddress=[NbrIpAddress], IfName=[IfName], NbrRtrId=[NbrRtrId], LsaId=[LsaId], LsaAge=[LsaAge])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/2/hwSrPolicyBsidConflict:Allocating a binding SID to an SR Policy fails. (Endpoint=[hwSrPolicyEndpoint], Color=[hwSrPolicyColor], BSID=[hwSrPolicyBsid], Reason=[hwSrPolicyBsidFailReason], ConflictState=[hwSrPolicyConflictState])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmUnexpectedPeriod:MEP received a CCM with unexpected period. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPwMacLimitNumRaisingThreshold:Mac address learning based on PW reached the limit. (MacLimitVsiName=[MacLimitVsiName], MacLimitPwName=[MacLimitPwName], TrapSeverity=[TrapSeverity], TrapProbableCause=[TrapProbableCause], TrapEventType=[TrapEventType], MacDynAddressLearnNum=[MacDynAddressLearnNum], MacLimitMaxMac=[MacLimitMaxMac])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsResourceTotalCountExceed:The number of used MPLS resources reached the maximum number. (hwMplsResourceType=[ResourceType], hwMplsResourceTotalCount=[ResourceTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelPrimaryDown:The primary LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwPortDownHoldTimeFlapping:The number of transient interruptions on a port within a specified period exceeds the configured threshold. (EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName], Interval=[hwPortDownHoldTimeFlappingInterval], AlarmThreshold=[hwPortDownHoldTimeFlappingAlarmThreshold],ResumeThreshold=[hwPortDownHoldTimeFlappingResumeThreshold],CurrentCount=[hwPortDownHoldTimeFlappingCurrentCnt])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/4/hwNtpClientLimitExceed:NTP client number reached the limit.(Current client number=[currentnum])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwIfMonitorOutputRateRising:Interface output flow bandwidth usage exceeded the trap threshold. (Interface=[IfIndex], BandWidthUsage=[hwIfMonitorOutputRatePercentage], TrapThreshold=[hwIfMonitorOutputRateThreshold], InterfaceName=[InterfaceName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiRtpSerOverThreshold:Channel RTP-SER exceeds the threshold. (ChannelName=[hwEmdiChannelName], ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], RtpSerThreshold=[hwEmdiRtpSerThreshold], RtpSer=[hwEmdiRtpSerValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwHpJ1TiuAlarm:The trace identifier unstable in the higher order path alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisOwnLSPPurge:ISIS received a self-originated LSP with the age being 0. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspId=[isisPduLspId], isisPduRemoteRouterID=[isisPduRemoteRouterID], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/6/hwPortLicenseActFail:Failed to activate the port license, because the license resources have been used up. (ItemIndex=[hwItemIndex], ItemName=[hwItemName], InterfaceIndex=[hwPhysicalIfIndex], InterfaceName=[hwPhysicalIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPortBmcInfoChange:The port clock source information changed. (hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortName=[hwPtpPortName], hwPtpPortSourcePortClockId=[hwPtpPortSourcePortClockId], hwPtpPortSourcePortNum=[hwPtpPortSourcePortNum], hwPtpPortSourceStepsRemoved=[hwPtpPortSourceStepsRemoved], hwPtpCurrentMasterClockId=[hwPtpCurrentMasterClockId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwOpticalTunableNotMatch:Configuration collision occurred between wavelength setting and untunable optical module. (EntityPhysicalIndex=[hwEntityPhysicalIndex],EntPhysicalIndex=[entPhysicalIndex],EntPhysicalName=[entPhysicalName],EntityTrapFaultID=[hwEntityTrapFaultID])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwLomAlarm:Loss of multiframe alignment in the higher order path alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisAuthenticationFailure:The authentication password of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDDADNotFinished:DAD is not finished.(ifName=[IfIndex], IPv6 address=[DadAddr], Timeout=[dadTimeout]s, Reason=At the time of the timeout, there are still messages that have not been sent yet.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/1/hwCPUUtilizationRisingAlarm:The CPU usage exceeded the pre-set overload threshold. (TrapSeverity=[TrapSeverity], ProbableCause=[ProbableCause], EventType=[EventType], PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], RelativeResource=[RelativeResource], UsageType=[UsageType], SubIndex=[SubIndex], CpuUsage=[CpuUsage], Unit=[Unit], CpuUsageThreshold=[CpuUsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/ROUTEEXCEED:The number of routes received from the BGP peer exceeded the alarm number. (InstanceId=[InstanceId], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], PeerRemoteAddrType=[PeerIPAddrType], PeerRemoteAddr=[PeerIPAddr], MaxRouteNum=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PORT/2/hwIfMonitorPostfecErrorRising:The errors of post-fec is rising. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorName=[hwIfMonitorName],hwIfMonitorPostFECErrorStatistics=[hwIfMonitorPostFECErrorStatistics])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessUp:Session changes to UP. (Index=[Index], ConfigurationName=[ConfigurationName], PeerIp=[PeerIp], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], DefaultIp=[DefaultIp], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], NextHop=[NextHop], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop], EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfRouteThresholdExceed:The number of routes received from peers in a BGP address family reached the alarm threshold. (Address Family=[AddressFamily], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelHotstandbyDown:The hot-standby LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsLspTotalCountExceed:The lsp count reaches the upper limit. (hwMplsLspProtocol=[LspProtocol], hwMplsLspTotalCount=[LspTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiCrlExpired:The crl is nearly expired. (CrlStartTime=[CrlStartTime], CrlFinishTime=[CrlFinishTime], CrlIssuer=[CrlIssuer], FileName=[FileName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwFwdArpAlarmOccur:The ARP Miss event continuously exists. (EntPhysicalName=[ifindex], slot=[SlotId])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwVoltFallingAlarm:Voltage exceeded the lower prealarm limit. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=73216,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],BaseThresholdValue=[BaseThresholdValue],BaseThresholdUnit=[BaseThresholdUnit],LowCritical=[BaseThresholdLowCritical],LowWarning=[BaseThresholdLowWarning])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceSwitch:The clock source is switched. (hwClockChassisId=[hwClockChassisId], hwClockPllId=[hwClockPllId], hwClockLastSourceName=[hwClockLastSourceName], hwClockCurSourceName=[hwClockCurSourceName], hwClockSrcSelChassisIndex=[hwClockSrcSelChassisIndex], hwClockSrcSelType=[hwClockSrcSelType], hwClockSrcSelMode=[hwClockSrcSelMode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/2/hwOtuLomAlarm:OTU Loss of multiframe. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwSrPrefixSidConflict:The prefix-sid conflict is detected. (SrProtocol=[hwSrProtocol], SrProcessId=[hwSrProcessId], SrPrefixSid=[hwSrPrefixSid], SrPrefixAddress=[hwSrPrefixAddress], SrPrefixAddressMask=[hwSrPrefixAddressMask], SrConflictType=[hwSrConflictType], SrConflictState=[hwSrConflictState])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwBaseSocAttackTrap:Security Operation Center detected one attack. (EventNo=[hwSocAttackSeqNo],Probability=[hwSocAttackPossib],Reason=[hwSocAttackReason],Location=[hwSocAttackIfName],Interface= [hwSocAttackSubIfName],Vlan=[hwSocAttackVlanIndex],QinQ=[hwSocAttackUserQinQIndex],MAC=[hwSocAttackMacAddr],IP=[hwSocAttackIPAddr],IPv6=[hwSocAttackIPAddrV6],Vni=[hwSocAttackVniIndex]).",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnDiscardRoute:The EVPN instance discards the newly learned MAC and MAC/IP routes. (RouteType=[RouteType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwARPBDHostConflictAlarm:The host access interface frequently changed. (LocalIPAddress=[LocalIP], LocalBDID=[LocalBDId], LocalMAC=[LocalMAC], RemoteIPAddress=[ConflictIP], RemoteBDID=[RemoteBDId], RemoteMAC=[RemoteMAC], LocalInterface=[LocalInterface], RemoteInterface=[RemoteInterface], TunnelPeer=[TunnelPeer])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwIfMonitorInputRateRising:Interface input flow bandwidth usage exceeded the trap threshold. (Interface=[IfIndex], BandWidthUsage=[hwIfMonitorInputRatePercentage], TrapThreshold=[hwIfMonitorInputRateThreshold], InterfaceName=[InterfaceName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsTestFailed:The NQA entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], RttSum=[RttSum], RttSum2Low=[RttSum2Low], RttSum2High=[RttSum2High], RttMin=[RttMin], RttMax=[RttMax], PacketOutOfSequences=[PacketOutOfSequences], Errors=[Errors], Busies=[Busies], Timeouts=[Timeouts], Drops=[Drops], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JitterOut=[JitterOut], JitterIn=[JitterIn], OWSumSD=[OWSumSD], OWSumDS=[OWSumDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisSystemIdCfgConflict:An IS-IS system ID conflict occurred. The system ID may have been automatically restored, but the conflicting configuration may still exist. To restore the configured system ID, manually delete the network-entity of the local device and reconfigure it. (SysInstance=[hwisisSysInstance], Level=[hwisisSysLevelIndex], ConflictSystemID=[hwIsisConflictSystemID], LocalHostName=[hwIsisHostName], RemoteHostName=[hwIsisAdjSysName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmUnexpectedMAC:MEP received a CCM with unexpected MAC address. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsStaticCRLspDown:Static CR-LSP went Down. (LspIndex=[LspIndex], InSegmentIndex=[InSegmentIndex], OutSegmentIndex=[OutSegmentIndex], OutIfIndex=[OutIfIndex], LspName=[LspName], LspStatus=[LspStatus], OutIfName=[OutIfName], InIfIndex=[InIfIndex], InIfName=[InIfName], DownReason=[DownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwIsisDeleteRouteByPurge:The local device deleted IS-IS routes advertised by other devices. Reset or isolate the device from the network. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/3/hwPimRpfRtFlapping:The RPF route is flapping. (AddressFamily=[AddressFamily], SrcAddr=[SrcAddr], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SSL/2/hwSSLCertificateExpiredEarlyWarning:The SSL certificate will expire. (CertificateName=[hwSSLCertificateName], CertificateType=[hwSSLCertificateType], BeginTime=[hwSSLCertificateBeginTime], EndTime=[hwSSLCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpDiscardRecvRoute:BGP discard received routes. (InstanceName=[InstName], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], DiscardReason=[DiscardReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/2/hwDot1agCfmExceptionalMACStatus:MEP received a CCM with the Port Status TLV or Interface Status TLV reporting an error status. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSRedirectNextHopLackResAlarm:Redirecting traffic to the next hop is invalid due to insufficient NHP resources. (Behavior=[behavior-name], SlotId=[slot-id], RdrType=[redirect-type])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "GRESM/3/hwSidResourceTotalCountExceed:The total number of used SID resources exceeded a specified upper limit. (SIDPoolID=[SIDPoolID], ResourceCurrentCount=[ResourceCurrentCount], ResourceTotalCount=[ResourceTotalCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwTempRisingAlarm:Temperature exceeded the upper prealarm limit. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=70656,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[entPhysicalName],BaseThresholdValue=[BaseThresholdValue],BaseThresholdUnit=[BaseThresholdUnit],HighWarning=[BaseThresholdHighWarning],HighCritical=[BaseThresholdHighCritical])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/hwOspfv3IntraAreaRouterIdConflict:OSPFv3 router ID conflict is detected in intra-area. (ProcessId=[ProcessId], RouterId=[RouterId], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EAIRP/4/hwResourcePredictOverThres:Resource trend predict will exceed threshold under current circumstance.(ChassisId=[ChassisId], SlotId=[SlotId], Object=[Object], ReasonId=[ReasonId], ReasonDesc=[ReasonDesc])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/hwFallingAlarm:Alarm Id monitors alarm OID variable with the sample type, and the sampled alarm value is less than or equal to falling threshold. (AlarmId=[AlarmId], OID=[OID], SampleType=[SampleType], SampleValue=[SampleValue], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/1/hwCardFail:The card failed partially. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=135198,Reason=EEPROM is abnormal.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwIpv6PrefixThresholdExceed:The number of IPv6 prefixes exceeded the threshold. (PrefixCount=[PrefixCount], MaxValue=[MaxValue], ThresholdLowerLimit=[ThresholdLowerLimit], ThresholdUpperLimit=[ThresholdUpperLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ImportNssaRouteExceed:The number of NSSA LSAs generated when an OSPFv3 process imports external routes exceeds the maximum number. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3AreaIdIndex=[hwOspfv3AreaIdIndex], hwOspfv3MaxLimit=[hwOspfv3MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwPublicIpv6PrefixExceed:The number of public IPv6 prefixes exceeded the maximum value. (PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/4/hwSmBdiAlarm:SM Backward defect indication. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwIPv4IfStateAlarm:The IPv4 status changes. (ifName=[ifName], OperStatus=[ifOperStatus], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PCEP/2/hwPceInitiatedLspLimitExceed:The PCE-Initiated LSPs reached the upper limit. (hwPceInitiatedLspLimitCount=[TotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwIPv4FIBUserDefinedThresholdAlarmOccur:The number of used IPv4 FIB resources exceeded the user-defined upper threshold. (Slot=[slotID], ResourceThresholdUpperLimit=[ResourceThresholdUpperLimit], ResourceThresholdLowerLimit=[ResourceThresholdLowerLimit], ResourceTotalCount=[ResourceTotalCount])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/1/hwDot1agCfmLOC:MEP is disconnected with the remote MEP. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwETrunkMemberStatusChange:The status of an E-Trunk member changed. (ETrunkId=[ETrunkId], MemberType=[MemberType], MemberId=[MemberId], State=[State], StateReason=[StateReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/hwSNMPReset:SNMP was switched to a new process.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwRATEOFTRAFFICRising:Rate of traffic overrun. (EntityPhysicalIndex=[EntityPhysicalIndex],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=138241,Reason=The outbound traffic of the NP exceeded the bandwidth usage threshold. The default threshold is 80 percent.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/5/hwNetconfServerSessionEnd:A NETCONF server session ended. (UserName=[UserName], SessionId=[SessionId], IpAddress=[IpAddress], KilledBy=[KilledBy], TerminalReason=[TerminalReason], VpnName=[VpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisSystemIdConflict:System ID may conflict. (hwisisSysInstance=[hwisisSysInstance], hwisisSysLevelIndex=[hwisisSysLevelIndex], OwnSystemId=[OwnSystemId], sysProcIndexofDyname=[sysProcIndexofDyname], OwnDynamicName=[OwnDynamicName], AdjSystemId=[AdjSystemId], AdjDynamicName=[AdjDynamicName], LocalIP=[hwIsisLocalIP], AdjIP=[hwIsisAdjIP], RemoteIP=[hwIsisRemoteIP])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfLsdbApproachingOverflow:The number of AS-external LSAs in the LSDB of an OSPF process is approaching the configured maximum number.(ospfRouterId=[ospfRouterId], ospfExtLsdbLimit=[ospfExtLsdbLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdIPv6SessDown:Session changes to DOWN. (Index=[Index], ConfigurationName=[ConfigurationName], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop], EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisRouteBeDeletedByPurgeInexact:IS-IS routes advertised by the local device were deleted by another device, and the possibly faulty device did not support IS-IS purge LSP source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display isis purge-source-trace analysis-report command output is the faulty device. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], RuledOutDeviceNum=[hwIsisRuledOutDeviceNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VFS/3/hwFlhSyncFailNotification:Failed to copy file by hwFlhSyncTable with FlhSyncIndex [FlhSyncIndex], FlhSyncSrcFile [FlhSyncSrcFile], FlhSyncDstFile [FlhSyncDstFile].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwLaisAlarm:The alarm indication signal in the multiplex section. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/2/hwIfitMeasureFlowNumExceedAlarm:The number of IFIT measurement flow reaches the upper limit. (Node=[NodeType], FlowType=[FlowType], UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiLdapGetCrlFail:Get crl unsuccessfully with LDAP. (hwLdapIP=[hwLdapIP], hwLdapPort=[hwLdapPort], hwCrlAttribute=[hwCrlAttribute], hwCrlDN=[hwCrlDN], hwLdapVersion=[hwLdapVersion], hwLdapIPVrfName=[VrfIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EWM/2/hwWarrantyExpired:The electronic warranty has expired. (device type=[Type], position=[Slot], serial number=[SerialNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/4/hwMacsecCknSwitchFail:Failed to switch the CKN. (IfIndex=[if-index], Role=[role], Local Port=[local-port], Old CKN=[old-ckn],New CKN=[new-ckn], Switch Reason=[switch-reason], Failed Reason=[fail-reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/hwLspPingProbe:Lsp MPLS Echo packet event. (hwLspTunnelID=[hwLspTunnelID], hwLspSenderAddress=[hwLspSenderAddress], hwLspEndPointAddress=[hwLspEndPointAddress], hwLspTTL=[hwLspTTL], hwLspHandle=[hwLspHandle])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisDatabaseOverload:The overload state of IS-IS LSDB changed. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisSysLevelOverloadState=[isisSysLevelOverloadState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/pimNeighborLoss:The PIM neighbor was lost. (NbrIntIndex=[NbrIntIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfMaxAgeLsa:An LSA is aged. (RouterId=[RouterId], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/hwOspfv2PeerFlappingSuppressStatusChange:The status of peer flapping suppress is changed. (ProcessId=[ProcessId], AreaId=[AreaId], ifAreaId=[ifAreaId], ifIndex=[ifIndex], ifName=[ifName], SuppressStatus=[SuppressStatus], SuppressReason=[SuppressReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SSL/2/hwSSLCertificateExpired:The certificate already expired. (CertificateName=[hwSSLCertificateName], CertificateType=[hwSSLCertificateType], BeginTime=[hwSSLCertificateBeginTime], EndTime=[hwSSLCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwL3vpnIpv6PrefixThresholdExceed:The number of IPv6 prefixes in the VPN instance exceeded the threshold. (VpnInstanceName=[VpnInstanceName], PrefixCount=[PrefixCount], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FTPS/3/hwFtpLoginFailed:Users failed to login ftp server too frequently. (failed times=[hwFtpUserLoginFailedTimes], statistic period=[hwFtpUserLoginStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOutputErrorAlarm:Output error alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/5/hwNetconfMdaResourceChange:The device MDA resource changed. (ChangedResourceType=[ResourceType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/2/hwTwampTwoWayLossRatioExceed:The two-way loss ratio of the TWAMP test instance exceeded the upper threshold in the 1-minute statistics period. (Test SessionId=[sessionId], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwStorageUtilizationRisingAlarm:The storage usage exceeded the pre-set overload threshold. (TrapSeverity=[TrapSeverity], ProbableCause=[ProbableCause], EventType=[EventType], PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], RelativeResource=[RelativeResource], UsageType=[UsageType], SubIndex=[SubIndex], UsageValue=[UsageValue], Unit=[Unit], UsageThreshold=[UsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwIfMonitorPauseFrameRising:The PAUSE FRAME receiving rate is rising. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorPauseFrameStatistics=[hwIfMonitorPauseFrameStatistics],hwIfMonitorPauseFrameThreshold=[hwIfMonitorPauseFrameThreshold],hwIfMonitorPauseFrameInterval=[hwIfMonitorPauseFrameInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfControlFlapSuppress:The state of interface changed from unsuppress to suppress. (InterfaceIndex=[InterfaceIndex], InterfaceExtIndex=[InterfaceExtIndex], InterfaceName=[InterfaceName], SuppressState=[SuppressState])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwBaseSecurityUrpfDiscardedRateRising:Security URPF drop packets alarmed. (ChassisID=[ChassisID], SlotID=[SlotID], CurrentRateLow=[CurrentRateLow], CurrentRateHigh=[CurrentRateHigh], NotifyEnabled=[NotifyEnabled], RateThreshold=[RateThreshold], RateInterval=[RateInterval])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrProtAval:The primary Tunnel has been protected by bypass Tunnel. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], BypassTunnelId=[BypassTunnelId], InnerLable=[InnerLable], TunnelType=[TunnelType], SubGroupId=[SubGroupId], SubGroupOrignatorId=[SubGroupOrignatorId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelBBResume:Main LSP of Tunnel resumes from backup LSP in Best-effort Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],ulTunnelAdminStatus=[ulTunnelAdminStatus],ulTunnelOperStatus=[ulTunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/2/hwClockSourceInputBelowThreshold:The SSM of input below threshold notification. (hwClockAttributeChassisIndex=[hwClockAttributeChassisIndex], hwClockSrcCfgChassisIndex=[hwClockSrcCfgChassisIndex], hwClockSrcCfgSourceTypeIndex=[hwClockSrcCfgSourceTypeIndex], hwClockSrcCfgSourceIndex=[hwClockSrcCfgSourceIndex], hwClockChassisId=[hwClockChassisId], hwClockPllId=[hwClockPllId], hwClockAttributeInputThreshold=[hwClockAttributeInputThreshold], hwClockSrcCfgSourceSsm=[hwClockSrcCfgSourceSsm])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelHotstandbySwitch:Traffic switched from the primary LSP to the hot-standby LSP. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfLsdbOverflow:The number of AS-external LSAs in the LSDB of an OSPF process reaches the configured maximum number. (ospfRouterId=[ospfRouterId], ospfExtLsdbLimit=[ospfExtLsdbLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/3/hwBfdSessReachTotalLimit:The number of BFD sessions on all IO boards has reached the upper limit. (TotalSessionLimit=[TotalSessionLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwPatchErrorTrap:Failed to operate patch. (PatchErrorIndex =[PatchErrorIndex], SlotIndex=[SlotIndex], PkgIndex =[PkgIndex], ErrorCode=[ErrorCode], PkgName=[PkgName] )",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TTY/6/hwUserLogin:User login successful. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwSlotMacLimitNumRaisingThreshold:MAC address learning based on SLOT reached the limit. (L2IfPort=[L2IfPort], MacLimitVlanId=[MacLimitVlanId], MacLimitVsiName=[MacLimitVsiName], entPhysicalIndex=[entPhysicalIndex], aseTrapSeverity=[aseTrapSeverity], BaseTrapProbableCause=[BaseTrapProbableCause], BaseTrapEventType=[BaseTrapEventType], MacDynAddressLearnNum=[MacDynAddressLearnNum], MacLimitMaxMac=[MacLimitMaxMac], SlotName=[SlotName], DeviceName=[DeviceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3ThirdPartRouteBeDeletedByPurgeExact:OSPFv3 routes advertised by another device were deleted. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/4/hwNtpSysPeerChangeTrap:The NTP peer selected by the system is changed. (hwNtpOldSource=[OldSource], hwNtpOldSourceVpnName=[OldVpnName], hwNtpSource=[NewSource], hwNtpSourceVpnName=[NewVpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FM/4/hwAlarmClearedReportTrap:Notice NMS to clear active alarm. (AlarmClearedNum=[AlarmClearedNum],AlarmClearedSnList=[AlarmClearedSnList])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfIfConfigError:A packet is received on the non-virtual interface from a router whose configuration conflicts with the local configuration. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], PacketSrc=[PacketSrc], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], ProcessId=[ProcessId], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwOduSdAlarm:ODU Signal degrade. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwLosAlarm:Loss of signal alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName],AlarmName=[hwPhysicalPortAlarmName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiLocalCertExpired:The local certificate is nearly expired. (LocalCertStartTime=[LocalCertStartTime], LocalCertFinishTime=[LocalCertFinishTime], LocalCertIssuer=[LocalCertIssuer], LocalCertSubject=[LocalCertSubject], FileName=[FileName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EWM/3/hwWarrantyMissingSession:The current service period is missing. If you want to continue using it, please purchase and activate the corresponding e-warranty as soon as possible. (device type=[Type], position=[Slot], serial number=[SerialNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/pingProbeFailed:Ping entry probe failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], AddressType=[AddressType], Address=[Address], MinRtt=[MinRtt], MaxRtt=[MaxRtt], AverageRtt=[AverageRtt], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], RttSumOfSquares=[RttSumOfSquares], LastGoodProbe=[LastGoodProbe])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwPrefecTcaAlarm:PreFec tca detected alarm. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSIfQPPBDelAlarm:The interface does not support QPPB outbound service class. (Interface Name = [interface-name], Policy Name = [policy-name], Direction = [direction], Precautions = [description])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/1/hwIPSecPkiCertExpiredCritical:The CA certificate, local certificate, or peer certificate is about to expire. (CertStartTime=[CertStartTime], CertFinishTime=[CertFinishTime], CertIssuer=[CertIssuer], CertSubject=[CertSubject], FileName=[FileName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPTPRingFiberLengthChange:The optical fiber length of the ring-network is changed. (hwPtpPortName=[hwPtpPortName], hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortRingFiberLengthChangeValue=[hwPtpPortRingFiberLengthChangeValue], hwPtpPortRingFiberLengthChangeValueFlag=[hwPtpPortRingFiberLengthChangeValueFlag])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwIpv6PrefixExceed:The number of IPv6 prefixes exceeded the maximum value. (PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/pimrpmappingchange:The RP changes. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], szGrpAddr=[szGrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], Precedence=[Precedence])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwB3TcaAlarm:B3 threshold crossing alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/3/hwEvplCccDown:The status of the EVPL CCC turned DOWN. Please check if any interface is down. (EvplIndex=[EvplIndex],Interface1=[Interface1Name],Interface2=[Interface2Name])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/3/hwFlexESubTimeSlotMismatch:The sub-timeslot granula of the butted FlexE interfaces is different. (hwPortIfIndex=[hwPortIfIndex],hwPortName=[hwPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelChangeBw:The bandwidth of the tunnel has changed. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], TunnelIfIndex=[TunnelIfIndex], TunnelPreBandwidth=[TunnelPreBandwidth], TunnelNextBandwidth=[TunnelNextBandwidth], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/ROUTETHRESHOLDEXCEED:The number of routes received from the BGP peer exceeded the alarm threshold. (InstanceId=[InstanceId], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], PeerRemoteAddrType=[PeerIPAddrType], PeerRemoteAddr=[PeerIPAddr], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/ospfVirtNbrStateChange:The status of the virtual neighbor changes. (VirtNbrArea=[VirtNbrArea], VirtNbrRtrId=[VirtNbrRtrId], ProcessId=[ProcessId], RouterId=[RouterId], VirtNbrState=[VirtNbrState], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_L2/4/hwModeChannelBandwidthAlarm:The total bandwidth of the channelized sub-interfaces on the same physical or Eth-Trunk interface has exceeded the maximum available bandwidth of the physical or Eth-Trunk interface. (Interface=[IfIndex], Bandwidth=[Bandwidth], SubIfBandwidthSum=[SubIfBandwidthSum], InterfaceName=[InterfaceName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpPDUChange:The LACP member interface's status changed from selected to unselected due to the PDU change. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName], OldPduInfo=[OldPduInfo], NewPduInfo=[NewPduInfo], ReasonCode=[ReasonString])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/2/hwNtpStateChangeTrap:NTP synchronization state changed. (hwNtpState=[state], hwNtpSource=[source], hwNtpSourceVpnName=[VpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PORT/1/hwOpticalAmplifierGainHigh:The gain of the optical module is too high. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVplsBLabelNotEnough:The block labels of VPLS are not enough. (VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSystemConfigError:A system configuration error occurs. ( EntityTrapFaultID = [EntityTrapFaultID])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwisisLocatorPrefixConflict:A locator prefix conflict was detected between the local device and another device. (SysInstance=[hwisisSysInstance], MtId=[hwisisMtId], Level=[hwisisSysLevelIndex], PrefixAddress=[hwisisIpv6PrefixAddress], PrefixAddressMask=[hwisisIpv6PrefixAddressMask], ConflictSystemId=[hwIsisConflictSystemID], LocalFlexAlgorithm=[hwisisLocalFlexAlgorithm], RemoteFlexAlgorithm=[hwisisRemoteFlexAlgorithm])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwLrdiAlarm:Remote defect indication alarm in the multiplex sections. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlFunctionInactive:Item is inactive. (ItemName=[hwGtlItemName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwFlexEPhyDelayOverAlarm:The delay difference of FlexE physical interfaces in the same group is abnormal. (hwPhysicalIndex=[hwPhysicalIndex],hwPhysicalPortList=[hwPhysicalPortList])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampControlSessionNumExceed:The number of TWAMP control session is out of device capability.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwEthRxFlowFallAlarm:Traffic fall alarm in the receive direction of an Ethernet interface. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName],hwBandwidthLast=[hwBandwidthLast] bits/sec,hwBandwidthCurrent=[hwBandwidthCurrent] bits/sec)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwBaseSecurityTcpIpAttackDiscardedRateRising:Security TCP-IP drop packets alarmed. (ChassisID=[ChassisID], SlotID=[SlotID], Type=[Type], CurrentRateLow=[CurrentRateLow], CurrentRateHigh=[CurrentRateHigh], NotifyEnabled=[NotifyEnabled], RateThreshold=[RateThreshold], RateInterval=[RateInterval], ProtocolDescription=[ProtocolDescription], Reason=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDProxyDynThresholdExceedAlarm:The number of dynamic ND Proxy entries exceeded the threshold of the device. (Threshold=[Threshold], Number of dynamic ND proxy entries=[DynProxyEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisIDLenMismatch:The ID length of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisPduFieldLen=[isisPduFieldLen], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfConfigError:A packet is received on the virtual interface from a router whose configuration conflicts with the local configuration. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwLofAlarm:Loss of frame alignment alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/6/hwPortLicenseActSuccess:Succeed to activate the port license. (ItemIndex=[hwItemIndex], ItemName=[hwItemName], InterfaceIndex=[hwPhysicalIfIndex], InterfaceName=[hwPhysicalIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PORT/2/hwIfMonitorSdhB1ErrorRising:The SDH B1 error is rising. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorSdhB1ErrorStatistics=[hwIfMonitorSdhB1ErrorStatistics],hwIfMonitorSdhB1ErrorThreshold=[hwIfMonitorSdhB1ErrorThreshold],hwIfMonitorSdhB1ErrorInterval=[hwIfMonitorSdhB1ErrorInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/4/hwFwdTblmScanHndThresholdExceed:The number of handles traversed in the forwarding resource table exceeded the threshold. (EntiyPhysicalindex=[EntiyPhysicalindex],EntPhysicalindex=[EntPhysicalindex],EntPhysicalName=[EntPhysicalName],TableId=[TableId],TableName=[TableName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/3/hwPimRpfAssertWinnerFlapping:The assert winner is flapping. (AddressFamily=[AddressFamily], SrcAddr=[SrcAddr], GrpAddr=[GrpAddr], InterfaceName=[InterfaceName], CurrentAssertWinnerAddr=[CurrentAssertWinnerAddr], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfOriginateLsa:An LSA is generated. (RouterId=[RouterId], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/3/hwFlexEGrpNegotiationFail:FlexE group negotiation fail alarm. (GroupIndex=[hwFlexEGroupIndex],GroupName=[hwFlexEGroupName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwL2DomainMacLimitNumRaisingThreshold:The number of broadcast domain MAC addresses learned reached the upper threshold. (EntPhysicalIndex=[EntPhysicalIndex], PhyscialName=[PhyscialName], MacLimitVlanId=[Vlan_ID], MacLimitVsiName=[MacLimitVsiName], MacLimitBDId=[BD_ID], MacLimitEvpnName=[evpn_name], TrapSeverity=[TrapSeverity], TrapProbableCause=[TrapProbableCause], TrapEventType=[TrapEventType], MacDynAddressLearnNum=[MacDynAddressLearnNum], MacLimitMaxMac=[MacLimitMaxMac], MacLimitUpthreshold=[MacLimitUpthreshold], MacLimitDownthreshold=[MacLimitDownthreshold]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfv2LsdbApproachingOverflow:The number of AS-external LSAs in the LSDB of an OSPF process is approaching the configured maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2Threshold=[hwOspfv2Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwEthHalfDuplex:Eth half duplex. (IfIndex=[hwPhysicalPortIfIndex],IfName=[hwPhysicalPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwVtyNumExceed:The number of login users reaches the maximum VTY limit. (MaxUserNum=[MaxUserNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/2/hwExtLinkUp:The link status of the trunk member interface turned to UP. (ifIndex=[ifIndex], ifAdminStatus=[ifAdminStatus], ifOperStatus=[ifOperStatus], ifDescr=[ifDescr], hwIFExtPhyStatus=[hwIFExtPhyStatus], hwIFExtMemberOf=[hwIFExtMemberOf])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisOrigLSPBuffSizeMismatch:The size of the local buffer for originating IS-IS LSPs is smaller than the size of the received LSP. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspId=[isisPduLspId], isisPduOriginatingBufferSize=[isisPduOriginatingBufferSize], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwPuneqAlarm:The unequipped in the higher order path alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/mplsTunnelReoptimized:Tunnel Re-Optimized. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], LspRole=[LspRole], WorkingLsp=[WorkingLsp], LspProtocolStatus=[LspProtStatus], NewLspPath=[NewLspPath], OldLspPath=[OldLspPath], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwMacUsageRaisingThreshold:Mac address usage reached the limit. (MacUsageEntry_entPhysicalIndex=[hwEntPhysicalIndex], TrapSeverity=[hwTrapSeverity], TrapProbableCause=[hwCause], TrapEventType=[hwTrapEvent], PhysicalName=[hwPhyscialName], MacEntityUsage=[hwMacUsage], MacEntityUsageThreshold=[hwThreshold]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/hwL3vpnVrfV6Down:The IPv6 status of all interfaces bound to a VPN instance went Down. (VPN instance name=[VpnInstanceName], interface name=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgAppDataInconsistent:Inconsistency between application configuration data and master main board configuration data.",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfPerRouteThresholdExceed:The routes number of the specified type received from peers in a BGP address family reached the alarm threshold. (Address Family=[AddressFamily], RouteType=[RouteType], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestCompleted:NQA entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], CompletionTimeMin=[CompletionTimeMin], CompletionTimeMax=[CompletionTimeMax], SumCompletionTime=[SumCompletionTime], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], SumCompletionTime2Low=[SumCompletionTime2Low], SumCompletionTime2High=[SumCompletionTime2High], LastGoodProbe=[LastGoodProbe], LastGoodPath=[LastGoodPath])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiLdapGetCertFail:Get certificate unsuccessfully with LDAP. (hwLdapIP=[hwLdapIP], hwLdapPort=[hwLdapPort], hwCertAttribute=[hwCertAttribute], hwCertDN=[hwCertDN], hwLdapVersion=[hwLdapVersion], hwCertSaveName=[hwCertSaveName], hwLdapIPVrfName=[VrfIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysClockChangedNotification:The local time is changed with LocalTime. (LocalTime=[LocalTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/coldStart:OID [oid] coldStart.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPRemoteBackupFailAlarm:The remote ARP entry backup fail. (Interface=[IfName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsOWDThresholdNotificationDS:The OWD-DS of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], OWDOverThresholdsDS=[OWDOverThresholdsDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPKIWriteToCFFail:The file is written to the cfcard unsuccessfully.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/pingTestFailed:Ping entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], AddressType=[AddressType], Address=[Address], MinRtt=[MinRtt], MaxRtt=[MaxRtt], AverageRtt=[AverageRtt], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], RttSumOfSquares=[RttSumOfSquares], LastGoodProbe=[LastGoodProbe])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwIpv4PrefixExceed:The number of IPv4 prefixes exceeded the maximum value. (PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwCardRemove:The card was removed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=133376,Reason=The card was removed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwFesEnterSpecialMode:The FES entered the special processing mode. (Reason=[ReasonId], Mode=[ModeId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpPktLos:The ptp packet of the trace source is lost. (hwPtpPktType=[hwPtpPktType])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwPublicIpv6PrefixThresholdExceed:The number of public IPv6 prefixes exceeded the threshold. (PrefixCount=[PrefixCount], Threshold=[Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfAuthFailure:A packet is received on a virtual interface from a router whose authentication key or authentication type conflicts with the local authentication key or authentication type. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/RPKISESSIONROAEXCEED:The number of ROAs received from the session exceeded the alarm number. (InstanceId=[InstanceId], SessionRemoteAddrType=[SessionIPAddrType], SessionRemoteAddr=[SessionIPAddr], MaxROANum=[RpkiLimitNum])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_MPLS/4/hwServiceNotSupportDscpSrte:The service can not support dscp sr-te.(ServiceName=[ServiceName]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SEGR/3/hwSrAlgoPrefixSidConflict:The prefix-sid conflict is detected. (Protocol=[hwProtocol], ProcessId=[hwProcessId], PrefixSid=[hwPrefixSid], PrefixAddress=[hwPrefixAddress], PrefixAddressMask=[hwPrefixAddressMask], Algorithm=[hwAlgorithm], ConflictType=[hwConflictType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SPM/2/hwSysPackageVerifyFailed:Package verification failed. (PhysicalIndex=[PhysicalIndex],PhysicalName=[PhysicalName],PackageIndex=[PackageIndex],PackageName=[PackageName],FailReason=[FailReason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PM/4/hwPMCSESEvent:The event happens at [StartTime], and lasts [Duration] seconds (InstanceTypeName=[InstanceTypeName], InstanceTypeId=[InstanceTypeId], InstanceName=[InstanceName], MeasureId=[MeasureId], MeasureName=[MeasureName]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwPortPhysicalRateDegradeAlarm:Port physical rate degrade alarm has occurred. (IfIndex=[hwPhysicalPortIfIndex],IfName=[hwPhysicalPortName],Current Physical Rate=[hwPortPhysicalRate])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlDataDamaged:The license fails to be activated during system startup because the license data is damaged. (Position=[hwGtlPosition])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsOWDThresholdNotificationSD:The OWD-SD of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], OWDOverThresholdsSD=[OWDOverThresholdsSD])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ND/2/hwNDDuplicateIPv6:Received a [PktType] packet with a duplicate IP address [TgtIpv6Address] from the interface [TgtInterfaceName]. (ReceiveIfName=[LocInterfaceName], SourceMacAddress=[SrcMacAddress], DestinationMACAddress=[DstMacAddress], SourceAddress=[SrcIpv6Address], DestinationAddress=[DstIpv6Address], PE-VLAN=[PeVLAN], CE-VLAN=[CeVLAN], SelfMacRecv=[SelfLoop], Attempted=[DadAttempts])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsTunnelOrdinaryDown:The ordinary LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3NetSliceSrcPrefixConflict:A conflict between the network slice source prefix of the local device and the IPv6 prefix of another device is detected. (Ospfv3Process=[hwOspfv3ProcessId], RouterId=[hwOspfv3CommonRouterId], PrefixAddress=[hwOspfv3Ipv6Prefix], PrefixAddressMask=[hwOspfv3Ipv6PrefixMask], ConflictRouterId=[hwOspfv3ConflictRouterId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/2/hwClockNotInLockedMode:The work mode of system clock source out trace. (hwClockAttributeChassisIndex=[hwClockAttributeChassisIndex], hwClockChassisId=[hwClockChassisId], hwClockAttributeSysClkLockMode=[hwClockAttributeSysClkLockMode])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserSshLogout:The SSH connection is logout. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/3/hwAdminLoginFailed:Administrator type users login failed too frequently. (failed times=[hwLoginFailedTimes], statistic period=[hwStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgBackupFailure:Configuration backup failed in the system. (reason=[cause])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwifflowdown:The state of interface turned to DOWN because of FLOW DOWN. (Interface=[ifIndex], InterfaceIndex=[hwIFExtIndex], SysUpTime=[sysUpTime], FlowStatus=[hwIFExtFlowStatus], InterfaceName=[ifName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PM/4/hwPMUATEvent:The event starts at [StartTime], stops at [EndTime], and event state is [EventState] (InstanceTypeName=[InstanceTypeName], InstanceTypeId=[InstanceTypeId], InstanceName=[InstanceName], MeasureId=[MeasureId], MeasureName=[MeasureName]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwSysReloadNotification:The board was reboot. (ReloadIndex=[ReloadIndex], ReloadImage=[ReloadImage], ReloadCfg=[ReloadCfg], ReloadReason=[ReloadReason], ReloadTime=[ReloadTime], ReloadAction=[ReloadAction], ReloadPaf=[ReloadPaf], ReloadLicense=[ReloadLicense], ReloadPatch=[ReloadPatch]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwEntityReset:Physical entity reset. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=66561,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalContainedIn=[EntPhysicalContainedIn],EntPhysicalName=[EntPhysicalName],RelativeResource=[RelativeResource],ReasonDescription=Cause 1: A fault may occur on the ECM channel. Cause 2: The CPU usage on the master MPU is too high.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwVplsVcStatusChange:The status of the VPLS VC changed. (VsiName=[VsiName], PwId=[PwId], RemoteIp=[RemoteIp], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], HWPwState=[HWPwState], HWPwWorkingState=[HWPwWorkingState], SysUpTime=[SysUpTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwCommunicateError:The communication channel failed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapEntType=[EntityTrapEntType],EntityTrapFaultID=140317,EntityCommunicateType=[EntityCommunicateType],Reason=The communication between the CMUs is abnormal)",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/ospfv3NssaTranslatorStatusChange:The status of the NSSA translator changes. (RouterId=[RouterId], AreaId=[AreaId], NSSATranslatorState=[NSSATranslatorState], ProcessId=[ProcessId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_RSVP/2/hwRsvpTeHelloLost:The RSVP Hello neighbor is lost. (IpAddress=[ipaddr])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpExtTimePortLost:The external Time Port status changed. (hwPtpExtTimePortStatus=[hwPtpExtTimePortStatus], hwPtpExtTimePortType=[hwPtpExtTimePortType])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/2/hwTwampMemTwoWayLossRatioExceed:The two-way loss ratio of the TWAMP test instance exceeded the upper threshold in the 1-minute statistics period. (Test SessionId=[sessionId], MemberId=[memberId], MemberName=[memberName], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisAuthenticationTypeFailure:The authentication type of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVplsVcDown:The status of the VPLS VC turned DOWN. (VsiName=[VsiName], PwId=[PwId], RemoteIp=[RemoteIp], PwType=[PwType], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], SysUpTime=[SysUpTime], TunnelPolicyName=[TunnelPolicyName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwcfgmaneventlog:Configuration file was changed. (LogIndex=[LogIndex], SrcCmd=[SrcCmd], SrcData=[SrcData], DestData=[DestData], TerUser=\"[TerUser]\", SrcAddr=[SrcAddr], ConfigChangeId=[ConfigChangeId], LogTime=[LogTime], CfgBaselineTime=\"[CfgBaselineTime]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnMacDupVpnAlarm:MAC addresses were suppressed in an EVPN instance due to frequent MAC duplication. (EVPNInstanceName=[EVPNInstanceName], TAG=[TAG], MAC=[MAC], InterfaceName1=[InterfaceName1], InterfaceName2=[InterfaceName2], InterfaceName3=[InterfaceName3], InterfaceName4=[InterfaceName4], IPAddress1=[IPAddress1], IPAddress2=[IPAddress2], IPAddress3=[IPAddress3], IPAddress4=[IPAddress4], VcId=[VcId], EvplInstId1=[EvplInstId1], EvplInstId2=[EvplInstId2], EvplInstId3=[EvplInstId3], EvplInstId4=[EvplInstId4])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwEntityCommunicateError:Communication-channel is detected failed. (EntityPhysicalIndex=[EntityPhysicalIndex],BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=68235,BaseTrapEventType=[BaseTrapEventType],EntPhysicalContainedIn=[EntPhysicalContainedIn],EntPhysicalName=[EntPhysicalName],RelativeResource=[RelativeResource],ReasonDescription=The serial management bus of the board malfunctions.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwSfbereAlarm:Exceeding block error B2 counter in the multiplex section alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/4/hwIPSecPkiWhitelistCnNumberTrap:The number of data in PKI whitelists reached the alarm threshold. (Threshold=[WhitelistThrehold], Current Number=[WhitelistCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisVersionSkew:IS-IS received a PDU with incorrect ProtocolVersion. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduProtocolVersion=[isisPduProtocolVersion], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/6/hwBgpRoaCheckFail:The checking result of export ROA is failed. (InstanceName=[InstanceName],VPNInstance=[VPNInstance],AddrFamilyAfi=[AddrFamilyAfi],AddrFamilySafi=[AddrFamilySafi])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsRTDThresholdNotification:The RTD of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], RTDOverThresholds=[RTDOverThresholds])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ThirdPartRouteBeDeletedByPurge:OSPFv3 routes advertised by another device were deleted. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], TotalNodeNum=[hwOspfv3TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv3PurgeHostName1], HostIpAddress=[hwOspfv3PurgeIpAddress1], RouterID=[hwOspfv3PurgeRouterId1] (2) HostName=[hwOspfv3PurgeHostName2], HostIpAddress=[hwOspfv3PurgeIpAddress2], RouterID=[hwOspfv3PurgeRouterId2] (3) HostName=[hwOspfv3PurgeHostName3], HostIpAddress=[hwOspfv3PurgeIpAddress3], RouterID=[hwOspfv3PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwFlexEPhyRemoteFaultAlarm:The remote fault alarm of FlexE physical interface has occurred. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/4/hwFwdEngineNotReady:The board forward engine is not ready. (EntiyPhysicalindex=[EntiyPhysicalindex], EntPhysicalindex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelOBResume:Main LSP of Tunnel resumes from backup LSP in Ordinary Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwBaseArpVlanCarTrap:ARP VLAN CAR took effect on an interface,which was probably due to a loop on the interface. (Logical Interface = [LOGICALINTERFACE], Physical Interface = [PHYSICALINTERFACE], Vlan = [VLAN])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/2/hwSrPolicyResourceTotalCountExceed:The total number of SR Policy resources reached the maximum number of SR Policy resources that can be used. (hwSrPolicyResourceType=[SrPolicyResourceType], hwResourceCurrentCount=[ResourceCurrentCount], hwResourceTotalCount=[ResourceTotalCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2NbrExceedThreshold:The number of neighbors exceeds the upper of configured threshold. (hwOspfv2NbrThresholdUpper=[hwOspfv2NbrThresholdUpper])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3RecvLsaExceedThreshold:The number of LSAs learned by OSPFv3 exceeded the threshold. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3RecvLsaUpper=[hwOspfv3RecvLsaUpper])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/hwRisingAlarm:Alarm Id monitors alarm OID variable with the sample type, and the sampled alarm value is greater than or equal to rising threshold. (AlarmId=[AlarmId], OID=[OID], SampleType=[SampleType], SampleValue=[SampleValue], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TCP/4/hwTCPMD5AuthenFail:TCP MD5 authentication failed. (tcpConnLocalAddress=[tcpConnLocalAddress], tcpConnLocalPort=[tcpConnLocalPort], tcpConnRemAddress=[tcpConnRemAddress], tcpConnRemPort=[tcpConnRemPort], hwTCPProtocol=[hwTCPProtocol], hwTCPVrfName=[hwTCPVrfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessDown:Session changes to DOWN. (Index=[Index], ConfigurationName=[ConfigurationName], PeerIp=[PeerIp], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], DefaultIp=[DefaultIp], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], NextHop=[NextHop], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop], EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RBS/4/hwRbsDown:The TCP connection of RBS was torn down. (RBS name=[RbsName], Down reason=[RbsDownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PCEP/2/hwMplsTunnelDelegationReturn:The results of TE LSP was returned by controller. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], LspRole=[LspRole])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2RouteBeDeletedByPurge:OSPF routes advertised by the local device were deleted by another device. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], TotalNodeNum=[hwOspfv2TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv2PurgeHostName1], HostIpAddress=[hwOspfv2PurgeIpAddress1], RouterID=[hwOspfv2PurgeRouterId1] (2) HostName=[hwOspfv2PurgeHostName2], HostIpAddress=[hwOspfv2PurgeIpAddress2], RouterID=[hwOspfv2PurgeRouterId2] (3) HostName=[hwOspfv2PurgeHostName3], HostIpAddress=[hwOspfv2PurgeIpAddress3], RouterID=[hwOspfv2PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPortStateChange:The port status changes. (hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortName=[hwPtpPortName], hwPtpPortState=[hwPtpPortState], hwPtpOldPortState=[hwPtpOldPortState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelHSBSwitch:Main LSP of Tunnel switches to backup LSP in HSB. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VXLAN/4/hwBoardNotSupportLoadBalanceL2VxlanDeepHashAlarmOccur:The board did not support L2vxlan deep hash function. (Slot=[slotID])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/routeThresholdExceed:The number of existed routing entries exceeded the global upper threshold. (LimitType=[LimitType], AddressFamily=[AddressFamily], CurrentCount=[CurrentCount], LimitCount=[LimitCount], ThresholdCount=[ThresholdCount], ReasonType=[ReasonType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwTempAlarm:Ambient temperature was abnormal. (EntityPhysicalIndex=[EntityPhysicalIndex],EntityThresholdType=[EntityThresholdType],EntityThresholdWarning=[EntityThresholdWarning],EntityThresholdCurrent=[EntThresholdCurrent],EntityTrapFaultID=140544,EntityTrapReasonDescr=The ambient temperature was too high)",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPMACIPConflict:MAC and IP address conflict. (Conflict interface=[LogicIfName], Conflict MAC address=[ConflictMAC], Conflict IP address=[ConflictIP], Received packet's destination MAC address=[DstMAC], Received packet's destination IP address=[DstIP], Received packet's VLAN=[Vlan], Received packet's CE-VLAN=[Cevlan], Input interface=[PhyIfName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ThirdPartRouteBeDeletedByPurge:OSPF routes advertised by another device were deleted. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], TotalNodeNum=[hwOspfv2TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv2PurgeHostName1], HostIpAddress=[hwOspfv2PurgeIpAddress1], RouterID=[hwOspfv2PurgeRouterId1] (2) HostName=[hwOspfv2PurgeHostName2], HostIpAddress=[hwOspfv2PurgeIpAddress2], RouterID=[hwOspfv2PurgeRouterId2] (3) HostName=[hwOspfv2PurgeHostName3], HostIpAddress=[hwOspfv2PurgeIpAddress3], RouterID=[hwOspfv2PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSBoardHQoSFailAlarm:Some HQoS functions on the board do not take effect. (ServiceType=[service-type],Slot=[slot-id],Reason=[reason-id],ReasonDescription=[reason-description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsUnauthorizedRootUser:An unauthorized root user has been detected. (eventCategory=[event-category], occurTime=[occurTime], result=[result], unauthorizedUser=[unauthorizedUser], gid=[gid], home=[home], shell=[shell], uid=[uid], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/nbrrestarthelperstatuschange:The neighbor exits from the restart helper state. (RouterId=[RouterId], NbrIfIndex=[NbrIfIndex], NbrIfInstId=[NbrIfInstId], NbrRtrId=[NbrRtrId], NbrRestartHelperStatus=[NbrRestartHelperStatus], NbrRestartHelperAge=[NbrRestartHelperAge], NbrRestartHelperExitReason=[NbrRestartHelperExitReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessReachLimitBindIf:Try to build session, but the session number in the IO board with interface has reached the limit, the new session binding with interface can not be created. (ConfigurationName=[ConfigurationName], InterfaceName=[InterfaceName], SessionLimitPerBoard=[SessionLimitPerBoard])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisRouteBeDeletedByPurge:IS-IS routes advertised by the local device were deleted by another device. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], TotalNodeNum=[hwIsisTotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwIsisHostName1], HostIpAddress=[hwIsisHostIpAddress1], SystemID=[hwIsisSystemID1] (2) HostName=[hwIsisHostName2], HostIpAddress=[hwIsisHostIpAddress2], SystemID=[hwIsisSystemID2] (3) HostName=[hwIsisHostName3], HostIpAddress=[hwIsisHostIpAddress3], SystemID=[hwIsisSystemID3])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/4/hwIfitmcpSlaDataAlarm:IFITMCP has not been generating SLA data for a noticeable period of time.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwIfMonitorTxPauseFrameRising:The threshold crossing alert of TX PAUSE appears. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorTxPauseFrameStatistics=[hwIfMonitorTxPauseFrameStatistics],hwIfMonitorTxPauseFrameHighThreshold=[hwIfMonitorTxPauseFrameHighThreshold],hwIfMonitorTxPauseFrameLowThreshold=[hwIfMonitorTxPauseFrameLowThreshold],hwIfMonitorTxPauseFrameInterval=[hwIfMonitorTxPauseFrameInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsExtTunnelDown:The TE tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], OutIfIndex=[OutIfIndex], hwMplsTunnelInterfaceName=[hwMplsTunnelInterfaceName], hwMplsTunnelType=[hwMplsTunnelType], hwMplsTunnelAdminStatus=[hwMplsTunnelAdminStatus], hwMplsTunnelOperStatus=[hwMplsTunnelOperStatus], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], OutIfName=[OutIfName], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/lldpRemTablesChange:LLDP neighbor information was changed. (Added=[lldpStatsRemTablesInserts], Deleted=[lldpStatsRemTablesDeletes], Dropped=[lldpStatsRemTablesDrops], Aged=[lldpStatsRemTablesAgeouts])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BIER/2/hwBierPrefixBfridConflict:In the same BIER sub-domain, [CurrentConfig] configuration conflicts exist. (AddressFamily=[AddressFamily], SubdomainID=[SubdomainID], ConflictType=[ConflictType], ConflictBFRID=[ConflictBFRID], ConflictPrefix=[ConflictPrefix], ConflictState=[ConflictState], AdvertiserCurrent=[AdvertiserCurrent], AdvertiserNew=[AdvertiserNew], BierPrefixCurrent =[BierPrefixCurrent], BierPrefixNew=[BierPrefixNew], BFRIDCurrent=[BFRIDCurrent], BFRIDNew=[BFRIDNew])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2IntraAreaRouteridConflict:Router IDs conflict in an intra area. (ProcessId=[ProcessId], AreaId=[AreaId], SelfIfnetIndex=[SelfIfnetIndex], NbrIpAddr=[NbrIpAddr], RouterId=[RouterId], NbrRtrId=[NbrRtrId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwOduOciAlarm:ODU Open connection indication defect. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PORT/5/hwOutputRateChangeOverThresholdNotice:The output rate change ratio exceeded the threshold. (IfIndex = [IfIndex], InterfaceName = [InterfaceName], ThresholdPercent = [ThresholdPercent], CurrentStatisticalPeriodRate = [CurrentStatisticalPeriodRate] Mbit/s, LastStatisticalPeriodRate = [LastStatisticalPeriodRate] Mbit/s)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdBoardLimitThresholdExceed:IGMP or MLD total entries count on the board reached the upper threshold. (AddressFamily=[AddressFamily], SlotName=[SlotName], CurrentCount=[CurrentCount], LimitCount=[LimitCount], Threshold=[Threshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/3/hwExtAllMemberDownNotify:The last member interface link status changes to down. (TrunkIfIndex=[ifIndex], TrunkName=[ifName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2LinkCostAdjustment:An OSPF link cost adjustment event occurs. (ProcessId=[hwOspfv2ProcessIdIndex], AreaId=[hwOspfv2AreaIdIndex], InterfaceIndex=[hwOspfv2InterfaceIndex], InterfaceName=[hwOspfv2InterfaceName], Event=[hwOspfCostAdjustReason], OriginalCost=[hwOspfOriginalCost], AdjustedCost=[hwOspfAdjustedCost])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwIpv6RouteThresholdExceed:The number of IPv6 routes in the VPN instance exceeded the alarm threshold multiplied by the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], alarm threshold=[midThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IFIT_OM/4/hwIfitExceedInstanceAlarm:The total number of IFIT instances on the interface board reaches the upper limit. (Type=[Type],SlotId=[SlotId],FlowLimitNum=[FlowLimitNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsJitterThresholdNotificationDS:The JITTER-DS of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JITTEROverThresholdsDS=[JITTEROverThresholdsDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/3/hwEvpnMacExceed:The number of MACs in the EVPN instance exceeded the maximum value. (EVPNInstanceName=[EVPNInstanceName], EVPNInstanceMACCount=[EVPNInstanceMACCount], EVPNInstanceMaxMACValue=[EVPNInstanceMaxMACValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisIPConflict:An IS-IS IP address conflict between the local device and another device was detected. (SysInstance=[hwisisSysInstance], Level=[hwisisSysLevelIndex], ConflictType=[hwIsisConflictType], ConflictIP=[hwIsisConflictIpAddr], ConflictSystemID1=[hwIsisConflictSystemID], ConflictSystemID2=[hwIsisConflictSystemID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/isisAttemptToExceedMaxSequence:The LSP sequence number has reached the maximum value. (SysInstance=[isisSysInstance], SysLevel=[isisSysLevelIndex], LspId=[isisPduLspId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwcfgStartupFileIntegrityFail:Integrity check of the startup configuration file failed. (FileType=[FileType])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiHttpGetCrlFail:Get crl unsuccessfully with HTTP. (CrlUrl=[CrlUrl], CrlUrlVrfName=[VrfIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisCorruptedLSPDetected:The checksum of LSP is wrong. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisPduLspId=[isisPduLspId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPMACConflict:A MAC address conflict occurs. (ConflictInterface=[LocalInterface], ConflictMac=[ConflictMac], SourceIpAddress=[RemoteIp], PeVlan=[PeVlan], CeVlan=[CeVlan], InboundInterface=[InboundInterface])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/2/hwSrPolicyCandipathDown:The SR Policy's candidate path went down. (hwSrPolicyEndpoint=[SrPolicyEndpoint],hwSrPolicyColor=[SrPolicyColor],hwProtocolOrigin=[ProtocolOrigin],hwNodeAddress=[NodeAddress],hwASN=[ASN],hwDiscriminator=[Discriminator],hwPreference=[Preference],hwCandipathDownReason=[DownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwFlexEGrpSpeedModeMismatch:The speed modes of the FlexE physical interfaces in the FlexEGroup mismatch alarm. (GroupIndex=[hwFlexEGroupIndex],GroupName=[hwFlexEGroupName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/hwMplsLdpMultiLinkCfgInconsistent:MPLS LDP multi-link or local-remote adjacencys configurations are inconsistent, LDP Session or LSP maybe interrupts. (VrfName=[VrfName], PeerLsrId=[PeerLsrId], LocalLsrId=[LocalLsrId], ConfigIfName=[ConfigIfName], ConfigRmtPeerIp=[ConfigRmtPeerIp], ConfigType=[ConfigType], EffectKa=[EffectKa], EffectTa=[EffectTa], EffectLam=[EffectLam])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ThirdPartRouteBeDeletedByPurgeInexact:OSPF routes advertised by another device were deleted, and the possibly faulty device did not support OSPF flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospf flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], RuledOutDeviceNum=[hwOspfv2RuledOutDeviceNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwCfgChgNotify:Configuration changed. (CurrentCfgChgSeqID=[CurrentCfgChgSeqID],CfgChgSeqIDReveralCount=[CfgChgSeqIDReveralCount],CfgChgTableMaxItem=[CfgChgTableMaxItem],CfgBaselineTime=[CfgBaselineTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlFeatureFunInactive:Item is inactive. (ItemName=[hwGtlItemName], FeatureName=[hwGtlFeatureName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelBfdPathMismatch:The forward primary LSP path is the same as the reverse hot-standby LSP path, and the reverse primary LSP path is the same as the forward hot-standby LSP path, causing path mismatches. (Local: SessionTunnelId=[LocalSessionTunnelId], LocalLspId=[LocalLocalLspId], IngressLsrId=[LocalIngressLsrId], EgressLsrId=[LocalEgressLsrId], TunnelName=[LocalTunnelName]. Peer: SessionTunnelId=[PeerSessionTunnelId], LocalLspId=[PeerLocalLspId], IngressLsrId=[PeerIngressLsrId], EgressLsrId=[PeerEgressLsrId], TunnelName=[PeerTunnelName]. LocalSignalledTunnelName=[LocalSignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsResourceThresholdExceed:The number of used MPLS resources exceeded the threshold. (hwMplsResourceType=[MplsResourceType], hwMplsResourceCurrentCount=[ResourceCurrentCount], hwMplsResourceThreshold=[ResourceThreshold], hwMplsResourceTotalCount=[ResourceTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelBBSwitch:Main LSP of Tunnel switches to backup LSP in Best-effort Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],ulTunnelAdminStatus=[ulTunnelAdminStatus],ulTunnelOperStatus=[ulTunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmUnexpectedMEP:MEP received a CCM with unexpected MEP. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MRM/2/hwMcastEntryExceed:Multicast routing total entries of all instances cannot be created because the limit is reached. (LimitType=[LimitType], AddressFamily=[AddressFamily], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysSlaveSwitchSuccessNotification:Succeeded to run slave switch with SlvSwitchIndex [SlvSwitchIndex], ChassisNum[ChassisNum], SlaveSwitchSrc[SlaveSwitchSrc], SlaveSwitchDst[SlaveSwitchDst].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/2/IPv4VxlanTunnelDown:The IPv4 vxlan tunnel status changes. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr], TunnelStatus=[TnlStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSBgpFlowspecDestinationCommunityOverAlarm:The number of BGP FlowSpec rules matching the community of the destination IP address reaches the upper limit. (Address Family=[address-family])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/1/Session-Down-MIB:The LDP session status is Down. (PeerLsrId=[PeerLsrId], VrfName=[VrfName], SessionType=[SessionType], IfName=[IfName], SubReason=[SubReason], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/4/hwRadiusAuthServerDown:The communication with the RADIUS authentication server fails. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/authenticationFailure:Failed to login through SNMP.(IPAddressType=[IPAddressType], IPAddress=[IPAddress], ReasonInfo=[ReasonInfo].)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPV6/2/ipv6IfStateChange:The IPv6 status changes. (ifName=[ipv6IfDescr], AdminStatus=[ipv6IfAdminStatus], OperStatus=[ipv6IfOperStatus], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisAdjAfDown:One address family of the IS-IS dual-stack neighbor is down. (SysInstance=[hwisisSysInstance], SysLevel=[hwisisSysLevelIndex], IfIndex=[ifIndex], IfName=[ifName], AdjSysID=[hwIsisAdjSysID], AddressFamily=[hwIsisAddressFamily], Reason=[hwIsisAdjAfDownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/L3VPN_MIB_TRAP_THRESH_EXCEED:The number of prefixes in the VPN instance exceeded the maximum value. (VpnInstanceName=[VpnInstanceName], VpnInstanceRouteCount=[VpnInstanceRouteCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisAdjacencyChange:ISIS adjacency state change. (SysInstance=[IsisSysInstance], SysLevel=[IsisSysLevelIndex], CircIndex=[IsisCircIndex], CircIfIndex=[IsisCircIfIndex], LspId=[IsisPduLspId], AdjState=[IsisAdjState], IfIndex=[IfIndex], IfName=[IfName], Reason=[HwIsisAdjChgReason], SubReason=[HwIsisAdjChgSubReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSInterfaceDownRedirectNextHopInvalidAlarm:The interface goes down and the redirection next hop becomes invalid. (RdrType=[rdr-type],SlotId=[slot-id],OutboundInterface=[interface-name],Behavior=[behavior-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPassiveFiberLengthChange:The fiber length of the passive port changed. (hwPtpCurrentIfIndex=[hwPtpCurrentIfIndex], hwPtpPortName=[hwPtpPortName], hwPtpPortRingFiberLengthChangeValue=[hwPtpPortRingFiberLengthChangeValue], hwPtpPortRingFiberLengthChangeValueFlag=[hwPtpPortRingFiberLengthChangeValueFlag])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PPP/4/hwPppLoopbackDetect:Interface loopback is detected. (IfIndex=[IfIndex], HwBaseTrapSeverity=[HwBaseTrapSeverity], HwBaseTrapProbableCause=[HwBaseTrapProbableCause], HwBaseTrapEventType=[HwBaseTrapEventType], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsAbnormalBehaviorDetected:The abnormal behavior has been detected by HIPS. (eventCategory=[eventCategory], eventType=[eventType], level=[level], occurTime=[occurTime], result=[result], user=[user], visitorIp=[visitorIp], evidence=[evidence], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2RouteLoopDetected:The local device has detected an OSPF routing loop. (LoopType=[LoopType], DetectProtocolAttr=[DetectProtocolAttr], RedistributeID1=[RedistributeID1], RedistributeID2=[RedistributeID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/pingTestCompleted:Ping entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], AddressType=[AddressType], Address=[Address], MinRtt=[MinRtt], MaxRtt=[MaxRtt], AverageRtt=[AverageRtt], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], RttSumOfSquares=[RttSumOfSquares], LastGoodProbe=[LastGoodProbe])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrSwitch:Tunnel frr switches. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], BypassSessionTunnelId=[BypassTunnelId], BypassLocalLspId=[BypassLocalLspId], BypassIngressLsrId=[BypassIngressLsrId], BypassEgressLsrId=[BypassEgressLsrId], TunnelType=[TunnelType], ProtectedIfName=[ProtectedIfName], BypassTunnelPath=[BypassTunnelPath], SubGroupId=[SubGroupId], SubGroupOrignatorId=[SubGroupOrignatorId], FrrMethod=[FrrMethod])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/4/hwOduAisAlarm:ODU Alarm indication signal. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/2/hwSrPolicyDown:The SR Policy went down. (hwSrPolicyEndpoint=[SrPolicyEndpoint], hwSrPolicyColor=[SrPolicyColor], hwSrPolicyDownReason=[DownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwPhysicalPortBip8SdError:BIP8 SD alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=\"[hwPhysicalPortName]\",hwPhysicalPortBIP8SDErrorThreshold=[hwPhysicalPortBIP8SDErrorThreshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SPM/2/hwSysImageDamagedNotification:The software package is damaged. (PhysicalName:[PhysicalName], PackageName:[PackageName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2RouteBeDeletedByPurgeInexact:OSPF routes advertised by the local device were deleted by another device, and the possibly faulty device did not support OSPF flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospf flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], RuledOutDeviceNum=[hwOspfv2RuledOutDeviceNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/3/vrrpTrapAuthFailure:VRRP authentication failed. (vrrpTrapPacketSrc=[vrrpTrapPacketSrc], vrrpTrapAuthErrorType=[vrrpTrapAuthErrorType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_QOS/4/hwXQoSBoardServiceMismatchEvent:The board does not support the service. (EntityPhysicalIndex=[entity-physical-index], ServiceID=[service-id], EntPhysicalName=[entity-physical-name], ServiceName=[service-name], Precautions=[precautions])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwVfpSysCheckErr:A kind of forwarding system error occurred. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=148482,Reason=[EntityTrapReasonDescr])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/3/hwGtlItemMismatch:The license item or serial number of chassis [hwGtlChassisID] mismatched with the one of the main chassis.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/4/hwGtlLicenseStateChange:License state changed from [hwGtlLicensePreviousState] to [hwGtlLicenseState].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsLspThresholdExceed:The lsp count exceeds the threshold. (hwMplsLspProtocol=[LspProtocol], hwMplsLspCurrentCount=[LspCurrentCount], hwMplsLspThreshold=[LspThreshold], hwMplsLspTotalCount=[LspTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/2/hwMgmdGMPBoardLimit:Membership report message is discarded because the IGMP or MLD group membership limitation on the board is exceeded. (AddressFamily=[AddressFamily], SlotName=[SlotName], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/warmStart:OID [oid] warmStart.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/mplsTunnelDown:Tunnel status changes to Down. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], OutIfIndex=[OutIfIndex], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], TunnelName=[TunnelName], OutIfName=[OutIfName], SubReason=[SubReason], Reason=[DownReason], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPortNonSupport:In current link mode, the hardware, such as boards and optical modules, do not support PTP time synchronization. (hwPtpChassisId=[hwPtpChassisId], hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortName=[hwPtpPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiOutRtpSerOverThreshold:The outbound RTP-SER of the channel exceeds the threshold. (ChannelName=[hwEmdiChannelName], ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], RtpSerThreshold=[hwEmdiRtpSerThreshold], RtpSer=[hwEmdiRtpSerValue], Slot=[hwEmdiChannelSlot], Interface=[hwEmdiChannelInterface])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwL3LoopDetectAlarmVpn:L3 loop detect alarmed. (ChassisID=[hwL3LoopDetectChassisID], Slot=[hwL3LoopDetectSlotID], IP=[hwL3LoopDetectIPAddr], VPN=[hwL3LoopDetectVPNName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimSrcPerGrpNumLimit:At least one multicast group's multicast source number reached the upper limit. (AddressFamily=[AddressFamily], InstanceName=[InstanceName], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserLogout:A user is logout. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwBlockLabelThresholdExceed:The block label usage exceeds the threshold, which may affect the creation of BGP/L2VPNs.(hwBlockLabelTotalCount=[BlockLabelTotalCount], hwBlockLabelCurrentCount=[BlockLabelCurrentCount], hwBlockLabelThresholdUpperLimit=[BlockLabelThresholdUpperLimit], hwBlockLabelThresholdLowerLimit=[BlockLabelThresholdLowerLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwBlockLabelTotalCountExceed:The block label count reaches the upper limit. (hwBlockLabelTotalCount=[BlockLabelTotalCount], hwBlockLabelCurrentCount=[BlockLabelCurrentCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/hwMplsLdpMappingCountExceed:The number of LDP label mapping sent or received on the device exceeded the upper limit. (Type=[Type], VPN name=[VrfName], MappingTotalCount=[MappingTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelHSBResume:Main LSP of Tunnel resumes from backup LSP in HSB. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PORT/1/hwOpticalModuleIsNotAuthorized:The optical module was not certified by Huawei Router. (InterfaceIndex=[hwPhysicalPortThrIfIndex],InterfaceName=[hwPhysicalPortThrName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/3/hwBfdSessCreateFail:The BFD session fails to be created for the service. (ServiceName=[ServiceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/1/hwSystemMemoryOverload:The memory usage exceeds the reliability overload threshold. (TrapSeverity=[TrapSeverity], EventType=[EventType], PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], UsageValue=[UsageValue], Unit=[Unit], UsageThreshold=[UsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PCEP/4/hwPceDelgateResLimitExceed:PCE server entering resource limit exceeded state.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HDLC/4/hwHdlcLoopbackDetect:Interface loopback is detected. (InterfaceIndex=[InterfaceIndex], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/hwLspTraceProbe:Lsp MPLS Echo packet event. (hwLspTunnelID=[hwLspTunnelID], hwLspSenderAddress=[hwLspSenderAddress], hwLspEndPointAddress=[hwLspEndPointAddress], hwLspTTL=[hwLspTTL], hwLspHandle=[hwLspHandle])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpBackwardTransNotification:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Addr], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState],VpnInstance=[VpnInstance])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/invalid-join-prune:PIM receives an Invalid Join/Prune message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddrType=[GroupMappingAddrType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddrType=[GroupMappingRPAddrType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvJPAddrType=[InvJPAddrType], InvJPOriginAddr=[InvJPOriginAddr], InvJPGrpAddr=[InvJPGrpAddr], InvJPRpAddr=[InvJPRpAddr], NbrIfIndex=[NbrIfIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime], NbrName=[NbrName], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ImportAseRouteExceed:The number of AS-external LSAs generated when an OSPFv3 process imports external routes exceeds the maximum number. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3MaxLimit=[hwOspfv3MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwOtuSdAlarm:OTU Signal degrade. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanIPv6TnlDown:The status of the IPv6 VXLAN tunnel changed to down. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr], TunnelStatus=[Tnl6Status])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiRtpLrOverThreshold:Channel RTP-LR exceeds the threshold. (ChannelName=[hwEmdiChannelName], ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], RtpLrThreshold=[hwEmdiRtpLrThreshold], RtpLr=[hwEmdiRtpLrValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisThirdPartRouteBeDeletedByPurge:IS-IS routes advertised by another device were deleted. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], TotalNodeNum=[hwIsisTotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwIsisHostName1], HostIpAddress=[hwIsisHostIpAddress1], SystemID=[hwIsisSystemID1] (2) HostName=[hwIsisHostName2], HostIpAddress=[hwIsisHostIpAddress2], SystemID=[hwIsisSystemID2] (3) HostName=[hwIsisHostName3], HostIpAddress=[hwIsisHostIpAddress3], SystemID=[hwIsisSystemID3])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwLinkHeartbeatDropAlarm:The link-heartbeat function detected that the packet loss rate reached or exceeded the threshold. (InterfaceIfIndex=[InterfaceIfIndex], InterfaceName=[InterfaceName], SendInterfaceName=[SendInterfaceName], RecvInterfaceName=[RecvInterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VFS/5/hwFlhSyncSuccessNotification:Succeeded to copy file by hwFlhSyncTable with FlhSyncIndex [FlhSyncIndex], FlhSyncSrcFile [FlhSyncSrcFile], FlhSyncDstFile [FlhSyncDstFile].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-TE/2/hwAddrConflictNode:RSVP tunnels failed to be established due to path loop or the address conflict. Check the involved node. (ConflictAddrNode=[nodeAddr])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwMacHopAlarmRaisingThreshold:Mac-hopping exist. (VlanId=[VlanId], Vsi=[vsi_name], BDId=[BD_ID], the port list of Mac-hopping = [PortName1], [PortName2], [PortName3], [PortName4], the peer list of Mac-hopping = [PeerList], DetectMac = [DetectMac], trustport = [TrustPortName], trustpeer = [TrustPeerInfo])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/5/hwmplsldpvirtualtunnelup:The LDP virtual tunnel went Up. (LdpVirtualTunnelFEC=[LdpVirtualTunnelFEC])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/neighbor-loss:PIM neighbor loss. (NbrIntIndex=[NbrIntIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime], NbrIntName=[NbrIntName], InstanceID=[InstanceID], InstanceName=[InstanceName], NeighborLossReason=[NeighborLossReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwRpkiSessionASPAExceedThreshold:The number of ASPA records received from the ASPA server exceeded the configured threshold. (InstanceId=[InstanceId],SessionRemoteAddrType=[SessionIPAddrType],SessionRemoteAddr=[SessionIPAddr],MaxASPANum=[AspaLimitNum],AlarmThreshold=[AspaLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFlexECalendarMismatch:Alarm of mismatch between the actually received and expected client calendars on the FlexE Group. (GroupIndex=[hwFlexEGroupIndex],GroupName=[hwFlexEGroupName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisLspRetranExceedLimit:The number of IS-IS LSP retransmissions on an interface exceeds the limit. (SysInstance=[hwisisSysInstance], InterfaceName=[hwIsisIfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwIsisThirdPartRouteBeDeletedByPurgeExact:IS-IS routes advertised by another device were deleted. Reset or isolate the faulty device from the network. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpTimeSyncFaulty:Time source traced status is faulty. (hwPtpTimeSynchronizationStatus=[hwPtpTimeSynchronizationStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwIpv4PrefixThresholdExceed:The number of IPv4 prefixes exceeded the threshold. (PrefixCount=[PrefixCount], MaxValue=[MaxValue], ThresholdLowerLimit=[ThresholdLowerLimit], ThresholdUpperLimit=[ThresholdUpperLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/3/hwNtpDynamicSessionLimitReach:NTP dynamic session number reached the limit.(LimitNumber=[LimitNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/1/hwNetconfServerConnectionInterrupt:The netconf session is interrupted. (IPType=[IPType], PeerIp=[IPAddr], VpnName=[vpnName], Reason=[almReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfVirtIfStateChange:The status of the virtual interface changes. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], VirtIfState=[VirtIfState], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwRouteLoopDetected:The local device has detected a routing loop. (LoopType=[loopType], DetectProtocol=[detectProtocol], DetectProtocolAttr=[detectProtocolAttr], RedistributeID1=[redistributeID1], RedistributeID2=[redistributeID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwPtimAlarm:The trace identifier mismatch in the higher order path alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwFlexEClientIDMismatch:The configured client IDs did not match. (hwPortIfIndex=[hwPortIfIndex],hwPortName=[hwPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsInsecureAlgorithm:An insecure encryption algorithm is used, which has security risks. (Feature Name=[FeatureName], Algorithm Name=[AlgorithmName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwP2mpTeTunnelDown:P2MP tunnel status changes to down. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], P2mpId=[P2mpId], TunnelName=[TunnelName], Reason=[DownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPSpeedLimitAlarm:Packet speed exceeded the configured speed limit. (IfIndex=[IfIndex], SuppressValue=[SupValue], CurrentValue=[CurValue], SuppressType=[SupType], SourceIP=[SrcIp], DestinationIP=[DstIp], VpnInstance name=[VpnName], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnEvplInstDown:The status of the EVPL instance changed to down. (EvplId=[EvplInstanceId], Status=[EvplStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SPM/2/hwSysPatchDamagedNotification:The patch package running on a board was damaged.(PhysicalName=[PhysicalName], PatchName=[PatchName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpFrequencyLockFail:Current lock status of clock frequency synchronization failed. (hwPtpFreqLockStatus=[hwPtpFreqLockStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/2/hwExtLinkDown:The link status of the trunk member interface turned to DOWN. (ifIndex=[ifIndex], ifAdminStatus=[ifAdminStatus], ifOperStatus=[ifOperStatus], ifDescr=[ifDescr], hwIFExtPhyStatus=[hwIFExtPhyStatus], hwIFExtMemberOf=[hwIFExtMemberOf])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/6/hwRadiusAuthServerUp:The communication with the RADIUS authentication server is resumed. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwhqosPortQueueStatDiscardAlarmTrap:On interface [interface-name],[queue] in queue [discard-type] is [discard-value],it reached alarm-threshold.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/2/hwETrunkSecKeyNotCfg:The E-Trunk negotiation fails because no encryption key is configured. (ETrunkId=[ETrunkId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwOduLokAlarm:ODU Locked defect. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwCCCVcDown:The status of the CCC VC turned DOWN. (CccName=[CccName], InterfaceIndex=[InterfaceIndex], InterfaceIndex=[InterfaceIndex2], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnEvplInstUp:The status of the EVPL instance changed to up. (EvplId=[EvplInstanceId], Status=[EvplStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/4/hwOtuAisAlarm:OTU Alarm indication signal. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwisisDatabaseOverload:IS-IS LSP at this node is overloaded start. (SysInstance=[hwisisSysInstance])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisThirdPartRouteBeDeletedByPurgeInexact:IS-IS routes advertised by another device were deleted, and the possibly faulty device did not support IS-IS purge LSP source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display isis purge-source-trace analysis-report command output is the faulty device. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], RuledOutDeviceNum=[hwIsisRuledOutDeviceNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "INFO/1/hwICLogWriteFail:Failed to write log data into the file.(LogType=[LogType], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "INFO/4/hwICLogFileNumThrd:The logfile number is more than 90 percent. (LogFileType=[LogFileType], CurNum=[CurNum], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSInterfaceHQoSFailAlarm:Some HQoS functions on the port do not take effect. (ServiceType=[service-type],Slot=[slot-id],Interface=[interface-name],Reason=[reason-id],ReasonDescription=[reason-description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfTxRetransmit:An OSPF packet is retransmitted on a virtual interface. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId], ProcessId=[ProcessId], RouterId=[RouterId], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsRootkitAttack:Rootkit has been detected. (eventCategory=[event-category], occurTime=[occurTime], result=[result], rootkitName=[rootkitName], detectionType=[detectionType], detectedThreat=[detectedThreat], detectionSource=[detectionSource], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpsGatewayConflict:Received an ARP packet with a duplicate IP address from the interface. (InterfaceName=[InterfaceName], IpAddress=[IpAddress], MacAddress=[MacAddress], PE-VLAN=[PeVLAN], CE-VLAN=[CeVLAN])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwLCFwdPafNonSupport:The current paf does not support the LC . (ChassisId=[ChassisId],SlotId=[SlotId], Reason=[Reason],EntiyPhysicalindex=[EntiyPhysicalindex],EntPhysicalindex=[EntPhysicalindex],EntPhysicalName=[EntPhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/mplsTunnelRerouted:Tunnel Re-routed. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpBdAlarmOnly:Alarm only when loop existed in BD. (BD=[bdid], AlarmReason=[alarmreason], DetectMAC=[detectMAC], InterfaceName1=[AcName1], InterfaceName2=[AcName2], InterfaceName3=[AcName3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPhysicalPortCrcPacketErrorRatio:The CRC-PER(Packet Error Ratio) is rising. (IfIndex=[hwPhysicalPortThrIfIndex],IfName=[hwPhysicalPortThrName],CurrentValue=[hwPhysicalPortCrcPerCurrentValueString],AlarmThreshold=[hwPhysicalPortCrcPerAlarmThresholdString],ResumeThreshold=[hwPhysicalPortCrcPerResumeThresholdString])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpTimeSourceClockClassDecline:The clock-class of input time source is below threshold.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VTY/3/hwVtyExceed:The number of available VTY channels is lower than the threshold. (currentLoginVTYs=[hwCurrentVty], totalVTYs=[hwMaxVty])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/6/hwOspfv3PeerFlappingSuppressStatusChange:The status of peer flapping suppress is changed. (ProcessId=[ProcessId], RouterId=[RouterId], AreaId=[AreaId], ifName=[ifName], SuppressStatus=[SuppressStatus], SuppressReason=[SuppressReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwEthTxFlowFallAlarm:Traffic fall alarm in the transmit direction of an Ethernet interface. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName],hwBandwidthLast=[hwBandwidthLast] bits/sec,hwBandwidthCurrent=[hwBandwidthCurrent] bits/sec)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONFC/2/hwNetconfClientSyncConfigFailed:Failed to synchronize configurations to a peer device. (peerName=[peerName], addrType=[addrType], address=[address])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelOBSwitch:Main LSP of Tunnel switches to backup LSP in Ordinary Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/2/hwTwampTwoWayLocExceed:The two-way loss ratio of the TWAMP test instance reached the LOC threshold in three consecutive test intervals. (Test SessionId=[sessionId], Value=[Value], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpPartialLinkLoss:Link bandwidth lost partly. (TrunkIndex=[TrunkIndex], TrunkIfIndex=[TrunkIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisSystemIdAutoRecover:ISIS-INFO: After a system ID conflict was detected within an IS-IS area, IS-IS changed the system ID automatically. (hwisisSysInstance = [hwisisSysInstance], hwISISConflictSystemID = [hwISISConflictSystemID], hwISISAutoSysId = [hwISISAutoSysId], hwISISLocalIP = [hwISISLocalIP], hwISISRemoteIP = [hwISISRemoteIP]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwPortModeChangeTrap:The speed of port mode is changed. (InterfaceIndex=[InterfaceIndex], InterfaceName=[InterfaceName], PortMode=[PortMode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/2/hwEtrunkStatusTimeOut:The E-Trunk does not receive packets from the peer end for more than 5 minutes. (ETrunkId=[ETrunkId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdGmpLeave:Interface receives an IGMP or MLD Leave message or corresponding group timer on this interface expires. (Interface=[InterfaceName], InterfaceIndex=[InterfaceIndex], SrcStr=[SrcAddr], GrpStr=[GrpAddr], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3LinkCostAdjustment:An OSPFv3 link cost adjustment event occurs. (ProcessId=[hwOspfv3ProcessId], AreaId=[hwOspfv3AreaIdIndex], InterfaceIndex=[hwOspfv3IfIndex], InstanceId=[hwOspfv3IfInstId], InterfaceName=[hwOspfv3IfName], Event=[hwOspfv3CostAdjustReason], OriginalCost=[hwOspfv3OriginalCost], AdjustedCost=[hwOspfv3AdjustedCost])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/4/hwIfitDynFlowIngressNumAlmostExceedAlarm:The number of IFIT dynamic ingress flows reaches 90 percent of the upper limit. (UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IFIT_OM/4/hwIfitStaticFlowNumExceedAlarm:The total number of IFIT static flows and reverse flows in LC board reaches the upper limit. (SlotId=[SlotId],FlowLimitNum=[FlowLimitNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpStateDown:The LACP status of the member port changes to down. (TrunkIndex=[TrunkIndex],PortIfIndex=[PortIfIndex],TrunkId=[TrunkId],TrunkName=[TrunkName],PortName=[PortName],Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDHCPRelayProxyUsrExhaust:The number of DHCP relay proxy entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsThresholdNotification:NQA entry over threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], Threshold1=[Threshold1], CompletionTimeMax=[CompletionTimeMax], RTDOverThresholds=[RTDOverThresholds])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/1/hwIPSecPkiCrlInValid:The crl is invalid. (CrlStartTime=[CrlStartTime], CrlFinishTime=[CrlFinishTime], CrlIssuer=[CrlIssuer], FileName=[FileName], InvalidReason=[InvalidReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/L3VPN_MIB_TRAP_MID_THRESH_EXCEED:The number of prefixes in the VPN instance exceeded the middle threshold. (VpnInstanceName=[VpnInstanceName], VpnInstanceRouteCount=[VpnInstanceRouteCount], MidThresholdValue=[MidThresholdValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisMaxAreaAddressesMismatch:The MaxAreaAddress field of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisPduMaxAreaAddress=[isisPduMaxAreaAddress], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwPatchInstallFail:Patch operation failed. (SlotIndex=[SlotIndex], PatchIndex=[PatchIndex], PackageName=[PackageName], PackageVersion=[PackageVersion], FailReason=[FailReason], PhysicalName=[PhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfPrefixSidConflict:The OSPF prefix-sid conflict is detected. (ProcessId=[hwProcessId], PrefixSid=[hwPrefixSid], PrefixAddress=[hwPrefixAddress], PrefixAddressMask=[hwPrefixAddressMask], Algorithm=[hwAlgorithm], ConflictType=[hwConflictType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/Session-Retry:The number of session initialization messages exceeds the mplsLdpEntityInitSessionThreshold. (PeerLdpId=[PeerLdpId],EntityIndex=[EntityIndex],Times=[InitSessionThreshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/5/hwNetconfServerSessionStart:The NETCONF server created a session. (UserName=[UserName], SessionId=[SessionId], IpAddress=[IpAddress], VpnName=[VpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwP2mpTeSubLspDown:P2MP sub-lsp status changes to down. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], DestAddr=[DestAddr], TunnelName=[TunnelName], LspRole=[LspRole], P2MPID=[P2mpId], SubLspDownReason=[SubLspDownReason], SubLspDownLSRId=[SubLspDownLSRId], SubLspDownIfAddrType=[SubLspDownIfAddrType], SubLspDownIfAddr=[SubLspDownIfAddr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFlexEPhyNumberMismatch:The configured phy-number parameters did not match for the two connected FlexE physical interfaces. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName],hwPhysicalPortLocalPhyNumber=[hwPhysicalPortLocalPhyNumber],hwPhysicalPortRemotePhyNumber=[hwPhysicalPortRemotePhyNumber])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsAbnormalShellDetected:The abnormal shell behavior has been detected. (eventCategory=[event-category], eventType=[event-type], level=[level], occurTime=[occur-time], result=[result], path=[shell-path], operationType=[operation-type], cmdline=[cmdline], type=[attribute-type], from=[old-attribute], to=[new-attribute], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwBaseSecApplicationApperceiveDropRateRising:Security Application-apperceive drop packets alarmed. (ChassisID=[ChassisID], SlotID=[SlotID], Protocol=[Protocol], CurrentRateLow=[CurrentRateLow], CurrentRateHigh=[CurrentRateHigh], NotifyEnabled=[NotifyEnabled], RateThreshold=[RateThreshold], RateInterval=[RateInterval], ProtocolDescription=[ProtocolDescription], Reason=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwVplsVcNumberMaxExceed:The number of VPLS VCs reaches the maximum limit. (LimitClass=[LimitClass], MaxiVcNumber=[MaxiVcNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FM/4/hwAlarmTargetHostDel:Target host [IPAddress] was deleted.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/vrrpTrapNewMaster:The VRRP status changed to master. (ifIndex=[ifIndex], VrId=[VrId], MasterIPAddress=[MasterIPAddress], sysName=[sysName], ifName=[ifName], ChangeReason=[ChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwPmTimAlarm:PM Trail trace identifier mismatch. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwNegotiationFailedAlarm:Auto-negotiation failure alarm. (IfIndex=[hwPhysicalPortIfIndex],IfName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwPimVrfTypeSGThresholdExceed:The number of existed routing entries exceeded the vpn upper threshold. (LimitType=[LimitType], AddressFamily=[AddressFamily], VpnName=[VpnName], CurrentCount=[CurrentCount], LimitCount=[LimitCount], ThresholdCount=[ThresholdCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/hwOspfv3NbrExceedThreshold:The number of neighbors exceeds the upper of configured threshold. (hwOspfv3NbrThresholdUpper=[hwOspfv3NbrThresholdUpper])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpInterfaceRemTablesChange:Neighbor information of the interface was changed. (Interface=[interfaceName], Action=[action], Added=[lldpRemInserts], Deleted=[lldpRemDeletes], RemoteInterfaceName=[remInterfaceName], RemoteDeviceManageAddress=[remManageAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LDP/2/hwMplsLdpLastLocalAdjDown:The last local adjacency in the local-and-remote LDP session went Down because the Hello Hold timer expired. (VrfName=[VrfName], PeerLsrId=[PeerLsrId], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampResponderSessionNumExceed:The number of TWAMP responder session is out of device capability.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/5/hwSumUpgradeSuccess:For system [sysIndex], upgrade [CurrentPackageVersion] successfully.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwLinkHeartbeatChangeAlarm:The link-heartbeat function detected that the packet modification rate reached or exceeded the threshold. (InterfaceIfIndex=[InterfaceIfIndex], InterfaceName=[InterfaceName], SendInterfaceName=[SendInterfaceName], RecvInterfaceName=[RecvInterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwPWVcDown:The status of the PWE3 VC turned DOWN. (VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceIndex=[InterfaceIndex], VcInboundLabel=[VcInboundLabel], VcOutboundLabel=[VcOutboundLabel], SecondaryPw=[SecondaryPw], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], SysUpTime=[SysUpTime], InterfaceName=[InterfaceName], SwitchVcId=[SwitchVcId], TunnelPolicyName=[TunnelPolicyName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwComponentBackupFail:Data backup between the active and standby components failed. (ComponentName=[ComponentName], Process ID=[PID], Block ID=[BlockID])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgB2STransferFail:Failed to transfer the configuration file to (index=[hwCfgBackupIndex]) server [hwCfgBackupServerIp] through [hwCfgBackupProtocol] when automatically backing up the configuration.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSRedirectNextHopEventLog:Route switching in scenarios where a redirection policy with no outbound interface specified is deployed. (SlotId=[slot-id],RdrType=[rdr-type],Nexthop Ip Address=[ip-address],Behavior=[behavior-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPThresholdExceedAlarm:The number of ARP entries exceeded the threshold. (entPhysicalIndex=[entPhysicalIndex], Slot name=[slotname], Threshold=[Threshold], Number of dynamic ARP entries=[DynEntries], Number of static ARP entries=[StatEntries])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwConfigInconsistent:Running configurations on the master and slave main control boards were inconsistent.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwFlexEBwReduceAlarm:The actual bandwidth is less than the configured bandwidth. (hwPortIfIndex=[hwPortIfIndex],hwPortName=[hwPortName],hwPortBW=[hwPortBW])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SPM/4/hwPackageVersionDowngrade:The software version is downgraded. (PreviousPackage=[PreviousPackage],PreviousVersion=[PreviousVersion],CurrentPackage=[CurrentPackage],CurrentVersion=[CurrentVersion])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/piminvalidregister:PIM receives an invalid register message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvRegAddressType=[InvRegAddressType], InvRegOriginAddr=[InvRegOriginAddr], InvRegGrpAddr=[InvRegGrpAddr], InvRegRpAddr=[InvRegRpAddr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IPV4/4/hwIFITNotSupportTunnelEventAlarmOccur:IFIT statistics collection does not support the public network tunnel over which traffic is recursed using this peer IP address. (Peer-IP=[PeerIP], Tunnel Type=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/6/hwNmsPingTrap:NMSPingTrap was sent successfully.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/BACKWARD:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Ipv6Addr], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState], LocalIfName=[LocalIfName], Reason=[Reason], Description=[Description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampMemTwoWayDelayExceed:The two-way delay of the TWAMP test instance exceeded the upper threshold in three consecutive test intervals. (Test SessionId=[sessionId], MemberId=[memberId], MemberName=[memberName], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsDynamicLabelThresholdExceed:The dynamic label usage exceeds the threshold, which will affect the creation of BGP/LDP/RSVPTE/MPLS VPNs. (hwMplsDynamicLabelTotalCount=[DynamicLabelTotalCount], hwMplsDynamicLabelCurrentCount=[DynamicLabelCurrentCount], hwMplsDynamicLabelThresholdUpperLimit=[DynamicLabelThresholdUpperLimit], hwMplsDynamicLabelThresholdLowerLimit=[DynamicLabelThresholdLowerLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpBdAcBlock:The AC interface turned to block state. (BD=[bdid], ACInterfaceName=[acifname], BlockTime=[blocktime], BlockReason=[blockreason], DetectMAC=[mac])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/4/hwSmIaeAlarm:SM Incoming alignment error. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsFilePrivilegeEscalated:The file privilege has been escalated. (eventCategory=[event-category], eventType=[event-type], level=[level], occurTime=[occur-time], result=[result], path=[path], method=[method], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpClockSourceChange:The time source is switched. (hwPtpOldMasterClockId=[hwPtpOldMasterClockId], hwPtpCurrentMasterClockId=[hwPtpCurrentMasterClockId], hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortOldSourcePortNum=[hwPtpPortOldSourcePortNum], hwPtpPortSourcePortNum=[hwPtpPortSourcePortNum], hwPtpOldPortName=[hwPtpOldPortName], hwPtpPortName=[hwPtpPortName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FTP/5/hwFlhOperNotification:The file transfer operation finished. (Operation=[Operation], OperStatus=[OperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiCACertExpired:The CA certificate is nearly expired. (CACertStartTime=[CACertStartTime], CACertFinishTime=[CACertFinishTime], CACertIssuer=[CACertIssuer], CACertSubject=[CACertSubject], FileName=[FileName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/piminvalidjoinprune:PIM receives an Invalid Join/Prune message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddrType=[GroupMappingAddrType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddrType=[GroupMappingRPAddrType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvJPAddrType=[InvJPAddrType], InvJPOriginAddr=[InvJPOriginAddr], InvJPGrpAddr=[InvJPGrpAddr], InvJPRpAddr=[InvJPRpAddr], NbrIfIndex=[NbrIfIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IPV4/4/hwL3ucBoardNotSupportLoadBalanceHashKeyIpAlarmOccur:The board did not support ECMP based on a specified source or destination IP address. (Slot=[slotID])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EAIAD/4/hwAnomalyPacketLoss:Interface flow sudden change and forwarding chip packets loss is detected. (InterfaceName=[hwInterfaceNames],ForwardingChipInfo=[hwForwardingChipInfo])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2LsaRetranExceedLimit:The number of OSPF LSA retransmissions on an interface exceeds the limit. (ProcessId=[hwOspfv2ProcessIdIndex], AreaId=[hwOspfv2AreaId], InterfaceName=[hwOspfv2IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwInsSpaceLackAlarm:Instruction space not enough. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=147968,Reason=The instruction space required is too more.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwSysIssuNotification:System upgrade with IssuState [IssuState], IssuCdtCheck [IssuCdtCheck].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3DeleteRouteByPurge:The local device deleted OSPFv3 routes advertised by other devices. Reset or isolate the device from the network. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPicLcdAlarm:Loss of code group synchronization alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],SlotID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/interface-election:The interface is elected as a DR. (IfIndex=[IfIndex], IfName=[PimInterfaceName], IfIPverion=[IfIPverion], IfAddrType=[IfAddrType], Addr=[Addr], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3RouteBeDeletedByPurgeInexact:OSPFv3 routes advertised by the local device were deleted by another device, and the possibly faulty device did not support OSPFv3 flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospfv3 flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], RuledOutDeviceNum=[hwOspfv3RuledOutDeviceNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwEntityLeaveMaster:Physical entity exited from the master state. (BaseTrapSeverity=[BaseTrapSeverity], BaseTrapProbableCause=[BaseTrapProbableCause], BaseTrapEventType=[BaseTrapEventType], EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalContainedIn=[EntPhysicalContainedIn], EntPhysicalName=[EntPhysicalName], RelativeResource=[RelativeResource], ReasonDescription=[ReasonDescription].)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/2/hwClockSsmPktLos:The ssm packet of clock source is lost. (hwClockCurSourceName=[hwClockCurSourceName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwVPLSNotSupportTunnelAlarm:The public network tunnel of VPLS PW cannot forward traffic. (VsiName=[hwNotSupportTunnelVSIName], RemoteIp=[hwPWPeerRemoteIp], PwId=[hwNotSupportTunnelPwId], TunnelType=[hwNotSupportTunnelType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2RecvLsaExceedThreshold:The number of LSAs learned by OSPF exceeded the threshold. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2RecvLsaUpper=[hwOspfv2RecvLsaUpper])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/6/hwRadiusAcctServerUp:The communication with the RADIUS accounting server is resumed. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwFlexEPhyLocalFaultAlarm:The local fault alarm of FlexE physical interface has occurred. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVpwsBLabelNotEnough:The block labels of VPWS are not enough. (VpnName=[VpnName], CeId=[CeId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisLSPTooLargeToPropagate:ISIS attempt to propagate an LSP which is larger than the dataLinkBlockSize for the circuit. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspSize=[isisPduLspSize], isisPduLspId=[isisPduLspId], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwIfMonitorCrcErrorRising:The CRC error is rising. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorCrcErrorStatistics=[hwIfMonitorCrcErrorStatistics],hwIfMonitorCrcErrorThreshold=[hwIfMonitorCrcErrorThreshold],hwIfMonitorCrcErrorInterval=[hwIfMonitorCrcErrorInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CFG/4/hwSysPafChangeNotification:The system PAF file changed. (hwSysReloadScheduleIndex=[ScheduleIndex],hwSysPafFileIndex=[FileIndex],hwSysReloadEntity=[ReloadEntity],hwSysPafFileName=[FileName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731AisExceedMaxPktNum:The number of AIS packets transmitted in one second exceeds the maximum. (Maximum=[MAXIMUM])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/linkdown:The interface status changes. (ifName=[ifName], AdminStatus=[ifAdminStatus], OperStatus=[ifOperStatus], Reason=[Reason], mainIfname=[mainIf])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampTwoWayJitterExceed:The two-way jitter of the TWAMP test instance exceeded the upper threshold in three consecutive test intervals. (Test SessionId=[sessionId], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_MPLS/2/hwMplsLabelstackNumExceed:The stitch label stack number exceed two layers. (hwStitchLabel=[hwStitchLabel])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/5/hwTrunkMemNumberChange:The number of active trunk members changed. (TrunkName=[TrunkName], PortName=[PortName], ActiveTrunkMemNum=[TrunkMemNumber], Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfIfAuthFailure:A packet is received on a non-virtual interface from a router whose authentication key or authentication type conflicts with the local authentication key or authentication type. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], PacketSrc=[PacketSrc], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwLicenseEffectServiceAlarm:Because the license was not activated for the physical interface, the service of the corresponding interface or sub-interface is invalid. To continue using these interfaces, please activate the physical interface license as soon as possible. (ItemName=[hwItemName], InterfaceName=[hwPhysicalIfName], ServiceDesc=[hwServiceDesc])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwPimSGInactiveThreshold:The number of multicast (S, G) entries decreased within the alarm timer exceeds the threshold. (AddressFamily=[AddressFamily], InstanceName=[InstanceName], AlarmInterval=[AlarmInterval], InactiveThreshold=[InactiveThreshold], InactiveCount=[InactiveCount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PCEP/2/pcePcepSessDown:PCEP session state change. (PcepEntityIndex=[EntityIndex], PcepPeerAddrType=[AddrType], PcepPeerAddr=[PeerAddr], PcepSessInitiator=[SessionInitiator], PcepSessState=[SessionState], PcepSessStateLastChange=[StateChangeTime], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/6/hwCardSplitChange:Port split configuration has changed on the card. (hwEntityPhysicalIndex=[hwEntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[entPhysicalName].)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SSH/3/hwSSHLoginFailed:Users failed to login ssh server too frequently. (failed times=[hwUserInfoLoginFailedTimes], statistic period=[hwUserInfoStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwTrunkWeightExceed:The board forwarding engine resources were overloaded. (EntiyPhysicalindex=[EntiyPhysicalindex], EntPhysicalindex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Slot=[SlotStr], Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockPortNonSupport:In current link mode, the hardware, such as boards and optical modules, do not support physical-layer clock synchronization. (hwClockChassisId=[hwClockChassisId], hwClockPortIfIndex=[hwClockPortIfIndex], hwClockCurSourceName=[hwClockCurSourceName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/4/hwFwdChannelFault:The forwarding data channel failure. (hwFrameIndex=[hwFrameIndex],hwSlotIndex=[hwSlotIndex],hwSubslotIndex=[hwSubslotIndex],hwCheckType=[hwCheckType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwAuLopAlarm:The loss of pointer alarm in the multiplex section. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisSequenceNumberSkip:ISIS received a self-originated LSP with a greater sequence number. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspId=[isisPduLspId], ifIndex=[ifIndex], IfName=[IfName],oldSeqNum=[oldSeqNum],newSeqNum=[newSeqNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpDynamicPeerSessionExceed:The number of BGP dynamic peer sessions exceeded the maximum number. (MaximumNumber=[MaximumNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSFlowspecNotSupportBoardEvent:The rule configured for the BGP FlowSpec route is not supported on the current board. (Chassis ID=[chassis-id], Slot ID=[slot-id], Rule type=[rule-type], Address family type=[addr-type], Service type=[service-type])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpClusterTimeLockFail:Failed in locking the clock of the backup chassis. (hwPtpChassisId=[hwPtpChassisId], hwPtpTimeLockStatus=[hwPtpTimeLockStatus], hwPtpTimeLockFailReason=[hwPtpTimeLockFailReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3RouteLoopDetected:The local device has detected an OSPFv3 routing loop. (LoopType=[LoopType], DetectProtocolAttr=[DetectProtocolAttr], RedistributeID1=[RedistributeID1], RedistributeID2=[RedistributeID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VSTM/3/hwVstmMacExceed:The number of MAC routes on the device exceeded the maximum value. (CurrentMACRouteCount=[VstmCurMacNum], MaxMACRouteValue=[VstmMaxMacNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsKeyfileTampered:The file has been created or modified. (eventCategory=[event-category], eventType=[event-type], level=[level], occurTime=[occur-time], result=[result], user=[user], loginTime=[login-time], visitorIp=[visitor-ip], path=[file-path], operationType=[operation-type], processPath=[process-path], type=[attribute-type], from=[old-attribute], to=[new-attribute], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TELNET/3/hwTelnetLoginFailed:Users failed to login telnet server too frequently. (failed times=[hwUserInfoLoginFailedTimes], statistic period=[hwUserInfoStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampSenderSessionNumExceed:The number of TWAMP sender session is out of device capability.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FR/4/frDLCIStatusChange:Interface [InterfaceName] DLCI [DLCI] turned into [Status] state.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/3/hwBgpRpkiRoaInvalidAnnounce:The route is announced by the local origin AS, but the AS is mismatch with a ROA. (VpnInstance=[VpnInstance], AsNumber=[AsNumber], PrefixType=[PrefixType], PrefixAddr=[PrefixAddr], RoaPrefixType=[RoaPrefixType], RoaPrefixAddr=[RoaPrefixAddr], RoaMaskLen=[RoaMaskLen] MaxLen=[MaxLen], RoaAs=[RoaAs])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EWM/3/hwWarrantyToBeExpired:The electronic warranty is about to expire. Please apply for a new digital warranty from the supplier before the service ends. (device type=[Type], position=[Slot], serial number=[SerialNumber], days remaining=[RemainedDays])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BIER/2/hwBierEndBierSIDConflict:In the BIER sub-domain, the configured End.BIER SID conflicts with the remote route. (AddressFamily=[AddressFamily], SubdomainID=[SubdomainID], ConflictEndBIERSID=[ConflictEndBIERSID], NextHopAddr=[NextHopAddr])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2ThirdPartRouteBeDeletedByPurgeExact:OSPF routes advertised by another device were deleted. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDT/4/hwLoopDetectBlocked:This interface is blocked.(PortIndex=[IfIndex], PortName=[IfName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlResourceUsedUp:Resource item [hwGtlResourceItem] is nearly used up. (ItemDescription=[hwGtlItemDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/3/hwPtpPortPtsf:The ptsf alarm of the ptp port occurs. (hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortName=[hwPtpPortName], hwPtpPortPtsfReason=[hwPtpPortPtsfReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserLoginFail:A user login failed. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731LckDefect:MEP enters LCK defect condition. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/hwMplsLdpPeerAddressCountExceed:The peer address count reaches the upper limit. (PeerLsrId=[PeerLsrId], VrfName=[VrfName], AddressTotalCount=[AddressTotalCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/4/hwMacsecRcvRspTimeout:The MKA protocol status of the local interface becomes Down because the response message cannot be received during the timeout period.(IfIndex=[if-index], Role=[role], Local Port=[local-port])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwTunnelSubExceed:The number of subscribed tunnels reached the maximum value. (subscribeTunnelMaxCount=[subscribeTunnelMaxCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/5/hwmplsldpvirtualtunneldown:The LDP virtual tunnel went Down. (LdpVirtualTunnelFEC=[LdpVirtualTunnelFEC])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwRemoteFaultAlarm:The remote fault alarm has occurred. (IfIndex=[hwPhysicalPortIfIndex],IfName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/4/hwFwdComponentSmoothFailed:Component smooth failed to finish. (EntPhysicalindex=[EntPhysicalindex],EntPhysicalName=[EntPhysicalName],Position=[Position],Producer=[Producer],Consumer=[Consumer],ReasonId=[ReasonId])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisManualAddressDrops:Some area addresses were discarded because the number of area addresses exceeded three. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisManAreaAddr=[isisManAreaAddr], isisManAreaAddrExistState=[isisManAreaAddrExistState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsProbeFailed:NQA entry probe failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], RttSum=[RttSum], RTTSum2Low=[RTTSum2Low], RTTSum2High=[RTTSum2High], RTTMin=[RTTMin], RTTMax=[RTTMax], PacketOutOfSequences=[PacketOutOfSequences], Errors=[Errors], Busies=[Busies], Timeouts=[Timeouts], Drops=[Drops], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JitterOut=[JitterOut], JitterIn=[JitterIn], OWSumSD=[OWSumSD], OWSumDS=[OWSumDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimVrfTypeSGExceed:The number of existed routing entries exceeded the vpn upper limit. (LimitType=[LimitType], AddressFamily=[AddressFamily], VpnName=[VpnName], CurrentCount=[CurrentCount], LimitCount=[LimitCount],SrcAddr=[SrcAddr], GrpAddr=[GrpAddr])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/3/hwPstBroadcastLostAlarm:The board cannot receive pst broadcast packet from other boards. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName].)",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwNPDomainDropCauseCntNumabruptlyAlarm:Causes drop count continuously increase. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=[1],LpuSlotId=[LpuSlotId],LpuFeId=[LpuFeId],DropCauseId=[DropCauseId]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731AisDefectAlarm:MEP enters AIS defect condition. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepID=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfv2ImportNssaRouteThreshold:The number of NSSA LSAs generated when an OSPF process imports external routes exceeds the configured alarm upper threshold. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2AreaId=[hwOspfv2AreaId], hwOspfv2Threshold=[hwOspfv2Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceSysClkLockModeChange:The working mode of the clock source changes. (hwClockChassisId=[hwClockChassisId], hwClockSourceOldLockMode=[hwClockSourceOldLockMode], hwClockAttributeChassisIndex=[hwClockAttributeChassisIndex], hwClockAttributeSysClkLockMode=[hwClockAttributeSysClkLockMode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpTimeLockFail:The time lock status is failed. (hwPtpTimeLockStatus=[hwPtpTimeLockStatus], hwPtpTimeLockFailReason=[hwPtpTimeLockFailReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdGmpJoin:Interface receives an IGMP or MLD Join message. (Interface=[InterfaceName], InterfaceIndex=[InterfaceIndex], Version=[GmpVersion], SrcStr=[SrcAddr], GrpStr=[GrpAddr], HostAddr=[SenderAddr], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_RSVP/2/hwRsvpTeAuthFail:The RSVP neighbor authentication is incorrect. (IpAddress=[ipaddr])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETSLICING/2/hwNetslicingInftFCSliceNumExceed:The number of configured Flex-Channel network slices on the main interface (and on any sub-interfaces) exceeds the upper limit. (IfName=[IfName], UpperLimit=[UpperLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnEvplAlarmDown:The EVPL instance went down. (EvplIndex=[EvplIndex], Status=[EvplStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlResourceLack:The number of used resources has exceeded the upper threshold. To continue using these resources, purchase and activate corresponding license resource items as soon as possible. (ItemName=[hwGtlItemName], AssignedValue=[hwGtlItemControlValue], UsedValue=[hwGtlItemUsedValue], ItemDescription=[hwGtlItemDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfIfStateChange:The status of the non-virtual interface changes. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], IfState=[IfState], ProcessId=[ProcessId], AreaId=[AreaId], IfnetIndex=[IfnetIndex], LocalIfIpAddress=[LocalIfIpAddress], IfName=[IfName], InstanceName=[InstanceName], IfChgReason=[IfChgReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnSRv6ModifyArglenCfg:The minimum length of the ARG was changed, and split horizon function did not take effect temporarily. (lastArgLen = [lastArgLen], currentArgLen = [currentArgLen])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwCfgConfigChangeLog:The configuration changed. (Internal change =[isInner], User name =[username], Session ID =[ssnId], Command source address =[srcAddress], Storage type =[datastoreType], Terminal type =[termninalType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwL3ucNotSupportP2PNetworkSliceAlarmOccur:The interface does not support P2P Network Slice function. (InterfaceName=[InterfaceName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/3/hwPtpPortAttrMisMatch:PTP attribute mismatching at both ends. (ClockChassisId=[ClockChassisId], PtpPortIfIndex=[PtpPortIfIndex], PtpPortName=[PtpPortName], AlarmReason=[AlarmReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisProtocolsSupportedMismatch:The protocol of received Protocol TLV is mismatched with local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduProtocolsSupported=[isisPduProtocolsSupported], isisPduLspId=[isisPduLspId], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwWholeFwdResLack:The whole device forwarding engine resources were overloaded. (EntityPhysicalIndex=[EntiyPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/hwOspfv3IntraAreaRouterIdConflictClear:Router IDs confliction is recovered. (ProcessId=[ProcessId], AreaId=[AreaId], OldRouterId=[OldRouterId], NewRouterId=[NewRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/2/hwTwampMemTwoWayLocExceed:The two-way loss ratio of the TWAMP test instance reached the LOC threshold in three consecutive test intervals. (Test SessionId=[sessionId], MemberId=[memberId], MemberName=[memberName], Value=[Value], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/2/hwNDHostIPConflict:Host IPv6 address conflicted. (BD=[BDId], LocalIPv6Address=[LocalIPv6], LocalMAC=[LocalMAC], LocalWorkInterface=[LocalWorkIf], LocalPeVid=[LocalPevid], LocalCeVid=[LocalCevid], RemoteIPv6Address=[RemoteIPv6], RemoteMAC=[RemoteMAC], RemoteWorkInterface=[RemoteWorkIf], RemotePeVid=[RemotePevid], RemoteCeVid=[RemoteCevid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/4/hwSprInstancePathSwitch:The SPR instance path changed. (InstanceEndpoint=[InstanceEndpoint],SprPolicyName=[SprPolicyName],PreviousSrPolicyColor=[PreviousSrPolicyColor],CurrentSrPolicyColor=[CurrentSrPolicyColor],SwitchReason=[SwitchReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfNssaTranslatorStatusChange:The status of the NSSA translator changes. (RouterId=[RouterId], AreaId=[AreaId], NSSATranslatorState=[NSSATranslatorState], ProcessId=[ProcessId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSModeChannelOverPortShapAlarm:The channelization bandwidth configured on the interface [interface-name] exceeds the [shaping-type] value.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwTmStatusChangeAlarm:TM deviates from normal operating state. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "INFO/4/hwICLogFileStorageThrd:The logfile surplus storage spaces is less than 20 percent. (LogFileType=[LogFileType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwLoopbackAlarm:Port Loopback Alarm! (InterfaceIndex=[InterfaceIndex],InterfaceName=[InterfaceName],LoopType=[LoopType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/3/hwlldpNeighborUnexpectedAlarm:The neighbor information of LLDP packet is not as expected. (Interface=[interfaceName], RemoteChassisType=[chassisSubType], RemoteChassisId=[chassisId], RemotePortIdType=[portIdSubType], RemotePortId=[portId], Reason=[lldpReasonString])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/4/hwWholeFwdResThresholdExceed:The whole device forwarding engine resources exceeded the threshold. (EntityPhysicalIndex=[EntiyPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], ReasonId=[ReasonId], ReasonDescription=[Reason])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsProbeFailed:NQA entry probe failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], CompletionTimeMin=[CompletionTimeMin], CompletionTimeMax=[CompletionTimeMax], SumCompletionTime=[SumCompletionTime], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], SumCompletionTime2Low=[SumCompletionTime2Low], SumCompletionTime2High=[SumCompletionTime2High], LastGoodProbe=[LastGoodProbe], LastGoodPath=[LastGoodPath])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2LsdbOverflow:The number of AS-external LSAs in the LSDB of an OSPF process reaches the configured maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2MaxLimit=[hwOspfv2MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/5/hwPatchUpdateTrap:The patch with slot [PatchSlotIndex], patch index [PatchIndex], version [PatchVersion] and type [PatchType] has updated to the state [PatchState].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceSsmChange:The clock source SSM was changed. (hwClockChassisId=[hwClockChassisId], hwClockCurSourceName=[hwClockCurSourceName], hwClockOldSourceSsm=[hwClockOldSourceSsm], hwClockNewSourceSsm=[hwClockNewSourceSsm])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/4/hwIfitDynFlowMidEgressNumAlmostExceedAlarm:The number of IFIT dynamic midegress flows reaches 90 percent of the upper limit. (UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDIPv6ConflictEvent:Detected an IPv6 address collision. (Ipv6Address=[Ipv6Addr], Local MacAddress=[LocalMacAddr], Local InterfaceName=[LocalIfName], Local WorkInterfaceName=[LocalWorkIfName], Local VLAN=[LocalPVid], Local INNER-VLAN=[LocalCVid], Received MacAddress=[RcvMacAddr], Received InterfaceName=[RcvIfName], Received WorkInterfaceName=[RcvWorkIfName], Received VLAN=[RcvPVid], Received INNER-VLAN=[RcvCVid])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwPortGroupModeInvalid:The rate and PLL of the ports in the group do not match. (IfIndex=[IfIndex],SlotId=[SlotId],CardId=[CardId],PortId=[PortId],ReasonDescription=[ReasonDescription])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "INFO/4/hwICLogFileAging:One log file was deleted due to aging. (LogFileName=[LogFileName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwNextStartupFileInconsistent:The file for next startup on the active main control board is different from that on the standy main control board.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/4/hwFwdTblmScanHndOverload:The number of handles traversed in the forwarding resource table exceeded the maximum number supported. (EntiyPhysicalindex=[EntiyPhysicalindex],EntPhysicalindex=[EntPhysicalindex],EntPhysicalName=[EntPhysicalName],TableId=[TableId],TableName=[TableName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwIpv4RouteThresholdExceed:The number of IPv4 routes in the VPN instance exceeded the alarm threshold multiplied by the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], alarm threshold=[midThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsJitterThresholdNotificationSD:The JITTER-SD of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JITTEROverThresholdsSD=[JITTEROverThresholdsSD])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwCBQoSGlobalAclNotSupportTRAP:The global-acl configuration can not work on the slot [slot-id] in the [direction] direction.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwB1TcaAlarm:B1 threshold crossing alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPDynamicEntryExceedAlarm:The number of dynamic ARP entries exceeds the specification. (EntPhysicalIndex=[EntPhysicalIndex], Slot name=[SlotName], Specs=[Specs], Number of dynamic ARP entries=[DynEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwL3ucResLackForNetworkSliceSQIDAlarmOccur:The network slice resources are insufficient, and the rate limiting function does not take effect. (InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlFeatureDefaultValue:License feature has expired. (FeatureName=[hwGtlFeatureName], Reason=[hwGtlDefaultValueReason], Position=[hwGtlPosition])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlNearDeadline:License feature [hwGtlFeatureName] is near deadline, remain time is [hwGtlRemainTime] day (s). Apply for a new license file from Huawei before the grace period expires. Otherwise, relevant service functions may be unavailable or the configuration may become ineffective. (ChassisID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfDampSuppress:The state of interface changed from unsuppress to suppress. (InterfaceName=[InterfaceName], SuppressState=[SuppressState])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFlexEPhyGroupMismatch:The configured group IDs did not match for the two connected FlexE physical interfaces. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName],hwPhysicalPortLocalGroupID=[hwPhysicalPortLocalGroupID],hwPhysicalPortRemoteGroupID=[hwPhysicalPortRemoteGroupID])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisLspRemainingLifetimeRefresh:ISIS receive LSP with small Remaining Lifetime. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], ifIndex=[ifIndex], ifName=[ifName], isisAdjSysID=[hwIsisAdjSysID], isisPduLspId=[isisPduLspId], isisRemainingLifetime=[hwIsisRemainingLifetime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwHumidityAlarm:Ambient humidity is abnormal. (EntityPhysicalIndex=[EntityPhysicalIndex],EntityThresholdType=[EntityThresholdType],EntityThresholdValue=[EntityThresholdValue],EntityThresholdCurrent=[EntityThresholdCurrent],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_L2/4/hwBoardServiceMisMatchGenerate:The board does not support the service. (EntityPhysicalIndex= [EntityPhysicalIndex], EntPhysicalName= [EntPhysicalName], ServiceName = [ServiceName], Precautions =[Precautions]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/1/hwDot1agCfmMismerge:MEP received a CCM with unexpected MEG ID. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisLsdbThresholdReachClear:The number of LSP has been less than the lower threshold value. (SysInstance=[IsisSysInstance], LsdbMaxLimit=[IsisLsdbMaxLimit], LsdbUpperThreshold=[IsisLsdbUpperThreshold], LsdbLowerThreshold=[IsisLsdbLowerThreshold], LsdbTotal=[IsisLsdbTotal])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwL3ucBoardNotSupportFunctionAlarmOccur:The board does not support this function. (SlotID=[SlotID], ReasonID=[ReasonID], ReasonDescription=[ReasonDescription])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PCEP/3/hwPceInitiatedLspThreshold:The PCE-Initiated LSPs exceeds the threshold. (hwPceInitiatedLspCurrCount=[CurrentCount], hwPceInitiatedLspThresholdCount=[ThresholdCount], hwPceInitiatedLspLimitCount=[TotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSRedirectNextHopInvalidAlarm:The redirect nexthop address did not match the network segment of the outbound interface. (Behavior=[behavior-name], RdrType=[redirect], Interface Name=[interface-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwXQoSCprlDiscardedPacketAlarm:CPRL drop packets alarmed. (InterfaceName=[hwXQoSCpRateLimitIfIndex], PeVid=[hwXQoSCpRateLimitPeVidValue], CeVid=[hwXQoSCpRateLimitCeVidBegin])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPBdSuppressEntryExceedAlarm:The number of ARP broadcast-suppress entries exceeds the specification. (EntPhysicalIndex=[EntPhysicalIndex], Slot name=[SlotName], Specs=[Specs], Number of ARP broadcast-suppress entries=[SuppEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/1/hwIPSecPkiLocalCertInValid:The local certificate is invalid. (LocalCertStartTime=[LocalCertStartTime], LocalCertFinishTime=[LocalCertFinishTime], LocalCertIssuer=[LocalCertIssuer], LocalCertSubject=[LocalCertSubject], FileName=[FileName], InvalidReason=[InvalidReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwSlotNDThresholdExceedAlarm:The number of ND entries exceeded the threshold of slot. (entPhysicalIndex=[entPhysicalIndex], Slotname=[slotname], Threshold=[Threshold], Number of dynamic ND entries=[DynEntries], Number of static ND entries=[StatEntries], Number of remote ND entries=[RemoteEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwInterfaceNDThresholdExceedAlarm:The number of ND entries exceeded the threshold of interface. (entPhysicalIndex=[entPhysicalIndex], Slotname=[slotname], InterfaceName=[InterfaceName], Threshold=[Threshold], Number of dynamic ND entries=[DynEntries], Number of static ND entries=[StatEntries], Number of remote ND entries=[RemoteEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/traceRouteTestFailed:TraceRoute entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], AddressType=[AddressType], Address=[Address])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/ifrxbadpacket:An OSPFV3 packet that is received on a non-virtual interface cannot be parsed. (RouterId=[RouterId], IfIndex=[IfIndex], IfInstId=[IfInstId], IfState=[IfState], PacketSrc=[PacketSrc], PacketType=[PacketType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PORT/1/hwOpticalAmplifierGainLow:The gain of the optical module is too low. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/3/hwSmTimAlarm:Trace identifier mismatch. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSBgpFlowspecDestinationOriginAsOverAlarm:The number of BGP FlowSpec rules matching the start AS (Origin-AS) of the destination IP address reaches the upper limit.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfNbrRestartHelperStatusChange:The neighbor exits from the restart helper state. (RouterId=[RouterId], NbrIpAddr=[NbrIpAddr], NbrAddressLessIndex=[NbrAddressLessIndex], NbrRtrId=[NbrRtrId], NbrRestartHelperStatus=[NbrRestartHelperStatus], NbrRestartHelperAge=[NbrRestartHelperAge], NbrRestartHelperExitReason=[NbrRestartHelperExitReason], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3RouteBeDeletedByPurge:OSPFv3 routes advertised by the local device were deleted by another device. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], TotalNodeNum=[hwOspfv3TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv3PurgeHostName1], HostIpAddress=[hwOspfv3PurgeIpAddress1], RouterID=[hwOspfv3PurgeRouterId1] (2) HostName=[hwOspfv3PurgeHostName2], HostIpAddress=[hwOspfv3PurgeIpAddress2], RouterID=[hwOspfv3PurgeRouterId2] (3) HostName=[hwOspfv3PurgeHostName3], HostIpAddress=[hwOspfv3PurgeIpAddress3], RouterID=[hwOspfv3PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/hwIpv6RouteExceed:The number of IPv6 routes in the VPN instance exceeded the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], maximum value=[max])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpPeerBackwardTransition:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Ipv6Addr], InstanceId=[InstanceId], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState], LocalIfName=[LocalIfName], Reason=[Reason], Description=[Description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwPimGlobalTypeOifThresholdExceed:The number of outgoing interfaces in global multicast routing entries reached the upper alarm threshold. (LimitType=[LimitType], AddressFamily=[AddressFamily], LimitCount=[LimitCount], ThresholdCount=[ThresholdCount], ReasonType=[ReasonType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwFlexEBwMismatch:The bandwidth of two FlexE interfaces did not match. (hwPortIfIndex=[hwPortIfIndex],hwPortName=[hwPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PORT/2/hwIfMonitorBadBytesErrorRising:The bytes of error packets reach the upper threshold. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorBadBytesErrorStatistics=[hwIfMonitorBadBytesErrorStatistics],hwIfMonitorBadBytesErrorThreshold=[hwIfMonitorBadBytesErrorThreshold],hwIfMonitorBadBytesErrorInterval=[hwIfMonitorBadBytesErrorInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731Statistic:The Y.1731 statistic value exceeded the upper limit value. (MdIndex=[MdIndex], MaIndex=[MaIndex], MepID=[MepID], Type=[Type], MAC=[MAC], Priority=[Priority], MdName=[MdName], MaName=[MaName], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], ValueHigh=[ValueHigh], ValueLow=[ValueLow])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/rp-mapping-change:The RP changes. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], szGrpAddr=[szGrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], Precedence=[Precedence], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockSourceFailed:The state of clock source is abnormal. (hwClockSrcCfgChassisIndex=[hwClockSrcCfgChassisIndex], hwClockSrcCfgSourceTypeIndex=[hwClockSrcCfgSourceTypeIndex], hwClockSrcCfgSourceIndex=[hwClockSrcCfgSourceIndex], hwClockChassisId=[hwClockChassisId], hwClockCurSourceName=[hwClockCurSourceName], hwClockSrcCfgSourceState=[hwClockSrcCfgSourceState])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/ospfIfRxBadPacket:An OSPF packet that is received on a non-virtual interface cannot be parsed. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], PacketSrc=[PacketSrc], PacketType=[PacketType], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/4/hwEntityBecomeMaster:Physical entity changed to the master state. (BaseTrapSeverity=[BaseTrapSeverity], BaseTrapProbableCause=[BaseTrapProbableCause], BaseTrapEventType=[BaseTrapEventType], EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalContainedIn=[EntPhysicalContainedIn], EntPhysicalName=[EntPhysicalName], RelativeResource=[RelativeResource], ReasonDescription=[ReasonDescription].)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiOutRtpLrOverThreshold:The outbound RTP-LR of the channel exceeds the threshold. (ChannelName=[hwEmdiChannelName], ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], RtpLrThreshold=[hwEmdiRtpLrThreshold], RtpLr=[hwEmdiRtpLrValue], Slot=[hwEmdiChannelSlot], Interface=[hwEmdiChannelInterface])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiCertChainInValid:The local certificate Chain is invalid. (InvalidReason=[InvalidReason], CertIssuer=[CertIssuer], CertSubject=[CertSubject], FileName=[FileName], PKIDomainName=[DomainName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/1/hwPortPhysicalDown:The status of the physical interface is Down. (BaseTrapSeverity=[BaseTrapSeverity],BaseTrapProbableCause=74752,BaseTrapEventType=[BaseTrapEventType],EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],ReasonDescription=The status of the physical interface is Down.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwIfMonitorSymbolErrorRising:Symbol error alarm. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorSymbolErrorStatistics=[hwIfMonitorSymbolErrorStatistics],hwIfMonitorSymbolErrorThreshold=[hwIfMonitorSymbolErrorThreshold],hwIfMonitorSymbolErrorInterval=[hwIfMonitorSymbolErrorInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisAreaMismatch:IS-IS received a level-1 Hello PDU whose area address is different from the local area address. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUSTEM/2/hwTrustemCertificateExpiredAlarm:The trustem certificate already expired. (PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], CertificateName=[hwTrustemCertificateName], CertificateType=[hwTrustemCertificateType], BeginTime=[hwTrustemCertificateBeginTime], EndTime=[hwTrustemCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwKompellaVcDown:The status of the Kompella VC turned DOWN. (VcVpnName=[VcVpnName], CeId=[CeId], InterfaceIndex=[InterfaceIndex], RemoteCeId=[RemoteCeId], SecondaryVc=[SecondaryVc], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], PeerAddress=[PeerAddress], TunnelPolicyName=[TunnelPolicyIndex], ActiveState=[ActiveState])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestResultStatusChange:NQA entry test result changed. (OwnerIndex=[OwnerIndex],TestName=[TestName],ResultIndex=[ResultIndex],HopIndex=[HopIndex],TestType=[TestType],SourceIP=[SourceIP],SourceIfName=[SourceIfName],DestinationIP=[DestinationIP],LastResult=[LastResult],CurrentResult=[CurrentResult],ChangeToFailTimes=[ChangeToFailTimes],ChangeToSuccessTimes=[ChangeToSuccessTimes],ChangeToNoResultTimes=[ChangeToNoResultTimes],ChangeToNegotiateFailTimes=[ChangeToNegotiateFailTimes],ChangeToAbnormalTimes=[ChangeToAbnormalTimes],FailTimes=[FailTimes],SuccessTimes=[SuccessTimes],NoResultTimes=[NoResultTimes],NegotiateFailTimes=[NegotiateFailTimes],AbnormalTimes=[AbnormalTimes])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwBaseNdVlanCarTrap:ND VLAN CAR became effective on an interface, which was probably due to an attack on the interface. (Protocol Type = [NdType], Logical Interface = [LogicalInterface], Physical Interface = [PhysicalInterface], Pe-Vlan = [PeVlan],Ce-Vlan = [CeVlan], Sample Rate = [SampleRate])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SEGR/4/hwSrv6SidRouteConflict:Conflict between an SRv6 local SID and a route. (SID=[LocalSID]/[PrefixLength])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampTwoWayDelayExceed:The two-way delay of the TWAMP test instance exceeded the upper threshold in three consecutive test intervals. (Test SessionId=[sessionId], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], Sender IP=[sender-address], Reflector IP=[reflector-address], Sender Port=[sender-port], Reflector Port=[reflector-port], VPN Instance=[vpn-name])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PORT/2/hwIfMonitorSdhB2ErrorRising:The SDH B2 error is rising. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorSdhB2ErrorStatistics=[hwIfMonitorSdhB2ErrorStatistics],hwIfMonitorSdhB2ErrorThreshold=[hwIfMonitorSdhB2ErrorThreshold],hwIfMonitorSdhB2ErrorInterval=[hwIfMonitorSdhB2ErrorInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsDynamicLabelTotalCountExceed:The dynamic label count reaches the upper limit. (hwMplsDynamicLabelTotalCount=[DynamicLabelTotalCount], hwMplsDynamicLabelCurrentCount=[DynamicLabelCurrentCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/2/IPv6VxlanTunnelDown:The IPv6 vxlan tunnel status changes. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr], TunnelStatus=[Tnl6Status])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisLsdbThresholdReach:The number of LSP has reached the upper threshold value. (SysInstance=[IsisSysInstance], LsdbMaxLimit=[IsisLsdbMaxLimit], LsdbUpperThreshold=[IsisLsdbUpperThreshold], LsdbLowerThreshold=[IsisLsdbLowerThreshold], LsdbTotal=[IsisLsdbTotal])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiHttpGetCertFail:Get certificate unsuccessfully with HTTP. (CertUrl=[CertUrl], CertSaveName=[CertSaveName], CertUrlVrfName=[VrfIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanTnlDown:The status of the vxlan tunnel changed to down. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr], TunnelStatus=[TnlStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwInternalProtocolNetworkPortFaultAlarm:One of the internal protocol network ports failed. (EntPhysicalIndex=[EntityPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=156416, Reason=The protocol network port failed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwFwdProcFailForLCS:Because the license named [licenseName] was not activated for the board in the slot [slotId], the operation is failed (Operation ID: [operationId]).",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/fallingAlarm:Alarm table [AlarmId] monitors [OID] with the sample type [SampleType], and the sampled alarm value [SampleValue] is less than or equal to [Threshold].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmRDI:MEP received a CCM with RDI flag set. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwRpkiSessionAspaExceedLimit:The number of ASPA records received from the ASPA server exceeded the configured upper limit. (InstanceId=[InstanceId],SessionRemoteAddrType=[SessionIPAddrType],SessionRemoteAddr=[SessionIPAddr],MaxASPANum=[AspaLimitNum])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysSlaveSwitchFailNotification:Failed to run slave switch with SlvSwitchIndex [SlvSwitchIndex], ChassisNum[ChassisNum].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestFailed:NQA entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], CompletionTimeMin=[CompletionTimeMin], CompletionTimeMax=[CompletionTimeMax], SumCompletionTime=[SumCompletionTime], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], SumCompletionTime2Low=[SumCompletionTime2Low], SumCompletionTime2High=[SumCompletionTime2High], LastGoodProbe=[LastGoodProbe], LastGoodPath=[LastGoodPath])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwLocalFaultAlarm:The local fault alarm has occurred. (IfIndex=[hwPhysicalPortIfIndex],IfName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlDefaultValue:Current license value is default, the reason is [hwGtlDefaultValueReason]. (ChassisID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwBoardRemove:The board was removed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityType=[EntityType],EntityTrapFaultID=131840,Reason=The board was removed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/1/hwDot1agCfmUnexpectedMEGLevel:MEP received a CCM with unexpected MEG level. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IFIT_OM/4/hwIfitDynamicFlowNumExceedAlarm:The total number of IFIT dynamic flows in LC board reaches the upper limit. (SlotId=[SlotId],FlowLimitNum=[FlowLimitNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/5/hwMflpBdLinkResumed:The AC interfaces of the main interface have been unblocked due to MAC-Flapping association. (BD=[bdid], ACInterfaceName=[ACName], MainInterfaceName=[MainIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtNbrRestartHelperStatusChange:The helper status of the virtual neighbor changes. (VirtNbrAreaId=[VirtNbrAreaId], VirtNbrRtrId=[VirtNbrRtrId], ProcessId=[ProcessId], RouterId=[RouterId], VirtNbrRestartHelperStatus=[VirtNbrRestartHelperStatus], VirtNbrRestartHelperAge=[VirtNbrRestartHelperAge], VirtNbrRestartHelperExitReason=[VirtNbrRestartHelperExitReason], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NTP/3/hwNtpSynchronizationFailure:NTP synchronization state changed.(State = [state], SynchronizationSourceAddress = [source])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdIPv6SessUp:Session changes to UP. (Index=[Index], ConfigurationName=[ConfigurationName], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop],EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ImportNssaRouteExceed:The number of NSSA LSAs generated when an OSPF process imports external routes exceeds the maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2AreaId=[hwOspfv2AreaId], hwOspfv2MaxLimit=[hwOspfv2MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSGlbQPPBEventLog:The global QPPB will not be effective. (slotID = [SlotId], function = [Function], description = [Description])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRANSMISSION-ALARM/4/hwPmBdiAlarm:PM Backward defect indication. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgB2SOperate:Begin to back up the current configuration to the server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSBgpFlowspecDestinationOriginAsOverIPv6Alarm:The number of BGP FlowSpec rules matching the start AS (Origin-AS) of the destination IPv6 address reaches the upper limit.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwMacLimitRuleNumRaisingThreshold:The mac address learned by the board is beyond the threshold of the global mac limit rule. (EntPhysicalIndex=[hwEntPhysicalIndex], PhysicalName=[hwPhyscialName], RuleName=[rule_name], LearnNumber=[learn_number], LimitNumber=[limit_number])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwPhysicalPortCrcError:Crc error alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],hwPhysicalPortName=[hwPhysicalPortName],hwPhysicalPortCrcErrorStatistics=[hwPhysicalPortCrcErrorStatistics],hwPhysicalPortCrcErrorHighThreshold=[hwPhysicalPortCrcErrorHighThreshold],hwPhysicalPortCrcErrorLowThreshold=[hwPhysicalPortCrcErrorLowThreshold],hwPhysicalPortCrcErrorInterval=[hwPhysicalPortCrcErrorInterval])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3LsaRetranExceedLimit:The number of OSPFv3 LSA retransmissions on an interface exceeds the limit. (ProcessId=[hwOspfv3ProcessId], AreaId=[hwOspfv3AreaIdIndex], InterfaceName=[hwOspfv3IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/risingAlarm:Alarm table [AlarmId] monitors [OID] with the sample type [SampleType], and the sampled alarm value [SampleValue] is greater than or equal to [Threshold].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwIsisRouteBeDeletedByPurgeExact:IS-IS routes advertised by the local device were deleted by another device. Reset or isolate the faulty device from the network. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwOMUSyncFailAlarm:Data failed to be synchronized from the master OMU to the slave OMU. (Reason=The OMU data of [BoadName] synchronization timed out. [Action])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/1/hwBgpRouteLoopDetected:The local device has detected a BGP routing loop. (BGP instance name=[InstanceName], Vpn-instance=[Vpn-instance], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], Address Family=[AddressFamily])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsSlotResTotalCountExceed:The number of used MPLS resources on the interface board reached the maximum number. (hwMplsResourceType=[ResourceType], hwMplsChassis=[Chassis], hwMplsSlot=[Slot], hwMplsResourceTotalCount=[ResourceTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwBoardServiceMismatchTrap:The board does not support the service. (EntityPhysicalIndex=[EntityPhysicalIndex],ServiceID=[ServiceID],EntPhysicalName=[EntPhysicalName],ServiceName=[ServiceName],Precautions=[Precautions]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/L3VPN_MIB_TRAP_VRF_DOWN:The interface bound to the VPN instance went Down. (VpnInstanceName=[VpnInstanceName], IfName=[IfName], IfCurRowStatus=[IfCurRowStatus], VRFOperationStatus=[VRFOperationStatus])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONFC/2/hwNetconfClientConfigFailed:Failed to deliver configurations to a peer device. (peerName=[peerName], addrType=[addrType], address=[address], featureName=[featureName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwNPResourceExcAlarm:The periodic services of the network processor were found faulty.(EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[1], LpuSlotId=[LpuSlotId], LpuFeId=[LpuFeId], BgThreadType=[BgThreadType]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUSTEM/2/hwTrustemCertificateExpiredEarlyWarning:The trustem certificate will expire. (PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], CertificateName=[hwTrustemCertificateName], CertificateType=[hwTrustemCertificateType], BeginTime=[hwTrustemCertificateBeginTime], EndTime=[hwTrustemCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrProtNotAval:The primary Tunnel has been unbound by bypass Tunnel. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], BypassTunnelId=[BypassTunnelId], TunnelType=[TunnelType], SubGroupId=[SubGroupId], SubGroupOrignatorId=[SubGroupOrignatorId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlInitial:The license was activated abnormally because it had been initialized. (ChassisID=[hwGtlChassisID], BoardID=[hwGtlBoardID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwPplmAlarm:The payload no-matching alarm in the higher order path. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],HpID=[hwSDHHpPerfCurrentHpIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/HwFwdDataSyncIncomplete:Data synchronization is abnormal. (Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdBitErrorDetectSessReachLimit:The bit-error-detection session number in all the IO boards has reached the limit, the new bit-error-detection session can not be created. (TotalBitErrorDetectionSessionLimit=[TotalBitErrorDetectSessionLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPassiveMeasureOverflow:The time offset of the passive port is abnormal. (hwPtpPortName=[hwPtpPortName], hwPtpPortIfIndex=[hwPtpPortIfIndex], hwPtpPortRingFiberLengthChangeValue=[hwPtpPortRingFiberLengthChangeValue], hwPtpPortRingFiberLengthChangeValueFlag=[hwPtpPortRingFiberLengthChangeValueFlag], hwPtpPassiveAlarmThreshold=[hwPtpPassiveAlarmThreshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwSysImageErrorNotification:The next startup image package is error. (imageIndex=[imageIndex], curImageName=[curImageName], nextImageName=[nextImageName], errReason=[errReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/1/hwIPSecPkiCACertInValid:The CA certificate is invalid. (CACertStartTime=[CACertStartTime], CACertFinishTime=[CACertFinishTime], CACertIssuer=[CACertIssuer], CACertSubject=[CACertSubject], FileName=[FileName], InvalidReason=[InvalidReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SRPOLICY/4/hwSrPolicyResourceThresholdExceed:The number of used SR Policy resources reached the upper threshold. (hwSrPolicyResourceType=[SrPolicyResourceType], hwResourceCurrentCount=[ResourceCurrentCount], hwResourceThresholdUpperLimit=[ResourceThresholdUpperLimit], hwResourceThresholdLowerLimit=[ResourceThresholdLowerLimit], hwResourceTotalCount=[ResourceTotalCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwIPv6FIBUserDefinedThresholdAlarmOccur:The number of used IPv6 FIB resources exceeded the user-defined upper threshold. (Slot=[slotID], ResourceThresholdUpperLimit=[ResourceThresholdUpperLimit], ResourceThresholdLowerLimit=[ResourceThresholdLowerLimit], ResourceTotalCount=[ResourceTotalCount])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/ifconfigerror:A packet is received on the non-virtual interface from a router whose configuration conflicts with the local configuration. (RouterId=[RouterId], IfIndex=[IfIndex], IfInstId=[IfInstId], IfState=[IfState], PacketSrc=[PacketSrc], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/4/hwRadiusAcctServerDown:The communication with the RADIUS accounting server fails. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfRouteExceed:The number of routes received from peers in a BGP address family reached the maximum value. (Address Family=[AddressFamily], MaxRouteNumber=[RouteLimitNum], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgOperateCompletion:Configuration was copied. (OperationIndex=[hwCfgOperateIndex], OperationType=[hwCfgOperateType], OperationResultIndex=[hwCfgOperateResultIndex], OptTime=[hwCfgOperateTime], OptState=[hwCfgOperateState], OptEndTime=[hwCfgOperateEndTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwIfMonitorSdhErrorRising:The Sdh error is rising. (hwIfMonitorIndex=[hwIfMonitorIndex],hwIfMonitorSdhErrorStatistics=[hwIfMonitorSdhErrorStatistics],hwIfMonitorSdhErrorThreshold=[hwIfMonitorSdhErrorThreshold],hwIfMonitorSdhErrorInterval=[hwIfMonitorSdhErrorInterval],hwIfMonitorName=[hwIfMonitorName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/3/hwPtpStandardTimeOffsetOver:The ptp standard time offset is abnormal. (hwPtpStandardTimeOffset=[hwPtpStandardTimeOffset], hwPtpAlarmThresholdStandardTimeOffset=[hwPtpAlarmThresholdStandardTimeOffset])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/routeExceed:The number of existed routing entries reached the global upper limit. (LimitType=[LimitType], AddressFamily=[AddressFamily], CurrentCount=[CurrentCount], LimitCount=[LimitCount],SrcAddr=[SrcAddr], GrpAddr=[GrpAddr], InstanceName=[InstanceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/6/entConfigChange:Entity MIB change. (Oid=[OID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSystemBoardExclude:The board excluded during software upgrading. (PhysicalIndex=[PhysicalIndex],PhysicalName=[PhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/hwOspfv3ImportAseRouteThreshold:The number of AS-external LSAs generated when an OSPFv3 process imports external routes exceeds the configured alarm upper threshold. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3Threshold=[hwOspfv3Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOofAlarm:Out of framer alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/2/hwBfdSessFaultDown:The BFD session went Down. (Index=[Index], SessName=[ConfigurationName], LocalDiscriminator=[LocalDiscriminator], Diagnosis=[Diagnosis], BindIfName=[BindIfName], Description=[Description], FeNodeID=[FeNodeID], PeerIp=[PeerIp], LinkType=[LinkType], BindVpnName=[BindVpnName], TunnelName=[TunnelName], DownReason=[DownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/4/hwIfitMeasureFlowNumAlmostExceedAlarm:The number of IFIT measurement flows reaches 90 percent of the upper limit. (Node=[NodeType],FlowType=[FlowType],UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwSdbereAlarm:Exceeding block error B2 counter in the multiplex section alarm. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],BoardID=[hwPhysicalPortInSlot],CardID=[hwPhysicalPortInCard],PortID=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVplsVsiDown:The status of the VPLS VSI turned DOWN. (VsiName=[VsiName], InterfaceIndex=[InterfaceIndex], VsiId=[VsiId], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], VsiStatus=[VsiStatus], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsTestCompleted:NQA entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], RttSum=[RttSum], RTTSum2Low=[RTTSum2Low], RTTSum2High=[RTTSum2High], RTTMin=[RTTMin], RTTMax=[RTTMax], PacketOutOfSequences=[PacketOutOfSequences], Errors=[Errors], Busies=[Busies], Timeouts=[Timeouts], Drops=[Drops], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JitterOut=[JitterOut], JitterIn=[JitterIn], OWSumSD=[OWSumSD], OWSumDS=[OWSumDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessReachLimit:The session number in all the IO boards has reached the limit, the new session can not be created. (TotalSessionLimit=[TotalSessionLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwisisNetSliceSrcPrefixConflict:A conflict between the network slice source prefix of the local device and the IPv6 prefix of another device is detected. (SysInstance=[hwisisSysInstance], MtId=[hwisisMtId], Level=[hwisisSysLevelIndex], PrefixAddress=[hwisisIpv6PrefixAddress], PrefixAddressMask=[hwisisIpv6PrefixAddressMask], ConflictSystemId=[hwIsisConflictSystemID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2IPConflict:An OSPF IP address conflict between the local device and another device was detected. (ProcessId=[hwOspfv2ProcessIdIndex], Area=[hwOspfv2AreaId], ConflictType=[hwOspfv2ConflictType], Conflict IP=[hwOspfv2ConflictIp], Conflict Router=[hwOspfv2ConflictRouterId], Conflict Router2=[hwOspfv2ConflictRouterId2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/2/hwNtpMaxPacketRecvPerSecReach:The NTP packet processing rate reaches the upper threshold. (packet rate = [maxpktrate]pps)",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFIT/2/hwIfitIngressNumExceedAlarm:The number of IFIT ingress flow reaches the upper limit. (UpperLimit=[UpperLimit])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/4/hwBgpPacketSendFailed:The BGP peer cannot send packets for a long time. (BGP instance=[InstanceName], VPN instance=[VpnInstance], BgpPeerRemoteAddr=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/4/hwGtlTrialResFeatureDisable:The trial time of resource items is over.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrResume:Tunnel frr resumes. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LINK-DETECT/4/hwlinkChgNeighbor:Link neighbor information is changed. (IfName=[ifname])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePowerOnFail:PD powered fail. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwB3ExcAlarm:B3 threshold crossing alarm! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamBidirectionalTunnelUnAva:BidirectionalTunnel enter unavaliable. (TunnelIndex=[TunnelIndex], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpAdaptiveTraceSourceChange:The synchronization server source of the client device is switched. (hwPtpAdaptiveOldTraceSource=[hwPtpAdaptiveOldTraceSource], hwPtpAdaptiveTraceSource=[hwPtpAdaptiveTraceSource])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnQualifyBumTableRes:The number of EVPN qualify BUM resources reached the upper limit. (UpperLimit=[UpperLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/3/hwIpRanCTDcnNeOnline:TC DCN NE online. (NeId=[NeId], NeIP=[NeIP], Company=[Company], DeviceType=[DeviceType], MacAddress=[MacAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/4/hwMplsApsLost:Tunnel protection group did not receive APS frames from protection tunnel. (IfIndex=[WorkTunnelIfIndex], SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], WorkTunnel=[WorkTunnel], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "APS/4/hwRanApsUniBidMismatch:The APS mode between the routers is not matched. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],hwRanApsInfoTable Index:[apsInfoindex],APS protect IfIndex:[pIfindex],APS protect IfName:[pIfName],APS Group ID:[groupid],APS mode:[apsMode],APS remote mode:[apsRMode]).",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRUI/4/hwBrasRbsProtDown:The RBS protect tunnel is down. (RBS=[hwBrasRbsName],ProtectType=[hwBrasRbsProtectType],Reason=[hwBrasRbsProtectDownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcUserPerEntryExceed:The number of L2 multicast user entries on QinQ stacking and mapping interfaces in one group has already reached the limit of each multicast group on the board. (GmpAfVersion=[GmpAfVersion], SlotName=[SlotName], VsiName=[VsiName], MulticastGroup=[MulticastGroup], MulticastSource=[MulticastSource], CurrentCount=[CurrentCount], PafValue=[PafValue])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LINK-DETECT/4/hwlinkNeighborFull:Link neighbor is full. (SlotId=[slotid])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_APS/3/hwPwApsTunnelNonSupport:PW APS does not support the current public tunnel. (VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwChassisFail:The chassis failed partially. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=131346,Reason=[ReasonDescription])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwPwApsDegraded:APS reported a PW Degraded alarm. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOpticalRemove:The optical module was removed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=135680,Reason=The optical module was removed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BASE-TRAP/4/hwRadiusAuthServerDown:The communication with the RADIUS authentication server fails. (IpAddress=[IpAddress],Vpn-Instance=[Vpn-Instance],Port=[Port])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PATH-DETECT/6/hwNvo3IpPathDetectResultIpv4Pkt:IP path detect receive packet . (testId=[testId], src-ip=[src-ip], dst-ip=[dst-ip], protocol=[protocol], source-port=[source-port], destination-port=[destination-port], dscp=[dscp], vpn-instance=[vpn-instance], If-name=[If-name], direction=[direction], ttl=[ttl])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwNomatchSnpBindTblDhcpPktAlarm:The number of the discarded DHCP request packets that did not match the binding table exceeded the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanId], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwBrdTempFatalAlarm:The board temperature exceeded the fatal alarm threshold. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityThresholdType=[EntityThresholdType],EntityThresholdCritical=[EntityThresholdCritical],EntityThresholdCurrent=[EntityThresholdCurrent],EntityTrapFaultID=143873,Reason=The card temperature was extremely high.)",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/3/hwGtlCloudServerOffline:The device is disconnected from the cloud license local server. (RemainingDays=[hwLockedRemainDays])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVMEOP/4/hwDevAntiTheftUnAuthTraps:A device anti-theft alarm was generated. (Reason=[ReasonDesc])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwVPNIPv6PoolUsageReachThreshold:The IPv6 address usage of the vpn reached the threshold.(VPNInstance=[VPNName],Threshold=[threshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDT/4/hwLoopDetectWithoutBlock:The interface is in loop state. (PortIndex=[IfIndex], PortName=[IfName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "APS/4/hwRanApsK1K2Mismatch:The bytes K1 and K2 are not matched. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],APS protect IfIndex:[pIfindex],APS protect IfName:[pIfName],APS Group ID:[groupId]).",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamIgrLSPOutDefect:Ingress quit defect. (IfIndex=[IfIndex], TunnelName=[TunnelName], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamMismatch:OAM reported a Mismatch alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwPortalServerDown:The communication with the WEB server fails. (IpAddress=[IpAddress],Vpn-Instance=[Vpn-Instance])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwBdArpNomatchSnpBindTblPktAlarm:The number of the discarded ARP packets that did not match the binding table exceeded the threshold on the bridge domain. (BridgeDomain=[BdIndex], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVpwsPwRedundancyDegradedExpand:VPWS PW redundancy reported a protect degraded alarm. (InterfaceIndex=[InterfaceIndex], InterfaceName=[InterfaceName], PrimaryPwId=[PrimaryPwId], PrimaryPwType=[PrimaryPwType], PrimaryPeerAddress=[PrimaryPeerAddress])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectMep:Unexpected MEP alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EFM/3/dyinggasp:Remote DyingGasp Event occurred. (IfIndex=[IfIndex], RemoteMacAddress=[RemoteMacAddress], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNUserTableExhaustBoardAlarm:User tables ran out. (UserTableNum=[UserTableNum],BoardName=[BoardName], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwIPv6NDRAPrefixLowerlimitWarningAlarm:The IPv6 NDRA prefix usage of the domain [domainName] fell below the lower threshold. (Domain index = [domainIndex],MinThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwFanInvalid:The fan module failed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=139266,Reason=The fan type is mismatch with the device.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwFanFail(entityTrap):The fan partially failed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=137472,Reason=The fan module was in the abnormal state.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASEAP/4/hwEapUserPortMaxNum:The number of EAP user resources on the interface reaches the upper threshold. (ifIndex=[ifIndex],ifDescr=[ifDescr],hwEapUserPortMaxNumThreshold=[hwEapUserPortMaxNumThreshold] )",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwHarddiskOK:Cfcard or HD is OK.(Free=[free-para], Threshold=[threshold-para])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpAdaptiveClientListChange:The client list was refreshed. (hwPtpAdaptiveClientIpList=[hwPtpAdaptiveClientIpList], hwPtpAdaptiveClientIpChangeFlag=[hwPtpAdaptiveClientIpChangeFlag], hwPtpAdaptiveClientIndex=[hwPtpAdaptiveClientIndex], hwPtpAdaptiveClientId=[hwPtpAdaptiveClientId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwDHCP6RelayUsrIPThreshold:The number of DHCPv6 relay IP entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwDHCPRelayIpUnnumberedUsrThreshold:The number of DHCP relay IP unnumbered entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwUserDefAlarm:The User define alarm has been detected. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=\"[EntPhysicalName]\",UserDefAlarmName=\"[UserDefAlarmName]\",UserDefChannel=[UserDefChannel])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwIPPoolDAPDeviceSubnetFull:The number of address segments dynamically allocated to the device reached the maximum number allowed.(UP-Group=[UpGroup])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VRRP6/4/hwVrrp6ExtTrapResLimit:The board resources used for VRRP6 negotiation exceeded the threshold. (ifIndex=[ifIndex], ifName=[ifName], vrrpId=[vrrpId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortLoopGuarded:The loop protection port did not receive BPDU packets within prescriptive time. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPowerInvalid:The power module experienced a complete failure. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=136961,Reason=The power supply on the power module is faulty)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamSF:The tunnel receives an SD2 alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwIPv6PDPrefixLowerlimitWarningAlarm:The IPv6 DHCPv6-PD prefix usage of the domain [domainName] fell below the lower threshold. (Domain index = [domainIndex],MinThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwB1ExcAlarm:B1 threshold crossing alarm! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwAAAAccessUserResourceOrCpuAlarm:The resource of users or cpu usage on the device reached the upper threshold. (Slot=[slotId],Cpu usage=[cpuUsage],User resource usage=[usrResUsage])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamSd1Far:The OAM module reported an alarm, indicating that the far-end packet loss ratio exceeded the sd1 threshold. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSUserQueueApplyPirPreAlarm:The sum of the PIRs requested by all users from the resource pool exceeded 90% of the maximum configuration specification of the TM chip. (SlotId=[slot-id],ChipId=[tm-chip-id],PoolIndex=[pool-index])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPbbEvpnNotSupportTunnelAlarm:The public network tunnel of PBB EVPN cannot forward traffic. (EvpnName=[hwNotSupportTunnelEvpnName], RemoteIp=[hwEVPNPeerRemoteIp], TunnelType=[hwNotSupportTunnelType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPM/1/hwTpmChipFault:A TPM chip fault occurred on a board.(PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsOamLck:The service level of the tunnel has been locked. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNNoPatAddrGroupExhaustBoardAlarm:Addresses in the no-pat public address pool ran out. (AddrGroupName=[AddrGroupName], InstanceType=[InstanceType], InstanceName=[InstanceName], Pre-IPNum=[IPNum], BoardName=[BoardName], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EFM/5/loopbackfailed:Interface starts loopback failed. (IfIndex=[IfIndex],IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPowerFail:The power module experienced a partial failure. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=136719,Reason=The input of power module is abnormal.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "APS/6/hwRanApsInterfaceReady:The interface is up and it becomes the APS group backup interface. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],APS IfIndex:[portIndex],APS IfName:[portName], APS Group ID:[groupId]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNGloablV4SessionNumAlarm:The usage of IPv4 sessions reached the threshold. (Usage = [Usage],Threshold = [Threshold],Slot = [Slot],Cpu = [Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProLoopDetectedRising:The MSTP process's port has been set to discarding state because loopback of protocol packets is detected. (ProcessID=[ProcessID],InstanceID=[InstanceID],PortID1=[PortID1],PortID2=[PortID2],PortID3=[PortID3],PortID4=[PortID4],PortIDFlag=[PortIDFlag],PortState=[PortState],IfIndex=[IfIndex],PortName=[PortName],PwName=[PwName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPwSourceTunnelCheckAlarm:The packets are discarded because they do not match the PW source tunnel. (PwLabel=[hwPwLabel], TeLabel=[hwTeLabel], PortName=[hwPortName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortBpduGuarded:The MSTP process's edge port with BPDU protection enabled will be shut down, because it received a BPDU packet. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwDHCPCAllocIpConflictAlarm:DHCP client received an ARP packet with a conflict IP address. (IPAddress=[ipAddr], MACAddress=[mac-address], Interface=[ifName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamMeg:OAM reported an unexpected MEG alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwE1DownE1AisAlarm:Downstream alarm indication signal on E1 port! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/2/hwIpRanDcnNeIdConflict:NEID conflict. (ConflictNEID=[ConflictNEID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwIPv6AddressLowerlimitWarningAlarm:The IPv6 address usage of the domain [domainName] fell below the lower threshold. (Domain index = [domainIndex],MinThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNDhcpAllocIpConflict:The IP address assigned by the DHCP server to the interface conflicts with the NAT public IP address. (IPAddress=[IPAddress], VPNName=[VPNName], InterfaceName=[InterfaceName], Scene=[Scene], Description=[Description])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamEgrLSPAva:Egress LSP enter available state. (LspName=[LspName], LsrId=[LsrId], TunnelId=[TunnelId], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwUserIPConflictAlarm:IP address is conflict. (PoolNo.=[PoolNo],Conflict ip=[Conflict-ip],PoolName=[PoolName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwFanUnusable:The fan module was unavailable. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPdVltLow:PD voltage is lower. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNSessionExhaustBoardAlarm:CGN session resources ran out. (SessionNumber=[SessionNumber],BoardName=[BoardName], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamNearDualLossSD1:Signal Degraded threshold1 near-end alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASVSM/4/hwVsmEDSGApplyStatResourceFailAlarm:Failed to apply for statistic resources for the EDSG. (Slot = [Slot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwChassisInvalid:The chassis totally failed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntityPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=131587,Reason=The board types of the master and slave MPUs are different.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NHRP/3/hwNHRPLocalPeerLimitReachAlarm:The number of NHRP local peers reached the alarm limit. (LimitValue=[NhrpLocalPeerLimit], CurrentNumber=[NhrpLocalPeerNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamL2vcAva:L2VC enter available state. (PeerIp=[PeerIp], VCType=[VCType], VCID=[VCID], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwBaseArpVlanCarEnhanceTrap:ARP VLAN CAR became effective on an interface, which was probably due to a loop on the interface. (Logical Interface = [LogicalInterface], Physical Interface = [PhysicalInterface], Pe-Vlan = [PeVlan], Ce-Vlan = [CeVlan], Sample Rate = [SampleRate])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwAAAChasisIPv6AddressThresholdAlarm:The number of ipv6 address reached the upper limit of the device. (hwAAAChasisIpv6AddrThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/2/hwIpRanDcnSerialReachLimit:The number of DCN serial interfaces has reached the maximum value. (Number=[Number])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamNearDualLossSD1Recovery:Signal Degraded threshold1 near-end alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpVsiAlarm:Alarm only when loop existed in VSI. (VsiName=[vsiname], AlarmReason=[alarmreason], DetectMAC=[detectMAC], InterfaceName1=[AcName1], InterfaceName2=[AcName2], InterfaceName3=[AcName3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectMegLevel:MEG level alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserNameIndexAllocAlarm:The user name index usage exceeds the upper threshold. (userIndexUsage = [userNameIdUsage])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwVllVpnQosOverTunnelAlarm:VLL VPN QoS services are not supported on the public network tunnel. (InterfaceName=[hwVLLACPortName], RemoteIP=[hwVLLPeerRemoteIp], TunnelType=[hwNotSupportTunnelType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectPhb:Unexpected phb alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwPolicyRouteSlotMaxNum:The number of policy route resources on the board exceeded the threshold.(Slot=[Slot],PolicyRouteThreshold=[PolicyRouteThreshold],CID=[CID],PolicyRoute=[PolicyRoute])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/1/topologyChange:Bridge topology changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserSlotMaxNum:The number of user resources on the board reached the threshold. (Slot=[slotid],SlotMaxUserThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRDS/4/hwRadiusServerGroupDown:All the configured authentication or accounting servers in the RADIUS server group are down. (GroupName=[GroupName],ServerType=[ServerType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamSd2Near:The OAM module reported an alarm, indicating that the near-end packet loss ratio exceeded the sd2 threshold. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPWOverLdpOverGRENotSupportForwardAlarm:The public network tunnel used to carry the VPLS PW or EVPN is a LDP over GRE tunnel and the VPLS PW or EVPN cannot forward traffic. (VsiName=[hwVplsOverLdpOverGreVsiName], RemoteIp=[hwPeerRemoteIp], PwId=[hwVplsOverLdpOverGrePwId], EvpnName=[hwEvpnOverLdpOverGreEvpnName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwArpNomatchSnpBindTblPktAlarm:The number of the discarded ARP packets that did not match the binding table exceeded the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanID], DiscardedNumber=[DropNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwUntrustedReplyPktAlarm:The number of the discarded DHCP reply packets on the untrusted interface exceeded the threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanId], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/2/hwMplsApsOutage:Tunnel protection group changed to defect state. (IfIndex=[WorkTunnelIfIndex], SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],WorkTunnel=[WorkTunnel], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwSvcDown:The status of the SVC VC turned DOWN. (InterfaceIndex=[InterfaceIndex], InterfaceIndex=[InterfaceIndex2], SvcId=[SvcId], SVcType=[SVcType], PeerAddress=[PeerAddress], SvcInboundLabel=[SvcInboundLabel], SvcOutboundLabel=[SvcOutboundLabel], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], InterfaceName=[InterfaceName], TunnelPolicyName=[TunnelPolicyName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwIpv4FramedRouteThresholdAlarm:The ipv4 framed route usage exceeds the upper threshold. (ipv4FramedRouteUsage=[ipv4FramedRouteUsage])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPFPM/2/hwIpfpmTwoDelayExceed:The two-way delay of IPFPM test instance exceeded the upper threshold in continuous five test intervals. (TestInstanceId=[InstanceId], AchId=[AchId], IpfpmMcpSeqNoHigh=[SeqNoHigh], IpfpmMcpSeqNoLow=[SeqNoLow], TwoDelay=[DelayValue], InstDesc=[InstDesc])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamAis:The tunnel receives an AIS alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/5/hwMflpLinkBlocked:The AC interfaces of the main interface have been blocked due to MAC-Flapping association. (VsiName=[vsiname], ACInterfaceName=[ACName], MainInterfaceName=[MainIfName], BlockTime=[blockTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwUsedIPv6AddressAlarm:The number of IPv6 addresses in the IPv6 pool reached the threshold. (IPv6PoolIndex=[IPv6PoolIndex],IPv6PoolName=[IPv6PoolName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IMA/2/hwImaGroupNeDownAlarm:The alarm indicating a failure in the local IMA group is generated. (IfIndex=[IfIndex], ImaGroupName=[ImaGroupName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlItemExpire:The SnS of the cloud-based license sales item expires. Renew the license in time. (Chassis ID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/1/hwMplsOamLoss:The tunnel receives a consecutive packet loss alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], IfIndex=[IfIndex], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], IfName=[IfName], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/2/hwDhcpv6SnpBindTblExhaust:The number of DHCPv6 Snooping binding entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwAllocUserIPFailAlarm:Fail to alloc IP address from domain. (DomainNo.=[DomainNo],DomainName=[DomainName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/1/hwPortDown:The status of the physical interface is Down. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=144384,ReasonDescription=[hwPortDownReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwKompellaSwitchPtoW:The status of the Kompella VC turned working from protecting . (VcVpnName=[VcVpnName], CeId=[CeId], InterfaceIndex=[InterfaceIndex], RemoteCeId=[RemoteCeId], CtrlWord=[CtrlWord], SecondaryVcRemoteCeId=[SecondaryVcRemoteCeId], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwVrdiAlarm:VT path remote defect indication! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwE3AlmE3RaiAlarm:Remote alarm indication on E3 port! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNNoPatAddrGroupExhaustAlarm:Addresses in the NO-PAT public address pool ran out. (AddrGroupName=[AddrGroupName], InstanceType=[InstanceType], InstanceName=[InstanceName], Pre-IPNum=[IPNum], Slot =[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwLpTimVc12Alarm:Trace identifier mismatch on VC12 lower order path! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/2/hwMgmdBrasUserLimit:The number of multicast users that join dynamic groups on the board reaches the upper limit. (AddressFimaly=[AddressFamily],SlotName=[SlotName],LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectMeg:Unexpected MEG alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewEdgePortChanged:After the edge port receives a BPDU packet, the port is no longer an edge port. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwLocalIPPoolDifferWithServer:DHCP server's IP pool is different from the local one. (PoolNo.=[PoolNo],PoolName=[PoolName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamDloc:OAM reported an alarm about PW disconnection. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwDhcpServerDown:DHCP server is down or IP remote pool is full. (PoolNo.=[PoolNo],Server=[Server],Router=[Router],VPN instance=[vpn-instance],Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CFG/2/hwCfgMinisystemConfigRecovery:The system use mini-system configurations to recovery.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwSingleCCCVcDown:The status of the single CCC VC turned DOWN. (InterfaceIndex=[inInterfaceIndex], InterfaceIndex=[outInterfaceIndex], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], InInterfaceName=[InInterfaceName], OutInterfaceName=[outInterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_MC/4/hwMcLeafCfcCheck:The number of leaves on the control plane was different from that on the forwarding plane. (Slot=[Slot])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSUserQueueApplyPirExhaustionAlarm:The sum of the PIRs requested by all users from the resource pool exceeded the maximum configuration specification of the TM chip. (SlotId=[slot-id],ChipId=[tm-chip-id],PoolIndex=[pool-index])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "APS/6/hwRanApsProtectSwitchOver:APS protection switch successful. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],APS IfIndex:[portIndex],APS IfName:[portfName], APS interface type:[portType],APS Group ID:[groupId]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwHarddiskReachThreshold:Cfcard or Hd is out of threshold.(Free=[free-para], Threshold=[threshold-para])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASVSM/4/hwVsmEDSGApplySqResourceFailAlarm:Failed to apply for user queue resources for the EDSG. (Slot = [Slot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwUserIPConflictAlarm:IP address is conflict. (Conflict ip=[ConfIP],PoolNo.=[PoolNo],PoolName=[PoolName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectMepRecovery:Unexpected MEP alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/4/hwDcnInterfaceSessionThreshold:The number of PPPoE DCN sessions on the interface exceeded the threshold. (InterfaceIndex=[InterfaceIndex], InterfaceName=[InterfaceName], SessionNum=[SessionNum], SessionSpec=[SessionSpec])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserIPv6AddressAllocAlarm:The IPv6 address usage of the domain [domainName] reached the upper threshold. (Domain index = [domainIndex],Threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRUI/4/hwBrasRbsSyncErr:RBS batch backup persisted for a long time. (RBS = [hwBrasRbsName], SYN_TIME = [hwBrasRbsSynTime], SYN_STATE = [hwBrasRbsSynState])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EFM/3/nonthreshold:Nonthreshold Event occured. (IfIndex=[IfIndex], EventLogIndex=[EventLogIndex], EventLogTimestamp=[EventLogTimestamp], EventLogOUI=[TrapLogOUI], EventLogType=[TrapLogType], EventLogLocation=[TrapLogLocation], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortRootGuarded:The root protection port received a superior message. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwMulticastUserExceedLimitGEPre:The number of multicast users from GE has reach 95% of the threshold. (Slot = [slotid],Threshold= [threshold],SlotID = [slotindex])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcReportListeningGrpExceed:The number of multicast groups has already exceeded the limit on a specific board. (GmpAfVersion=[GmpAfVersion], IfIndex=[IfIndex], IfName=[IfName], PafValue=[PafValue], MulticastGroup=[MulticastGroup], MulticastSource=[MulticastSource], Vsi=[VsiName], PE-Vid=[PE-Vid], CE-Vid=[CE-Vid], Mac=[mac])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwCposE1AlmE1RaiAlarm:Remote alarm indication on E1 link channelized from CPOS! (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/1/hwFIBOverloadForward:The interface board is in the overload forwarding state because the FIB module is overloaded. (EntityPhysicalIndex=[EntityPhysicalIndex], HwBaseTrapSeverity=[HwBaseTrapSeverity], HwBaseTrapProbableCause=[HwBaseTrapProbableCause], HwBaseTrapEventType=[HwBaseTrapEventType], HwFibOverloadModule=[HwFibOverloadModule], entPhysicalName=[entPhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASL2TP/4/hwL2tpTunnelUpOrDown:The status of L2TP tunnel changed (LocalTunnelID=[LocalTunnelID], TunnelRemoteName=[TunnelRemoteName],PeerIPAddress=[PeerIPAddress],TunnelStatus=[TunnelStatus],TunnelDownReason=[TunnelDownReason],RemoteTunnelID=[RemoteTunnelID],SessionCount=[SessionCount]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwBrdTempAlarm:The board temperature exceeded the upper alarm threshold. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityThresholdType=[EntityThresholdType],EntityThresholdCritical=[EntityThresholdCritical],EntityThresholdCurrent=[EntityThresholdCurrent],EntityTrapFaultID=143616,Reason=The subcard temperature was too high.)",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LPT/2/hwLptClosePortAlarm:LPT closed access port. (ifName=[ifName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpAdaptiveNegoInfoChange:The negotiation status between the local client and the server changes. (ServerId=[ServerId], NegoState=[NegoState], ErrorReason=[ErrorReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsOamExcess:The tunnel receives an Excess alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NHRP/4/hwNHRPPeerThresholdExceedAlarm:The number of NHRP peers reached the alarm threshold. (Threshold=[NhrpThrhold], CurrentNumber=[NhrpPeerNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwPwApsSwitchFail:APS reported an alarm about the inconsistent switching results on the local and remote ends. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserDelegationPrefixAllocAlarm:The IPv6 DHCPv6-PD prefix usage of the domain [domainName] reached the upper threshold. (Domain index = [domainIndex],Threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DISASTER_RECOVERY/2/hwCuCpRoleConflict:The disaster recovery roles of two CPs conflict. (hwSourceIpAddress=[hwSourceIpAddress],hwPeerIpAddress=[hwPeerIpAddress])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwBRASLicenseItemEvent:The BRAS services were configured, but their licenses were not activated.(Service enable configuration=[hwBRASServiceEnable],License item name=[hwBRASLicenseItemName],License item description=[hwBRASLicenseDescription]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwDelayOverConfig:Real-time E2E delay exceeded the configured delay. (IfIndex=[IfIndex],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwPoolGroupUsedIPExhaust:The number of IP addresses in the IP pool group is exhausted. (PoolGroupNo.=[PoolGroupNo],PoolGroupName=[PoolGroupName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwL2vpnOamLck:OAM reported a LCK alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwIPPoolDAPApplyUnsuccessful:Fail to apply for the address segment. (PoolName=[PoolName],Subnet=[Subnet],Mask=[Mask],Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AM/3/hwGlobalAllocatedIpLimitReachAlarm:The number of globally assigned IPv6 addresses reached the limit. (LimitValue=[LimitValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePdPowerOvercurrent:PD is overcurrent. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamAlarmIndicationSignal:AIS alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwBip2ExcAlarm:BIP2 threshold crossing alarm! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPFPM/4/hwIpfpmDcpFlowConflict:The flow conflicts with another existing flow.(TestInstanceId=[InstanceId], FlowType=[FlowType], ConflictInstId=[ConflictInstanceId], ConflictFlowType=[ConflictFlowType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AM/3/hwUsedIPExhaust:The number of IP addresses in the IP pool is exhausted. (PoolIndex=[PoolIndex], PoolName=[PoolName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PPP/4/hwMpDown:The number of available member links in the MP-Group fell below the lower threshold and the MP-Group went Down. (IfIndex=[IfIndex], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwBip2TcaAlarm:BIP2 threshold crossing alarm! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/2/hwMplsApsDegraded:Tunnel protection group receives an APS degraded alarm. (IfIndex=[WorkTunnelIfIndex], SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],WorkTunnel=[WorkTunnel], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePdConnected:PD connected. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwChannelLoopbackAlarm:Channel loopback alarm! (HpPerfCurrentIfIndex=[IfIndex],LpPerfCurrentIfIndex=[IfIndex],InterfaceIndex=[IfIndex],LoopType=[LoopType],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamFarDualLossSD2:Signal Degraded threshold2 far-end alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASE-TRAP/4/hwRadiusAcctServerDown:The communication with the RADIUS accounting server fails. (IpAddress=[IpAddress],Vpn-Instance=[Vpn-Instance],Port=[Port])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwPimBasNeighborLoss:PIM neighbor loss. (NbrIntIndex=[NbrIntIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime], NbrIntName=[NbrIntName], InstanceID=[InstanceID], InstanceName=[InstanceName], NeighborLossReason=[NeighborLossReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePowerOff:PD powered off. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiBierOutRtpSerOverThreshold:The outbound packet disorder rate of the channel exceeds the threshold. (ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], VpnLabel=[hwEmdiVpnLabel], BfirId=[hwEmdiBfirId], SubDomain=[hwEmdiSubDomain], Bsl=[hwEmdiBsl], SI=[hwEmdiSi], RtpSerThreshold=[hwEmdiRtpSerThreshold], RtpSer=[hwEmdiRtpSerValue], Slot=[hwEmdiChannelSlot], Interface=[hwEmdiChannelInterface], Token=[hwEmdiToken])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamUnknown:OAM reported an Unknown alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPWVcSwitchWtoPExpand:The status of the PWE3 VC turned protecting from working. (VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], CtrlWord=[CtrlWord], SecondaryPwId=[SecondaryPwId], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASRUI/4/hwBrasRuiTriggerErr:User services on the RUI backup device failed to be recovered for a long period of time.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IMA/3/hwImaLinkFeTxUnusableAlarm:The alarm indicating that the remote IMA link cannot be used to send cells is generated. (IfIndex=[IfIndex], ImaLinkName=[ImaLinkName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewBridgeLostRootPrimary:MSTP process is no longer the root bridge of the instance. (ProcessID=[ProcessID],InstanceID=[InstanceID],proInstRootType=[proInstRootType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwPwApsOutAge:APS reported a PW Outage alarm. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwL2vpnOamLocalLock:OAM reported a LocalLock alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiBierRtpSerOverThreshold:Channel packet disorder rate exceeds the threshold. (ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], VpnLabel=[hwEmdiVpnLabel], BfirId=[hwEmdiBfirId], SubDomain=[hwEmdiSubDomain], Bsl=[hwEmdiBsl], SI=[hwEmdiSi], RtpSerThreshold=[hwEmdiRtpSerThreshold], RtpSer=[hwEmdiRtpSerValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPFPM/2/hwIpfpmOneDelayExceed:The one-way delay of IPFPM test instance exceeded the upper threshold in continuous five test intervals. (TestInstanceId=[InstanceId], AchId=[AchId], IpfpmMcpSeqNoHigh=[SeqNoHigh], IpfpmMcpSeqNoLow=[SeqNoLow], FlowType=[FlowType], ForwardOneDelay=[ForDelayValue], BackwardOneDelay=[BackDelayValue], InstDesc=[InstDesc])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_Y1731/3/hwY1731TunnelNonSupport:Y.1731 does not support the current public tunnel. (MdName=[MdName], MaName=[MaName], MepId=[MepId], MdIndex=[MdIndex], MaIndex=[MaIndex])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserNDRAPrefixAllocAlarm:The IPv6 NDRA prefix usage of the domain [domainName] reached the upper threshold. (Domain index = [domainIndex],Threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsOamLocalLock:The tunnel has been locked. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiEdgePortChanged:After the edge port receives a BPDU packet, the port is no longer an edge port. (InstanceID=[InstanceID], PortIndex=[PortIndex], EdgePortEnableState=[EdgePortEnableState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/2/hwEthoamClosePortAlarm:NNI or Remote UNI fault, the service UNI interface is closed by Ethernet OAM PortLink Function. (PhysicalIndex=[PhysicalIndex], ChassisId=[ChassisId], SlotId=[SlotId], CardId=[CardId], PortId=[PortId], PortDecrip=[PortDescrip], MepId=[MepId], UniName=[UniName]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesStrayPktExcAlarm:Stray packets over limit alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwIpv6NomatchV6SnpBindTblPktAlarm:The number of the discarded IPv6 packets that did not match the binding table exceeded the threshold on the interface. (IfIndex=[IfIndex], Interface=[IfName], DiscardedNumber=[DropNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwIPv6AddressExhaustAlarm:The IPv6 addresses in the IPv6 pool is exhausted.(IPv6PoolIndex=[IPv6PoolIndex],IPv6PoolName=[IPv6PoolName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDHCPCAllocIpFailAlarm:The DHCP client fails to obtain an address. (InterfaceName=[ifName], AddressType=[protocolType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamPeriod:OAM reported an alarm about an unexpected CV packet period. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpaPortStateChange:The port status changes. (hwPtpaVPortId=[hwPtpaVPortId], hwPtpaPortState=[hwPtpaPortState], hwPtpaOldPortState=[hwPtpaOldPortState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/2/hwDhcpSnpBindTblExhaust:The number of DHCP Snooping binding entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesLosPktExcAlarm:Loss packets over limit alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamMep:OAM reported an unexpected MEP alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnEtreeMulErrConfig:In an EVPN E-Tree dual-homing scenario, the leaf attributes of the AC interfaces bound to the EVPN instance were different, causing a traffic loop. (EVPNInstanceName = [EVPNInstanceName], IfName = [IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDHCPRelayIpUnnumberedUsrExhaust:The number of DHCP relay IP unnumbered entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimBasNeighborExceed:The number of BAS PIM neighbors reached the upper limit. (AddressFamily=[AddressFamily], SlotID=[SlotName], CurrentCount=[CurrentCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiBierRtpLrOverThreshold:Channel packet loss rate exceeds the threshold. (ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], VpnLabel=[hwEmdiVpnLabel], BfirId=[hwEmdiBfirId], SubDomain=[hwEmdiSubDomain], Bsl=[hwEmdiBsl], SI=[hwEmdiSi], RtpLrThreshold=[hwEmdiRtpLrThreshold], RtpLr=[hwEmdiRtpLrValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamUnknown:The tunnel receives an Unknown alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamMismerge:OAM reported a Mismerge alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/2/hwIPSecPkiWhitelistNegotiationFail:IPSec negotiation failed due to pki whitelist.(Peer=[PeerIP], CN=[CommonNameValue], Vrf=[VrfName], Port=[PortNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamL2vcOutDefect:L2VC quit defect. (PeerIp=[PeerIp], VCType=[VCType], VCID=[VCID], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortBpduGuarded:The edge port with BPDU protection enabled will be shut down, because it received a BPDU packet that may be used to initiate an attack. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/5/hwMstpiBridgeLostRootPrimary:This bridge is no longer the root bridge of the MSTP. (InstanceID=[InstanceID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwIPLowerlimitWarningAlarm:The IP address usage of the domain [domainName] fell below the lower threshold. (Domain index = [domainIndex],MinThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamDbdi:OAM reported a BDI alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesJtrUdrExcAlarm:Jitter-Buffer underrun alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_L2/4/hwL2ProtocolTunnelDropThresholdRaising:The number of the protocol transmit on the port reach the drop threshold. (IfName=[ifname], ProtocolName=[protocolname], DropThreshold=[dropthreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamNearDualLossSD2:Signal Degraded threshold2 near-end alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/1/hwRroolAlarm:Out of lock of received reference clock! (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwCachetoFTPFail:Fail to upload the bills from pool to TFTP server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwHarddiskoverflow:Cfcard or Hd is full!(Free=[free-para], Thres=[thres-para])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiTcGuarded:With the TC protection enabled, if TC BPDUs were received after the number of TC BPDUs received by an instance exceeded the threshold, these TC BPDUs were processed after the TC protection time expires. (InstanceID=[InstanceID], bridgePriority=[bridgePriority])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ATM/3/hwUhcsAlarm:Uncorrectable header check sequence error! (IfIndex=[IfIndex], SlotId=[SlotId], CardId=[CardId], PortId=[PortId],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_L2/2/hwVirtualEthernetChipMismatchAlarm:The chipId of this Virtual-Ethernet interface is inconsistent with the chip of the internal binding channel port. (PortName=[InterfaceName],PortIndex=[IfIndex])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamIgrLSPAva:Ingress enter available state. (IfIndex=[IfIndex], TunnelName=[TunnelName], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpVlanAlarm:Alarm only when loop existed in VLAN. (VLAN=[vlanid] , AlarmReason=[alarmreason], DetectMAC=[detectMAC], InterfaceName1=[AcName1], InterfaceName2=[AcName2], InterfaceName3=[AcName3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_Y1731/3/hwY1731PwTrunkNonSupport:Y.1731 PW side packet loss statistics does not support PW public network port type is ETH-Trunk interface. (MdName=[MdName], MaName=[MaName], MepId=[MepId], MdIndex=[MdIndex], MaIndex=[MaIndex], MepIndex=[MepIndex])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamIgrLSPInDefect:Ingress enter defect. (IfIndex=[IfIndex], TunnelName=[TunnelName], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNSessionExhaustAlarm:CGN session resources ran out. (SessionNumber=[SessionNumber],Slot=[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwSnpUserNumberAlarm:The number of the binding items exceeded the threshold of user limit on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanID], binding-item-number=[BindingItemNum], max-user-number=[MaxUserNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnRingIdConflictAlm:The number of peers with the same ring-id exceeded the limit. (RingId=[RingId], RouterId=[RouterId])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcReportListeningThresholdExceed:The number of Layer 2 multicast QinQ stacking/mapping users on a board reached the threshold. (AddressFamily=[AddressFamily], SlotName=[SlotName], CurrentNumber=[CurrentNumber], TotalNumber=[TotalNumber], Threshold=[Threshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamFarDualLossSD1:Signal Degraded threshold1 far-end alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserIPAllocAlarm:The IP address usage of the domain [domainName] reached the upper threshold. (Domain index = [domainIndex],Threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwDiameterPeerFaultyV6:The link between pcef and pcrf is abnormal. (DiameterPeerHostName=[hwDiameterPeerHostName],DiameterPeerIP=[hwDiameterPeerIpStr],DiameterPeerPort=[hwDiameterPeerPort],DiameterLocalIf=[hwDiameterLocalIf],DiameterGrpLinkLocalPort=[hwDiameterGrpLinkLocalPort])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesPwOppositeAcFault:Pseudo wire opposite ac over limit alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSHardPipeAlarm:The hard-pipe service on interface [interface-name] has reached [bandwidth-usage]% of interface's hard-pipe capability.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpSnpChaddrAlarm:The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeded the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanId], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IMA/2/hwImaGroupFeDownAlarm:The alarm indicating a failure in the remote IMA group is generated. (IfIndex=[IfIndex],ImaGroupName=[ImaGroupName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortRootGuarded:The root protection port of the instance of the MSTP process received a superior message. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwE1EstcaAlarm:Estca alarm on E1 port is detected! (PhyIfIndex=[PhyIfIndex],SlotId=[SlotId],CardId=[CardId],PortId=[PortId],InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwPhysicalPortCrcSd:The MAC-FCS-SD of signal alarm has occurred. (IfIndex=[hwPhysicalPortThrIfIndex],IfName=[hwPhysicalPortThrName],CurrentValue=[hwPhysicalPortCrcPerCurrentValueString],AlarmThreshold=[hwPhysicalPortCrcPerAlarmThresholdString],ResumeThreshold=[hwPhysicalPortCrcPerResumeThresholdString])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpPwBlock:The PW turned to block state. (Vsi Name=[vsiname], Peer IP=[peerip], PW ID=[pwid], Block Time=[blocktime], Block Reason=[blockreason], DetectMAC=[mac])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcUserPerEntryThresholdExceed:The number of l2 multicast user entries in one group exceeded the upper threshold on a specific board. (AddressFamily=[AddressFamily], SlotName=[SlotName], VsiName=[VsiName], MulticastGroup=[MulticastGroup], MulticastSource=[MulticastSource], CurrentCount=[CurrentCount], LimitCount=[LimitCount], Threshold=[Threshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwL2vpnOamCsf:OAM reported an alarm about a client signal failure. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRDS/4/hwRadiusDiscardCachePacket:Packets buffered earliest were dropped because the memory usage reached the threshold. (MemoryUsage = [hwRadiusMemoryUsage], MemoryThreshold = [hwRadiusThreshold],CachePackets=[hwRadiusCachePackets])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNNoPatAddrGroupThresholdBoardAlarm:The number of IP addresses allocated from the no-pat public network address pool reached the threshold. (AddrGroupName=[AddrGroupName], InstanceType=[InstanceType], InstanceName=[InstanceName], Pre-IPNum=[IPNum], Threshold=[Threshold], BoardName=[BoardName], Cpu =[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortStateForwarding:The port has been set to forwarding state. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ERPS/2/hwErpsFwStateDiscarding:The state of ERPS port was changed to discarding. (RingId=[RingID], InterfaceIndex=[IfIndex], InterfaceName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamMisMerge:The tunnel receives a MisMerge alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamEgrLSPOutDefect:Egress LSP quit defect. (LspName=[LspName], LsrId=[LsrId], TunnelId=[TunnelId], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "APS/4/hwRanPgpKeepalivePktOvertime:PGP Keepalive packets time out. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex], APS protect IfIndex:[pIfindex],APS protect IfName:[pIfname],APS Group ID:[groupid],APS PEER IP:[peerip]).",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VCLUSTER/1/hwVccDataChannelFault:The data channel of virtual cluster failure.(LocalChassisId=[LocalChassisId], NeighbourChassisId=[NeighbourChassisId], GroupId=[GroupId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwBdUntrustedReplyPktAlarm:The number of the discarded DHCP reply packets on the untrusted interface of the bridge domain exceeded the threshold. (BridgeDomain=[BdIndex], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPhysicalPortCrcExc:The MAC-FCS-EXC of signal alarm has occurred. (IfIndex=[hwPhysicalPortThrIfIndex],IfName=[hwPhysicalPortThrName],CurrentValue=[hwPhysicalPortCrcPerCurrentValueString],AlarmThreshold=[hwPhysicalPortCrcPerAlarmThresholdString],ResumeThreshold=[hwPhysicalPortCrcPerResumeThresholdString])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EMDI/4/hwEmdiBierOutRtpLrOverThreshold:The outbound packet loss rate of the channel exceeds the threshold. (ChannelSourceAddress=[hwEmdiChannelSourceAddress], ChannelGroupAddress=[hwEmdiChannelGroupAddress], VpnLabel=[hwEmdiVpnLabel], BfirId=[hwEmdiBfirId], SubDomain=[hwEmdiSubDomain], Bsl=[hwEmdiBsl], SI=[hwEmdiSi], RtpLrThreshold=[hwEmdiRtpLrThreshold], RtpLr=[hwEmdiRtpLrValue], Slot=[hwEmdiChannelSlot], Interface=[hwEmdiChannelInterface], Token=[hwEmdiToken])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamRemoteDefectIndicationRecovery:RDI alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VXLAN/2/hwCuUpVxlanTunnelDown:A VXLAN tunnel between the CP and UP Service went Down. (SrcAddr=[SrcAddr],PeerAddr=[PeerAddr],VniId=[VniId],Vpn=[Vpn])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSHardPipeApplyFailAlarm:The hard pipe configured on the interface [interface-name] does not take effect.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelTpOamLossSD:The tunnel receives a local SD1 alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwDHCP6RelayUsrTblThreshold:The number of DHCPv6 relay entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/newRoot:This bridge changed to be the root bridge.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "APS/4/hwRanApsK2Mismatch:The K2 byte is not matched. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],APS protect IfIndex:[pIfindex],APS protect IfName:[pIfName],APS Group ID:[groupid]).",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPdVltHigh:PD voltage is high. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectPeriodRecovery:Unexpected period alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwVSUServiceFaultAlarm:VSU service fault alarm. (FaultCode=[FaultCode], FaultKey=[FaultKey], ReasonDescription=[ReasonDescription], BoardName=[BoardName], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProRootLost:The bridge loses the position of root bridge. (ProcessID=[ProcessID], InstanceID=[InstanceID], ProInstRootType=[ProInstRootType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/2/hwIpRanDcnNeNumberOverLoad:DCN NE number overload start. (NeNumber=[NeNumber])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamNearDualLossSD2Recovery:Signal Degraded threshold2 near-end alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSSoftPipeAlarm:The soft-pipe service on interface [interface-name] has reached [bandwidth-usage]% of interface's soft-pipe capability.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SOC/4/hwAccessRateRemainsLowAlarm:The duration during which the access rate decrease percentage is lower than the preset threshold exceeded the preset duration. (PositionId=[positionId], Alarm interval=[alarmInterval], Threshold=[threshold], Set duration percentage=[setDurationPercentage], Actual duration percentage=[actualDurationPercentage])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRDS/4/hwRadiusCachePacketThresholdAlarm:The number of cached packets reached the upper limit. (MaxCachePackets=[hwRadiusMaxCachePackets],Threshold=[hwRadiusThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwIPPoolDAPReleaseUnsuccessful:Fail to release an address segment. (PoolName=[PoolName],Subnet=[Subnet],Mask=[Mask],Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDHCP6RelayUsrTblExhaust:The number of DHCPv6 relay entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNUserTableThresholdAlarm:The number of user tables reached the upper limit. (UserTableNum=[UserTableNum],Threshold=[Threshold],Slot=[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPwSourceTunnelNoTeCheckAlarm:The packets are discarded because they do not match the PW source tunnel and contain no public network labels. (PwLabel=[hwPwLabel] , PortName=[hwPortName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlCloudNearDeadline:Cloud license is near deadline, remain time is [hwGtlRemainTime] day (s).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamRdi:OAM reported an alarm about a remote defect. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwUnstableAlarm:The physical entity was installed unstably. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapEntType=[EntityTrapEntType],EntityTrapFaultID=143362,Reason=The fan was installed unstably.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwFanRemove:A fan module was removed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=137216,Reason=A fan module was removed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwIPPoolDAPSubnetFull:The number of address segments dynamically allocated to the device reached the upper limit allowed by the dynamic address pool. (PoolName=[PoolName],DAPName=[DAPName],UP-Group=[UpGroup])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamLossOfConnectionRecovery:Loss of continuity alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwAAAOnlineSessoinLowerLimitAlarm:The number of sessions fell below the lower limit of the device. (SessionLowerLimitThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamMep:The tunnel receives a MEP alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ATM/2/hwAtmPwMisorderPktExcAlarm:Number of lost ATM PW disorder packets on the network side over the threshold in a certain period. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPFPM/2/hwIpfpmLossRatioExceed:The loss ratio of IPFPM test instance exceeded the upper threshold in continuous five test intervals. (TestInstanceId=[InstanceId], AchId=[AchId], IpfpmMcpSeqNoHigh=[SeqNoHigh], IpfpmMcpSeqNoLow=[SeqNoLow], FlowType=[FlowType], ForwardPktLossRatio=[ForPktLossRatio], BackwardPktLossRatio=[BackPktLossRatio],InstDesc=[InstDesc])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamSd2Far:The OAM module reported an alarm, indicating that the far-end packet loss ratio exceeded the sd2 threshold. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NHRP/4/hwNHRPDynPeerThresholdExceedAlarm:The number of NHRP dynamic peers reached the alarm threshold. (DynamicThreshold=[NhrpDynThrhold], CurrentNumber=[NhrpDynPeerNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsOamFail:The tunnel receives an OAMFAIL alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], IfIndex=[IfIndex], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], IfName=[IfName], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsStaticLspDown:Static LSP went Down. (LspIndex=[LspIndex], InSegmentIndex=[InSegmentIndex], OutSegmentIndex=[OutSegmentIndex], OutIfIndex=[OutIfIndex], LspName=[LspName], LspStatus=[LspStatus], OutIfName=[OutIfName], InIfIndex=[InIfIndex], InIfName=[InIfName], ReasonIndex=[ReasonIndex], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IMA/3/hwImaLinkFeRxUnusableAlarm:The alarm indicating that the remote IMA link cannot be used to receive cells is generated. (IfIndex=[IfIndex],ImaLinkName=[ImaLinkName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PPP/4/hwLcpNegotiateFailed:LCP negotiation failed on the local interface. (IfName=[ifName], hwPppNegotiationFailReason=[hwPppNegotiationFailReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNServerMapNumExhaustAlarm:The server-map table is used up. (ServerMapNumber=[ServerMapNumber], Slot=[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_NQA/3/hwTwampNotSupportServiceUnderIntf:TWAMP does not support services on the bound interface. (SessionId=[SessionId])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDT/4/hwAutoLoopDetectTriggerDown:The interface turned to trigger-down state,because of the loop detected on this interface. (Interface=[IfName], VlanId=[VlanId], InstName=[vsi_name])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwCposE1LfaAlarm:Loss of frame alignment on E1 link channelized from CPOS! (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/3/hwGlobalAllocatedPrefixLimitReachAlarm:The number of globally assigned IPv6 prefixes reached the limit. (LimitValue=[LimitValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsOamRdi:The tunnel receives a RDI alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], IfIndex=[IfIndex], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], IfName=[IfName], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SFLOW/4/hwSFlowUnsupportedBoard:The board doesn't support sFlow. (Slot=[hwSFlowEnSlot])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwBdSnpUserNumberAlarm:The number of the binding items exceeded the threshold of user-limit on the bridge domain. (BridgeDomain=[BdIndex], binding-item-number=[BindingItemNum], max-user-number=[MaxUserNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwAAASlotIPv6AddressThresholdAlarm:The number of ipv6 address in the slot reached the upper limit of the device. (Slot=[slotId],hwAAASlotIpv6AddrThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserOnlineFailAlarm:A large number of users failed to go online. (slot=[Slot],onlinefail nums=[OnlineFailNum],success ratio=[OnlineSuccessPercentage]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwPwApsIdMismatch:APS reported an ID mismatch alarm. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwAAALnsUserNumOverLimitAlarm:The number of LNS users on the device is over the limit. (Up-group=[upGrpNo],OnlineLnsUserNum=[userNum],MaxLnsUserNum=[maxUserNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwPWVcSwitchPtoWExpand:The status of the PWE3 VC turned working from protecting. (VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress],CtrlWord=[CtrlWord], PrimaryPwId=[PrimaryPwId], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/6/hwGpsModuleInsert:The Atom GPS module was inserted. (hwEntityPhysicalIndex=[hwEntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex],entPhysicalName=[entPhysicalName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/4/hwMplsApsMismatch:The protection group detected an APS configuration inconsistency betweeen two ends of the APS tunnel. (WorkTunnelIfIndex=[WorkTunnelIfIndex], WorkTunnel=[WorkTunnel], MismatchReason=[MismatchReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSModeChannelOverEthBnBwdAlarm:The bandwidth sum of sliced sub-interfaces plus the actual effective SQ bandwidth of non-sliced sub-interfaces in an ETH-BN group is greater than the ETH-BN bandwidth. (group-name=[group-name], eth-bn-sub-interface=[eth-bn-sub-interface])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesPwOppositeRai:Remote alarm indication at peer site alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASVSM/4/hwVsmEDSGApplyCarResourceFailAlarm:Failed to apply for CAR resources for the EDSG.(Slot = [Slot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpv6SnpBindTblThreshold:The number of DHCPv6 Snooping binding entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesPwRemoteLosPktAlarm:Remote packet loss alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsApsTypeMisMatch:Working or protection type mismatch are detected by APS frame. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], WorkTunnel=[WorkTunnel], SignalingProtocol=[SgnlPrtcl], MismatchReason=[MismatchReason], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectMegRecovery:Unexpected MEG alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectPeriod:Unexpected period alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamLossOfConnection:Loss of continuity alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsApsPathMisMatch:Working or protection path mismatch are detected by APS frame. (IfIndex=[WorkTunnelIfIndex], SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],WorkTunnel=[WorkTunnel], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSPortQueueAlarm:The alarm of port-queue occurs, only when the used queue is in excess of the configured length. (InterfaceIndex=[interface-index], Queue=[queue], TrunkIndex=[trunk-index]).",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNServerMapNumThresholdAlarm:The usage of server-map table reached the threshold. (Usage=[Usage], Threshold=[Threshold], Slot=[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamFdi:OAM reported an FDI alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCollisionAlarm:The link encountered a collision. (PhyIfIndex=[PhyIfIndex], ScadaGroupId=[ScadaGroupId], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwCposE1DownE1AisAlarm:Downstream alarm indication signal on E1 link channelized from CPOS! (IfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamEgrLSPInDefect:Egress LSP enter defect. (LspName=[LspName], LsrId=[LsrId], TunnelId=[TunnelId], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwV5VcaisAlarm:V5 Virtual Container Alarm Indication Signal! (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwBdIpNomatchSnpBindTblPktAlarm:The number of the discarded IP packets that did not match the binding table exceeded the threshold on the bridge domain. (BridgeDomain=[BdIndex], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamPeriod:The tunnel receives a period inconsistency alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockGnssModelChange:Switches the mode of the smart clock module. (hwClockPortIfIndex=[hwClockPortIfIndex], hwClockPortName=[hwClockPortName], hwClockGnssModel=[hwClockGnssModel], hwClockOldGnssModel=[hwClockOldGnssModel])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwPwApsLost:APS reported a packet lost alarm. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwRemoteDownloadAclThresholdAlarm:The usage of the dynamically delivered traffic classifiers reached the threshold. (Classifier Number = [classifierNum], Threshold = [threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamFarDualLossSD1Recovery:Signal Degraded threshold1 far-end alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamL2vcUnAva:L2VC enter unavailable state. (PeerIp=[PeerIp], VCType=[VCType], VCID=[VCID], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpAcrSyncBad:1588 ACR synchronization state is bad. (State=[State])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwBoardLeaveMaster:The board exited from the master state. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=The board exited from the master state.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwGlobalAllocatedIpThresholdReachAlarm:The number of globally allocated IPv6 addresses reached the threshold. (ThresholdValue=[ThresholdValue], LimitValue=[LimitValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/3/hwIpRanDcnNeOnline:DCN NE online. (NeChangeMode=[NeChangeMode], NeId=[NeId], NeIPType=[NeIPType], NeIP=[NeIP], NetMask=[NetMask], NeNum=[NeNum], NeLoginMode=[NeLoginMode], PnpState=[PnpState], Esn=[Esn], Vlan=[VlanId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPFPM/3/hwIpfpmMultiTwoDelayExceed:The two-way delay of one link in an IPFPM test instance exceeded the upper threshold over five consecutive statistical periods. (TestInstanceId=[InstanceId], AchId=[AchId], IpfpmMcpSeqNoHigh=[SeqNoHigh], IpfpmMcpSeqNoLow=[SeqNoLow], ForwardSourceDCP=[FwdSrcDcpId], ForwardSourceTLP=[FwdSrcTlpId], ForwardDestinationDCP =[FwdDstDcpId], ForwardDestinationTLP=[FwdDstTlpId], BackwardSourceDCP=[BwdSrcDcpId], BackwardSourceTLP=[BwdSrcTlpId], BackwardDestinationDCP=[BwdDstDcpId], BackwardDestinationTLP=[BwdDstTlpId], TwoDelay=[DelayValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesLopsAlarm:Continuous loss of packet status alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/5/hwMstpProRcvTcFlap:The local device received many TC BPDUs from neighbors. (ProcessID=[process-id], InstanceID=[instance-id], PortName=[port-name], PwName=[pw-name], SMAC=[src-mac])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/5/hwMflpLinkResumed:The AC interfaces of the main interface have been unblocked due to MAC-Flapping association. (VsiName=[vsiname], ACInterfaceName=[ACName], MainInterfaceName=[MainIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IMA/2/hwImaLinkLodsAlarm:The alarm indicating the loss of IMA frame synchronization is generated. (IfIndex=[IfIndex], ImaLinkName=[ImaLinkName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwLaserShutAlarm:Board laser shutdown! (IfIndex=[IfIndex] SlotID=[SlotID] CardID=[CardID] PortID=[PortID] InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/4/hwIPSecIKEV1UnsupportedAlarm:The local device does not support IKE V1 service.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwVoltAlarm:The ambient voltage is abnormal. (EntityThresholdType=[EntityThresholdType],EntityThresholdValue=[EntityThresholdValue],EntityThresholdCurrent=[EntityThresholdCurrent],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwBdNomatchSnpBindTblDhcpPktAlarm:The number of the discarded DHCP request packets that did not match the binding table exceeded the threshold on the bridge domain. (BridgeDomain=[BdIndex], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwJ0TimAlarm:Trace identifier mismatch! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwPowerUnusable:The power was unavailable. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortLoopGuarded:The loop protection port in the instance of the MSTP process did not receive BPDU packets within prescriptive time. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProRootShake:The root bridge role flapped. (ProcessID=[ProcessID], InstanceID=[InstanceID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwKompellaSwitchWtoP:The status of the Kompella VC turned protecting from working. (VcVpnName=[VcVpnName], CeId=[CeId], InterfaceIndex=[InterfaceIndex], RemoteCeId=[RemoteCeId], CtrlWord=[CtrlWord], SecondaryVcRemoteCeId=[SecondaryVcRemoteCeId], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/2/hwIpRanDcnNeIpConflict:NEIP addresses conflicted. (ConflictNEIP=[ConflictNEIP])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpBdPwBlock:The PW turned to block state. (BD=[bdid], VsiName=[vsiname], PeerIP=[peerip], PWID=[pwid], BlockTime=[blocktime], BlockReason=[blockreason], DetectMAC=[mac])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/4/hwIpRanDcnApVerMismatch:The version of the AP is different from that of the master. (APID=[APID], APVersion=[APVersion], MasterVersion=[MasterVersion])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwTuAisVc12Alarm:Tributary unit alarm indication signal on VC12 lower order path! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNDhcpNotAllocIpAlarm:The interface IP address borrowed by NAT Easy IP should be assigned by the DHCP server, but no IP address was assigned to the interface. (InterfaceName=[InterfaceName], InstanceType=[InstanceType], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/2/hwCGNUserTableExhaustAlarm:User tables ran out. (UserTableNum=[UserTableNum],Slot=[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProLoopbackDetected:The MSTP process's port has been set to discarding state because of detecting loopback. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_LSPIC/4/hwMultiServiceOnOneCardAlarm:Packet loss may occur if multiple services are configured on the same subcard and the PPP interface's MTU is greater than 1356 bytes. (ChassisNo=[ChassisNo], SlotId=[SlotId], CardId=[CardId])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ERROR-DOWN/4/hwErrordown:Error-down occurred. (Ifindex=[IfIndex], Ifname=[IfName], Cause=[Cause])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MP/2/hwMpGroupRxLosPktExcAlarm:The received loss packets over the threshold alarm of an Mp Group is detected. (IfIndex=[hwMpGroupIfIndex],IfName=[hwMpGroupIfName],CurrentValue=[hwMpGroupLosPktCurrentValueString],AlarmThreshold=[hwMpGroupLosPktAlarmThresholdString],ResumeThreshold=[hwMpGroupLosPktResumeThresholdString])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwVPNIPPoolUsageReachThreshold:The IP address usage of the vpn reached the threshold.(VPNInstance=[VPNName],Threshold=[threshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectMegLevelRecovery:MEG level alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwOnlineUserNumLowerLimitAlarm:The number of users on the device fell bellow the lower threshold. (MinUserThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/4/hwMplsApsMismatchRecovery:Working or protection configuration mismatch recovery are detected by APS frame. (IfIndex=[WorkTunnelIfIndex], WorkTunnel=[WorkTunnel], MismatchReason=[MismatchReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpIfBlock:The interface turned to block state. (VLAN ID=[vlanid], Interface Name=[acifname], Block Time=[blocktime], Block Reason=[blockreason], DetectMAC=[mac])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/2/hwMgmdGMPInterfaceLimit:Membership report message is discarded because the interface-specific IGMP or MLD group membership limitation is exceeded. (AddressFamily=[AddressFamily], SrcAddr=[SrcAddr], GrpAddr=[GrpAddr], Ifindex=[IfIndex], CurrentCount=[CurrentCount], Ifname=[IfName], InstanceName=[InstanceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ATM/2/hwAtmPwUnknownCellExcAlarm:Number of unknown cells over the threshold in a certain period. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MP/1/hwMpGroupMemberLinkTimeDelayDetect:It is detected that the delay difference between two member links of an MP group exceeds the threshold. (IfIndex=[ifindex], IfName=[Ifname], MpGroupIfIndex=[MpGroupIfIndex], Threshold=[Threshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/1/hwMplsOamMeg:The tunnel receives a MEG alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwEDSGLicenseExpireAlarm:The OTT service capacity of License has expired, need continue to buy",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IMA/2/hwImaLinkLifAlarm:The alarm indicating IMA LIF is generated. (IfIndex=[IfIndex],ImaLinkName=[ImaLinkName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNGloablV4SessionNumBoardAlarm:The usage of IPv4 sessions reached the threshold. (Usage = [Usage],Threshold = [Threshold],BoardName = [BoardName],Cpu = [Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwVllVpnQosNotSupportTunnelAlarm:The public network tunnel to which the VLL service is diverted does not support traffic forwarding. (InterfaceName=[hwVLLACPortName], RemoteIP=[hwVLLPeerRemoteIp], TunnelType=[hwNotSupportTunnelType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePdDisconnected:PD disconnected. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwE1UpE1AisAlarm:Upstream alarm indication signal on E1 port! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcGlobalEntryThresholdExceed:The total number of global multicast groups exceeded the upper threshold. (AddressFamily=[AddressFamily], LimitType=[LimitType], CurrentNumber=[CurrentNumber], LimitNumber=[LimitNumber], Threshold=[Threshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcGlobalEntryExceed:The number of L2 multicast entries has already reached the total global limit. (GmpAfVersion = [GmpAfVersion], LimitType=[LimitType], PafValue=[PafValue])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwEVPNNotSupportTunnelAlarm:The public network tunnel of EVPN cannot forward traffic. (EvpnName=[hwNotSupportTunnelEvpnName], RemoteIp=[hwEVPNPeerRemoteIp], TunnelType=[hwNotSupportTunnelType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "APS/4/hwRanApsRevertMismatch:APS revert mismatch. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],APS protect IfIndex:[pIfindex], APS protect IfName:[pIfName], APS Group ID:[groupId]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VCLUSTER/3/hwVccDataLinkFault:The data link of virtual cluster failure.(LocalChassisId=[LocalChassisId], NeighbourChassisId=[NeighbourChassisId], GroupId=[GroupId], IfIndex=[EntPhysicalIndex], IfName=[EntPhysicalName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwUsedIPReachThreshold:The number of IP addresses in the IP pool exceeds the threshold. (PoolIndex=[PoolIndex], PoolName=[PoolName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PPP/2/hwMpSonChannelDampingDetect:The son channel of the MP link is damped. (MpIfIndex=[MpIfIndex], MpIfName=[MpIfName], MpMemberIfIndex=[MpMemberIfIndex], MpMemberIfName=[MpMemberIfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVMEOP/5/hwDevAntiTheftLockTraps:Anti-theft event. (NeStatus=[NeStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwFogAlarm:Ambient fog is abnormal. (EntityThresholdType=[EntityThresholdType],EntityThresholdValue=[EntityThresholdValue],EntityThresholdCurrent=[EntityThresholdCurrent],EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_TPOAM/3/hwL2vpnOamTunnelNonSupport:OAM for PW does not support the current public tunnel. (VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], OamType=[OamType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamBidirectionalTunnelInDefect:BidirectionalTunnel enter defect. (TunnelIndex=[TunnelIndex], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNUserIPNumAlarm:The number of pre-allocated NAT64 IP that are obtained from the public network address pool reaches the upper limit. (AddrGroupName=[AddrGroupName], InstanceType=[InstanceType], InstanceName=[InstanceName], Threshold=[Threshold], Pre-IPNum=[Pre-IPNum], Slot=[Slot], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwOnlineUserNumUpperLimitAlarm:The number of users on the device reached the upper threshold. (MaxUserThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwMulticastUserExceedLimitTrunk:The number of multicast users from TRUNK has reach the threshold. (Threshold= [threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortStateForwarding:The MSTP process's port has been set to forwarding state. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwPwApsTypeMismatch:APS reported an alarm about the mismatch of the protection type. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwChassisRemove:The chassis was removed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=131073)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IMA/2/hwImaLinkRfiAlarm:The alarm indicating a failure in the remote of an IMA link is generated. (IfIndex=[IfIndex],ImaLinkName=[ImaLinkName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsOamFDI:The tunnel receives an FDI alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], IfIndex=[IfIndex], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], IfName=[IfName], SignalledTunnelName =[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRUI/4/hwBrasRbsConnectErr:RBS heartbeat signals were abnormal.(RBS = [hwBrasRbsName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwAuAisAlarm:Administrative unit alarm indication signal! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlItemNearExpire:The SnS of the cloud-based license sales item has expired. Please renew it in time. (Chassis ID = [hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwGlobalAllocatedPrefixThresholdReachAlarm:The number of globally allocated IPv6 prefixes reached the threshold. (ThresholdValue=[ThresholdValue], LimitValue=[LimitValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwLpSlmVc12Alarm:Signal label mismatch alarm on VC12 lower order path! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwhqosUserQueueApplyPirFailAlarmTrap:The sum of the pirs requested by all users exceeded the maximum configuration specification of the TM chip.(EntPhysicalIndex=[ent-physical-index], EntPhysicalName=[ent-physical-name], Direction=[direction])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/4/hwMplsPsSwitchWtoP:Switched to protection tunnel. (IfIndex=[IfIndex], WorkTunnel=[WorkTunnel], WorkTunnelId=[WorkTunnelId], ProtectionTunnel=[ProtectionTunnel], ProtectionTunnelId=[ProtectionTunnelId], SwitchResult=[SwitchResult], WorkTunnelState=[WorkTunnelState], ProtTunnelState=[ProtTunnelState], LocalState=[LocalState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpSnpBindTblThreshold:The number of DHCP Snooping binding entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNNoPatAddrGroupThresholdAlarm:The number of IP addresses allocated from the no-pat public network address pool reached the threshold. (AddrGroupName=[AddrGroupName], InstanceType=[InstanceType], InstanceName=[InstanceName], Pre-IPNum=[IPNum], Threshold=[Threshold], Slot=[Slot], Cpu =[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwDhcpv6ServerDown:DHCPv6 server is down or IP remote pool is full. (PoolNo.=[PoolNo],Server=[Server],VPN instance=[vpn-instance],Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwRdiAlarm:Remote defect indication alarm (Yellow alarm). (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsLspLoopBack:LSP was looped back. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], LSPName=[LSPName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsOamBDI:The tunnel receives a BDI alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], IfIndex=[OutIfIndex], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], IfName=[OutIfName], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/2/hwDcnInterfaceSessionExceed:The number of PPPoE DCN sessions on the interface reached the specifications. (InterfaceIndex=[InterfaceIndex], InterfaceName=[InterfaceName], SessionSpec=[SessionSpec])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ATM/2/hwAtmPwLosPktExcAlarm:Number of lost ATM PW packets on the network side over the threshold in a certain period. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwDiameterPeerFaulty:The link between pcef and pcrf is abnormal. (DiameterPeerHostName=[hwDiameterPeerHostName],DiameterPeerIP=[hwDiameterPeerIP],DiameterPeerPort=[hwDiameterPeerPort],DiameterLocalIf=[hwDiameterLocalIf],DiameterGrpLinkLocalPort=[hwDiameterGrpLinkLocalPort])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PPP/4/hwNcpNegotiateFailed:NCP negotiation failed on the local interface. (IfName=[ifName], hwPppNcpName=[hwPppNcpName], hwPppNegotiationFailReason=[hwPppNegotiationFailReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CUSP/2/hwCuspConnectionDown:CUSP connection is down. (IP Type=[CuspIpType], Local IP=[CuspLocalIp], Remote IP=[CuspRemoteIp], VrfName=[VrfName], DatapathId=[DatapathId], AuxiliaryId=[AuxiliaryId], SubReason=[SubReason], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePortFail:Poe Port is failed. (IfIndex=[IfIndex],Interface=[Interface])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwUserMaxNum:The number of user resources on the board or the device reached the threshold. (Type=[type],Slot=[slotid],MaxUserThreshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IMA/3/hwImaGroupTxClkMismatch:The alarm indicating inconsistent scheduled sending modes of the IMA groups on the two ends is generated. (IfIndex=[IfIndex],ImaGroupName=[ImaGroupName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwPoolGroupUsedIPReachThreshold:The number of IP addresses in the IP pool group exceeds the threshold. (PoolGroupNo.=[PoolGroupNo],PoolGroupName=[PoolGroupName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/4/hwUsedDeleteUnnumberedRouter:The unnumbered interface has been deleted. (PoolNo.=[PoolNo],PoolName=[PoolName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwCposE1UpE1AisAlarm:Upstream alarm indication signal on E1 link channelized from CPOS! (IfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdIfThresholdExceed:The number of IGMP or MLD entries on the interface reached the upper threshold. (AddressFamily=[AddressFamily], Ifindex=[IfIndex], CurrentCount=[CurrentCount], ThresholdCount=[ThresholdCount], Ifname=[IfName], InstanceName=[InstanceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAM/2/hwBasUnrImportRouteReachThreshold:The number of BAS UNR VPN import routes exceeded the maximum value. (MaxValue=[threshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwAAAOnlineSessoinUpperLimitAlarm:The number of sessions reached the upper limit of the device. (SessionUpperLimitThreshold=[threshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamBidirectionalTunnelOutDefect:BidirectionalTunnel quit defect. (TunnelIndex=[TunnelIndex], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/6/hwPortOpticalPositionValid:After the optical module of neighbor port is removed, the current port is valid. (hwEntityPhysicalIndex=[hwEntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],entPhysicalName=[entPhysicalName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamFarDualLossSD2Recovery:Signal Degraded threshold2 far-end alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], CurrentLoss=[CurrentLoss], Threshold=[Threshold], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamBidirectionalTunnelAva:BidirectionalTunnel enter avaliable. (TunnelIndex=[TunnelIndex], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPowerRemove:A power module was removed. (EntityPhysicalIndex=[EntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],EntPhysicalName=[EntPhysicalName],EntityTrapFaultID=136448,Reason=The power module was removed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwEapUserTotalMaxNum:The number of EAP user resources on the device reaches the upper threshold. (EapTotalMaxUserThreshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNUserTableThresholdBoardAlarm:The number of user tables reached the upper limit. (UserTableNum=[UserTableNum],Threshold=[Threshold],BoardName=[BoardName], Cpu=[Cpu])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CUSP/4/hwCuspConnectionCongest:CUSP connection is congested. (IPType=[CuspIpType], LocalIP=[CuspLocalIp], RemoteIP=[CuspRemoteIp], VrfName=[VrfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwE1AlmE1RaiAlarm:Remote alarm indication on E1 port! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamAis:OAM reported an AIS alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwAcBlockAlarm:AC interface blocking alarm. (IfIndex=[IfIndex], InterfaceName=[InterfaceName], AcBlockReason=[AcBlockReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamAlarmIndicationSignalRecovery:AIS alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/1/hwhqosUserQueueApplyPirFromPoolFailAlarmTrap:The sum of the PIRs requested from resource pool by all users exceeded the maximum configuration specification of the TM chip.(EntPhysicalIndex=[ent-physical-index], EntPhysicalName=[ent-physical-name], Pool=[pool])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVplsPwRedundancyDegraded:VPLS PW redundancy reported a protect degraded alarm. (VsiName=[VsiName], ProtectGroupName=[ProtectGroupName], ProtectGroupMode=[ProtectGroupMode])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamRemoteDefectIndication:RDI alarm start. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesJtrOvrExcAlarm:Jitter-Buffer overrun alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortStateDiscarding:The MSTP process's port has been set to discarding state. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamIgrLSPUnAva:Ingress enter unavailable state. (IfIndex=[IfIndex], TunnelName=[TunnelName], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwPwApsPathMismatch:APS reported an alarm about the mismatch of the working and protection paths. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TPOAM/4/hwMplsTpOamUnExpectPhbRecovery:Unexpected phb alarm end. (MegId=[MegId], MegId=[Meg_Id], MeIndex=[MeIndex], MeType=[MeType], MeDirection=[MeDirection], IfName=[IfName], PeerIP=[PeerIP], VcId=[VcId], VcType=[VcType], RemoteIp=[RemoteIp], Ttl=[Ttl], MepId=[MepId], RemoteMepId=[RemoteMepId], LspName=[LspName], VsiName=[VsiName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwVlopAlarm:VT path loss of pointer! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwIpNomatchSnpBindTblPktAlarm:The number of the discarded IP packets that did not match the binding table exceeded the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanID], DiscardedNumber=[DropNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NHRP/4/hwNhrpHubDown:NHRP Hub Down.(Protocol Address=[ProtocolAddress], NBMA Address=[NbmaAddress], Interface=[interface], Protocol Address Mask=[ProtAddrMask], Next Hop Address=[NextAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/4/hwHDtoFTPFail:Fail to upload the bills from Cfcard to TFTP server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwVrfiAlarm:Low order path remote failure indication alarm. (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwBdDhcpSnpChaddrAlarm:The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeded the threshold on the bridge domain. (BridgeDomain=[BdIndex], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoePdPowerOverload:PD is overdrawing power. (IfIndex=[IfIndex],Interface=[Interface],ConsumingPower(mW)=[ConsumingPower],MaximumPower(mW)=[MaximumPower])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwAisAlarm:Alarm indication of the upstream signals. (hwPhysicalPortIfIndex=[hwPhysicalPortIfIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockCesAcrLockFail:The clock source of CES ACR is not in locked mode. (ClockCesAcrSlot=[ClockCesAcrSlot], ClockCesAcrCard=[ClockCesAcrCard], ClockCesAcrDomain=[ClockCesAcrDomain], ClockCesAcrLockState=[ClockCesAcrLockState])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProRootChanged:The root bridge of MSTP process changed. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID=[PortID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwInternalProtocolNetworkPortFaultAlarm:One of the internal protocol network ports failed. (EntPhysicalIndex=[EntityPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=156416, Reason=The protocol network port failed.)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ATM/1/hwLcdAlarm:Loss of cell delineation alarm is found. (IfIndex=[IfIndex], SlotId=[SlotId], CardId=[CardId], PortId=[PortId], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPFPM/3/hwIpfpmMultiOneDelayExceed:The one-way delay of one link in an IPFPM test instance exceeded the upper threshold over five consecutive statistical periods. (TestInstanceId=[InstanceId], AchId=[AchId], IpfpmMcpSeqNoHigh=[SeqNoHigh], IpfpmMcpSeqNoLow=[SeqNoLow], FlowType=[FlowType], SourceDCP=[SrcDcpId], SourceTLP=[SrcTlpId], DestinationDCP=[DstDcpId], DestinationTLP=[DstTlpId], OneDelay=[DelayValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ATM/3/hwChcsAlarm:Correctable header check sequence error! (IfIndex=[IfIndex], SlotId=[SlotId], CardId=[CardId], PortId=[PortId],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/4/hwAlarmPnPChangeNotification:The alarm pnpp file changes, and the current sequence number of the file is different with last pnpp file. (hwAlarmPnPSequenceNo=[hwAlarmPnPSequenceNo])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/6/hwPortOpticalPositionInvalid:After the optical module of neighbor port is inserted, the current port is invalid. (hwEntityPhysicalIndex=[hwEntityPhysicalIndex],EntPhysicalIndex=[EntPhysicalIndex],entPhysicalName=[entPhysicalName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPseVltLow:PSE voltage is lower. (ChipID=[chipID],Slot=[slotStr])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwIfInputUnucFlowRisingThreshold:Unknown unicast flow is beyond the alarm threshold. (entPhysicalName = [hwUNUCPortName], hwIfUnknownUnicastRealFlow = [hwUNUCPortRealFlow], hwIfUnknownUnicastAlarmThreshold=[hwUNUCPortAlarmThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwMulticastUserExceedLimitTrunkPre:The number of multicast users from TRUNK has reach 95% of the threshold. (Threshold= [threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ATM/2/hwOcdAlarm:Out of cell delineation! (IfIndex=[IfIndex], SlotId=[SlotId], CardId=[CardId], PortId=[PortId], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnStickyMacConflict:Local sticky mac-addresses were conflicted in an EVPN instance. (EVPNInstanceName=[EVPNInstanceName], BdId=[BdId])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ATM/4/hwAtmVccConnectivityTestResultNotify:ATM Vcc connectivity test notification was detected. (hwAtmVccConnectivityTestIfIndex=[hwAtmVccConnectivityTestIfIndex], hwAtmVccConnectivityTestVpi=[hwAtmVccConnectivityTestVpi], hwAtmVccConnectivityTestVci=[hwAtmVccConnectivityTestVci], hwAtmVccConnectivityTestLLID=[hwAtmVccConnectivityTestLLID], hwAtmVccConnectivityTestResult=[hwAtmVccConnectivityTestResult], hwAtmVccConnectivityTestIfName=[hwAtmVccConnectivityTestIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwE1LmfaAlarm:Loss of multiframe alignment on framed E1 port! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwE3UpE3AisAlarm:Upstream alarm indication signal on E3 port! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPdPowerCut:Power is insufficient. (IfIndex=[IfIndex],Interface=[Interface],TrapFaultID=[TrapFaultID],ReasonDescription=[hwPdPowerCutReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "APS/6/hwRanApsProtectSwitchBackOver:APS protection restore successful. (hwRanApsProtectionTable Group Index:[groupIndex], IfIndex:[ifIndex],APS IfIndex:[portIndex],APS IfName:[portName], APS interface type:[portType],APS Group ID:[groupId]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesMalPktExcAlarm:Malformation packets over limit alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ERPS/2/hwErpsFwStateForwarding:The state of ERPS port was changed to forwarding. (RingId=[RingID], InterfaceIndex=[IfIndex], InterfaceName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/hwVrrpExtTrapResLimit:The board resources used for VRRP negotiation exceeded the threshold. (ifIndex=[ifIndex], ifName=[ifName], vrrpId=[vrrpId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortStateDiscarding:The port has been set to discarding state. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIC/2/hwCposE1LmfaAlarm:Loss of multiframe alignment on framed E1 link channelized from CPOS! (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[Hpindex],LpID=[Lpindex],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/3/hwIpRanDcnNeOffline:DCN NE offline. (NeId=[NeId], NeIPType=[NeIPType], NeIP=[NeIP], NeLoginMode=[NeLoginMode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwL2vpnOamExcess:OAM reported an Excess alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/3/hwMplsApsSwitchFail:Tunnel protection group receives an APS switch fail alarm. (IfIndex=[WorkTunnelIfIndex], SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],WorkTunnel=[WorkTunnel], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/6/hwIpRanDcnForceUserLogout:The user was forced to logout. (Address=[Address], UserName=[UserName], OperatorName=[OperatorName], UserType=[UserType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/4/hwBoardBecomeMaster:The board changed to the master state. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=The board changed to the master state.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwBaseSecurityTtlExpiredLoop:TTL-expired loop detect alarmed, a loop may occur on the slot. (CHASSISID=[CHASSISID], SLOTID=[SLOTID], LASTRATELOW=[LASTRATELOW], LASTRATEHIGH=[LASTRATEHIGH], CURRENTRATELOW=[CURRENTRATELOW], CURRENTRATEHIGH=[CURRENTRATEHIGH], INTERVAL=[INTERVAL], THRESHOLD=[THRESHOLD])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIC/3/hwLpUneqVc12Alarm:Unequipped indication on VC12 lower order path! (PhyIfIndex=[PhyIfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],HpID=[HpID],LpID=[LpID],hwPhysicalPortName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwL2vpnOamFail:OAM reported a Fail alarm. (ServiceType=[ServiceType], ProtocolType=[ProtocolType], VcID=[VcID], VcType=[VcType], PeerAddr=[PeerAddr], IfIndex=[IfIndex], PwMaster=[PwMaster], RmtSiteID=[RmtSiteID], InLabel=[InLabel], OutLabel=[OutLabel], IfName=[IfName], VsiName=[VsiName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwMulticastUserExceedLimitGE:The number of multicast users from GE has reach the threshold. (Slot = [slotid],Threshold= [threshold],SlotID = [slotindex])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSHardPipeAcBandWthOverAlarm:The hard pipe configured on the interface [interface-name] over port bandwidth or port shaping.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASAAA/2/hwDiameterEnableFail:Failed to enable the Diameter service. (ReasonCode=[hwDiameterReasonCode],Reason=[hwDiameterReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProTcFlap:The local device proactively detected that its STP topology was flapping. (ProcessID=[process-id], InstanceID=[instance-id])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CLKM/4/hwClockCesAcrMasterPwChange:Indicates the event that the CES ACR attribute master PW changes. (ClockCesAcrSlot=[ClockCesAcrSlot], ClockCesAcrCard=[ClockCesAcrCard], ClockCesAcrDomain=[ClockCesAcrDomain], ClockCesAcrOldMasterPwName=[ClockCesAcrOldMasterPwName], ClockCesAcrNewMasterPwName=[ClockCesAcrNewMasterPwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwCfmVlanTwowayDelay:The result of two-way delay-measure exceeded the threshold. (MdIndex=[MdIndex], MaIndex=[MaIndex], RemoteMacAddress=[RemoteMacAddress], Timestamp=[Timestamp], DelayValue=[DelayValue], ThresholdValue=[ThresholdValue], DelayValueHigh=[DelayValueHigh], DelayValueLow=[DelayValueLow])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MFLP/4/hwMflpAcBlock:The AC interface turned to block state. (Vsi Name=[vsiname], AC Interface Name=[acifname], Block Time=[blocktime], Block Reason=[blockreason], DetectMAC=[mac])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_LSPIC/4/hwAtmVpcConnectivityTestResultNotify:ATM Vpc connectivity test notification was detected. (hwAtmVpcConnectivityTestIfIndex=[hwAtmVpcConnectivityTestIfIndex], hwAtmVpcConnectivityTestVpi=[hwAtmVpcConnectivityTestVpi], hwAtmVpcConnectivityTestLLID=[hwAtmVpcConnectivityTestLLID], hwAtmVpcConnectivityTestResult=[hwAtmVpcConnectivityTestResult], hwAtmVpcConnectivityTestIfName=[hwAtmVpcConnectivityTestIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwBaseSecurityStormControlInterface:L2 loop detect alarmed, a loop occurs on an interface. (ChassisID=[ChassisID], SlotID=[SlotID], Interface Name=[IfName], VlanID=[VlanID], Loop Level=[LoopLevel].)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASRUI/4/hwBrasRbsTcpStateErr:The TCP connection of the BRAS RBS component on the slave main control board was in the connected state. (RBS = [hwBrasRbsName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwCfmVlanOnewayDelay:The result of one-way delay-measure exceeded the threshold. (MdIndex=[MdIndex], MaIndex=[MaIndex], RemoteMacAddress=[RemoteMacAddress], Timestamp=[Timestamp], DelayValue=[DelayValue], ThresholdValue=[ThresholdValue], DelayValueHigh=[DelayValueHigh], DelayValueLow=[DelayValueLow])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BRASUM/4/hwBoardNotSupportBasAlarm:The board does not support BAS. (Slot=[SlotID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwMAPLicenseItemEvent:The MAP services were configured, but their licenses were not activated within the license file. (License item name=[LicenseItemName],License item description=[LicenseDescription])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamL2vcInDefect:L2VC enter defect. (PeerIp=[PeerIp], VCType=[VCType], VCID=[VCID], AvailableState=[AvailableState], DefectType=[DefectType], BdiDefectType=[BdiDefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EFM/3/threshold:Threshold event occured. (IfIndex=[IfIndex], EventLogIndex=[EventLogIndex], EventLogTimestamp=[EventLogTimestamp], EventLogOui=[EventLogOui], EventLogType=[EventLogType], EventLogLocation=[EventLogLocation], EventLogWindowHi=[EventLogWindowHi], EventLogWindowLo=[EventLogWindowLo], EventLogThresholdHi=[EventLogThresholdHi], EventLogThresholdLo=[EventLogThresholdLo], EventLogValue=[EventLogValue], EventLogRunningTotal=[EventLogRunningTotal], EventLogEventTotal=[EventLogEventTotal], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DCNM/3/hwIpRanSSLAuthFailure:DCN SSL certificate authentication failures frequently occur. (Source Address=[SourceAddress], Source Port =[SourcePort], Destination Address=[DestinationAddress], Destination Port=[DestinationPort], VPN=[VpnName], Number of Failure Reporting Times=[ReportTimes], Period=[Period] seconds)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDHCP6RelayUsrIPExhaust:The number of DHCPv6 relay IP entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDHCPCIpConflictConfigAlm:The network of IP address get from DHCP client is the same as configuration on other interface. (IpAddress=[ipAddress], InterfaceName=[ifName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NAT/4/hwCGNLicenseItemEvent:The CGN services were configured, but their licenses were not activated within the license file. (License item name=[LicenseItemName],License item description=[LicenseDescription])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/3/hwPwApsBypassPwMismatch:APS reported a bypass mismatch alarm. (PwApsId=[PwApsId], PWID=[PWID], PWTYPE=[PWTYPE], PWPeerIp=[PWPeerIp], PwIndex=[PwIndex])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL-TE/4/hwMplsPsSwitchPtoW:Switched to work tunnel. (IfIndex=[IfIndex], WorkTunnel=[WorkTunnel], WorkTunnelId=[WorkTunnelId], ProtectionTunnel=[ProtectionTunnel], ProtectionTunnelId=[ProtectionTunnelId], SwitchResult=[SwitchResult], WorkTunnelState=[WorkTunnelState], ProtTunnelState=[ProtTunnelState], LocalState=[LocalState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/1/hwMplsOamMisMatch:The tunnel receives a MisMatch alarm. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalingProtocol=[SgnlPrtcl], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwVplsPwHqosNotSupportTunnelAlarm:VPLS PW HQoS services are not supported on the public network tunnel. (VsiName=[hwNotSupportTunnelVSIName], RemoteIp=[hwPWPeerRemoteIp], PwId=[hwNotSupportTunnelPwId], TunnelType=[hwNotSupportTunnelType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwTeSourceInterfaceCheckAlarm:The packets are discarded because they do not match the TE source interface. (TeLabel=[hwRpfTeLabel], PortName=[hwRpfPortName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CES/2/hwCesMisorderPktExcAlarm:Misorder packets over limit alarm of PWE3 was detected. (IfIndex=[IfIndex], VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPE/4/hwPoeChipFail:POE control chip is failed. (ChipID=[chipID],Slot=[slotStr])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-OAM/3/hwMplsOamEgrLSPUnAva:Egress LSP enter unavailable state. (LspName=[LspName], LsrId=[LsrId], TunnelId=[TunnelId], AvailableState=[AvailableState], DefectType=[DefectType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPdvLimitExceed:PTP 1588 ACR/ATR PDV performance status change. (State=[State])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwLaserAutoShutAlarm:Automatic laser shutdown! (IfIndex=[IfIndex],SlotID=[SlotID],CardID=[CardID],PortID=[PortID],InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PATH-DETECT/6/hwNvo3IpPathDetectResultIpv6Pkt:IPv6 path detect receive packet . (testId=[testId], src-ipv6=[src-ipv6], dst-ipv6=[dst-ipv6], protocol=[protocol], source-port=[source-port], destination-port=[destination-port], dscp=[dscp], vpn-instance=[vpn-instance], If-name=[If-name], direction=[direction], ttl=[ttl])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProTcGuarded:With the TC protection enabled, if TC BPDUs were received after the number of TC BPDUs received by an instance exceeded the threshold, these TC BPDUs were processed after the TC protection time expires. (ProcessID=[ProcessID], proTcGuard=[proTcGuard], InstanceID=[InstanceID], proInstBridgePriority=[proInstBridgePriority])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlCloudServerOfflineLocked:The device has been disconnected from the cloud license local server for more than 60 days, and the license on the device is locked.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/2/hwLaserShutAlarmResume:Board laser shutdown alarm is cleared! (IfIndex=[IfIndex] SlotID=[SlotID] CardID=[CardID] PortID=[PortID] InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 }
]