[
 {
  "instruction": "alarms",
  "input": "OSPF/2/ospfNbrStateChange:The status of the non-virtual neighbor has changed. (RouterId=[RouterId], NbrIpAddress=[NbrIpAddress], NbrAddressLessIndex=[NbrAddressLessIndex], NbrRtrId=[NbrRtrId], NbrState=[NbrState], ProcessId=[ProcessId], AreaId=[AreaId], IfnetIndex=[IfnetIndex], LocalIfIpAddress=[LocalIfIpAddress], IfName=[IfName], VpnName=[VpnName], Reason=[NbrStateChangeReason], SubReason=[SubReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlResourceUsedUp:Resource item [hwGtlResourceItem] is nearly used up. (ItemDescription=[hwGtlItemDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/2/hwNDDuplicateIPv6:Received a [PktType] packet with a duplicate IP address [TgtIpv6Address] from the interface [TgtInterfaceName]. (ReceiveIfName=[LocInterfaceName], SourceMacAddress=[SrcMacAddress], DestinationMACAddress=[DstMacAddress], SourceAddress=[SrcIpv6Address], DestinationAddress=[DstIpv6Address], PE-VLAN=[PeVLAN], CE-VLAN=[CeVLAN], SelfMacRecv=[SelfLoop], Attempted=[DadAttempts])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewBridgeLostRootPrimary:MSTP process is no longer the root bridge of the instance. (ProcessID=[ProcessID],InstanceID=[InstanceID],proInstRootType=[proInstRootType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpMissVlanSpeedLimitALarm:The VLAN's ARP-Miss message speed exceeded the configured speed limit value. (SuppressValue=[SpeedLmtValue], Vlan=[VlanId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/hwL3vpnVrfV6Down:The IPv6 status of all interfaces bound to a VPN instance went Down. (VPN instance name=[VpnInstanceName], interface name=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwDhcpPktRateAlarm:The rate of DHCP packets exceeds the speed limit. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortLoopGuarded:The loop protection port in the instance of the MSTP process did not receive BPDU packets within prescriptive time. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/5/hwMstpProRcvTcFlap:The local device received many TC BPDUs from neighbors. (ProcessID=[process-id], InstanceID=[instance-id], PortName=[port-name], PwName=[pw-name], SMAC=[src-mac])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWD/2/hwSecStatCPUFwdCongestionPacketLoss:Congestion occur during CPU forwarding. (slot=[slot], CPU Id=[cpu])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwCpcarDropPacketAlarm:Rate of packets to cpu exceeded the CPCAR limit in slot [SlotId]. (Protocol=[Protocol], PPS/CBS=[Cir]/[Cbs], ExceededPacketCount=[DropPacketNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/5/hwTrunkAllMemUpNotify:All member interfaces of trunk's link status change to up. (TrunkName=[TrunkName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwInterfaceNDThresholdExceedAlarm:The number of ND entries exceeded the threshold of interface. (entPhysicalIndex=[entPhysicalIndex], Slotname=[slotname], InterfaceName=[InterfaceName], Threshold=[Threshold], Number of dynamic ND entries=[DynEntries], Number of static ND entries=[StatEntries], Number of remote ND entries=[RemoteEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstVlanNumExceeded:The number of VLANs running VBST has exceeded the upper limit, and the VBST function may not take effect on some VLANs. (hwVbstMaxVlanNum=[hwVbstMaxVlanNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/2/hwXQoSStormControlAlarm:Rate of packets exceeded the storm control threshold. (IfIndex=[hwXQoSStormControlIfIndex], IfName=[hwXQoSStormControlIfName], Type=[hwXQoSStormControlType], Threshold=[hwXQoSStormControlThreshold], Mode=[hwXQoSStormControlMode], Action=[hwXQoSStormControlActionName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/1/hwXACLResourceAlarm:The service failed to be delivered because ACL resources were insufficient. (SlotID=[hwXACLResourceAlarmSlotid], ServiceType=[hwXACLResourceAlarmServiceType], ServiceName=[hwXACLResourceAlarmServiceName], View=[hwXACLResourceAlarmApplyType], InterfaceName=[hwXACLResourceAlarmInterfaceName], Direction=[hwXACLResourceAlarmDirection], ServiceParam1=[hwXACLResourceAlarmServiceParam1], ServiceParam2=[hwXACLResourceAlarmServiceParam2], ServiceParam3=[hwXACLResourceAlarmServiceParam3], FailReason=[hwXACLResourceAlarmACLFailReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimSrcPerGrpNumLimit:At least one multicast group's multicast source number reached the upper limit. (AddressFamily=[AddressFamily], InstanceName=[InstanceName], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/neighbor-loss:PIM neighbor loss. (NbrIntIndex=[NbrIntIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime], NbrIntName=[NbrIntName], InstanceID=[InstanceID], InstanceName=[InstanceName], NeighborLossReason=[NeighborLossReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EWM/2/hwWarrantyExpired:The electronic warranty has expired. (device type=[Type], position=[Slot], serial number=[SerialNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfv2LsdbApproachingOverflow:The number of AS-external LSAs in the LSDB of an OSPF process is approaching the configured maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2Threshold=[hwOspfv2Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwNomatchSnpBindTblNDPktAlarmBd:The number of the discarded ND packets that do not match the binding table exceeds the threshold on the interface. (Interface=[Interface], BdID=[BdID], LastDroppedSourceMac=[LastDroppedSourceMac], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SSL/2/hwSSLCertificateExpired:The certificate already expired. (CertificateName=[hwSSLCertificateName], CertificateType=[hwSSLCertificateType], BeginTime=[hwSSLCertificateBeginTime], EndTime=[hwSSLCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2RouteBeDeletedByPurge:OSPF routes advertised by the local device were deleted by another device. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], TotalNodeNum=[hwOspfv2TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv2PurgeHostName1], HostIpAddress=[hwOspfv2PurgeIpAddress1], RouterID=[hwOspfv2PurgeRouterId1] (2) HostName=[hwOspfv2PurgeHostName2], HostIpAddress=[hwOspfv2PurgeIpAddress2], RouterID=[hwOspfv2PurgeRouterId2] (3) HostName=[hwOspfv2PurgeHostName3], HostIpAddress=[hwOspfv2PurgeIpAddress3], RouterID=[hwOspfv2PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgBackupFailure:Configuration backup failed in the system. (reason=[cause])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisLsdbThresholdReach:The number of LSP has reached the upper threshold value. (SysInstance=[IsisSysInstance], LsdbMaxLimit=[IsisLsdbMaxLimit], LsdbUpperThreshold=[IsisLsdbUpperThreshold], LsdbLowerThreshold=[IsisLsdbLowerThreshold], LsdbTotal=[IsisLsdbTotal])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSIfCarDiscardAlarm:The traffic on the interface is discarded for the interface Qos CAR configuration at slot. (Direction=[hwXQoSIfCarDiscardAlarmDirection], Interface=[hwXQoSIfCarDiscardAlarmIfName], Slot=[hwXQoSIfCarDiscardAlarmSlotid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/ospfVirtIfRxBadPacket:An OSPF packet that is received on a virtual interface cannot be parsed. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2IntraAreaDRIpAddressConflict:IP addresses of DRs in an intra area conflict. (ProcessId=[ProcessId], AreaId=[AreaId], SelfIfnetIndex=[SelfIfnetIndex], NbrIpAddr=[NbrIpAddr], RouterId=[RouterId], InterfaceIpAddress=[InterfaceIpAddress], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NTP/2/hwNtpMaxPacketRecvPerSecReach:The NTP packet processing rate reaches the upper threshold. (packet rate = [maxpktrate]pps)",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/1/hwEntityDyingGaspEvent:Power supply failed. (macAddress=[hwEntityTrapRelativeResource], Reason=[hwEntityTrapReasonDescr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwMasterKeyExpiredAlarm:The user master key expired.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/2/hwStormSuppVlanAlarm:Rate of packets exceeded the storm suppression threshold. (VlanId=[hwStormSupptVsiId], PacketType=[hwStormSuppPktType], Threshold=[hwStormSuppThreshold], mode=[hwStormSuppMode], ExceededPacketCount=[hwStormSuppDropCnt])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanTnlDown:The status of the vxlan tunnel changed to down. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr], TunnelStatus=[TnlStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgAppDataInconsistent:Inconsistency between application configuration data and master main board configuration data.",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwEntityFileSystemAbnormal:The filesystem is abnormal. (EntityPhysicalIndex=[EntityPhysicalIndex],PhysicalName=[entPhysicalName],EntityTrapFaultID=[EntityTrapFaultID],EntityTrapReasonDescr=[EntityTrapReasonDescr])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpMultiDynamicPeerSessionExceed:The number of BGP dynamic peer sessions exceeded the maximum number. (InstanceName=[InstanceName],MaximumNumber=[MaximumNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/2/hwNtpStateChangeTrap:NTP synchronization state changed. (hwNtpState=[state], hwNtpSource=[source], hwNtpSourceVpnName=[VpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSPacketsDropInterfaceAlarm:The interface has packets dropped. (Interface=[hwXQoSPacketsDropInterfaceAlarmIfName], QueueId=[hwXQoSPacketsDropInterfaceAlarmQueueId], SlotId=[hwXQoSPacketsDropInterfaceAlarmSlotId], Discard Packets=[hwXQoSPacketsDropInterfaceAlarmPackets], Discard Bytes=[hwXQoSPacketsDropInterfaceAlarmBytes] Bytes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/1/hwMACsecFailNotify:MACsec failed on interface [interface]. (Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/warmStart:OID [oid] warmStart.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserLogout:A user is logout. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NTP/4/hwNtpSysPeerChangeTrap:The NTP peer selected by the system is changed. (hwNtpOldSource=[OldSource], hwNtpOldSourceVpnName=[OldVpnName], hwNtpSource=[NewSource], hwNtpSourceVpnName=[NewVpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlFunctionInactive:Item is inactive. (ItemName=[hwGtlItemName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwNomatchSnpBindTblDhcpv6PktAlarmBd:The number of the discarded DHCPv6 request packets that do not match the binding table exceeds the threshold. (IfIndex=[IfIndex], Interface=[Interface], BdID=[BdID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfPerRouteThresholdExceed:The routes number of the specified type received from peers in a BGP address family reached the alarm threshold. (Address Family=[AddressFamily], RouteType=[RouteType], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanTnlDel:The IPv4 VXLAN tunnel was deleted. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ThirdPartRouteBeDeletedByPurge:OSPF routes advertised by another device were deleted. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], TotalNodeNum=[hwOspfv2TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv2PurgeHostName1], HostIpAddress=[hwOspfv2PurgeIpAddress1], RouterID=[hwOspfv2PurgeRouterId1] (2) HostName=[hwOspfv2PurgeHostName2], HostIpAddress=[hwOspfv2PurgeIpAddress2], RouterID=[hwOspfv2PurgeRouterId2] (3) HostName=[hwOspfv2PurgeHostName3], HostIpAddress=[hwOspfv2PurgeIpAddress3], RouterID=[hwOspfv2PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/newRoot:This bridge changed to be the root bridge.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwCardFail:The card partially failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWD/2/hwInnerPortPacketCrcErr:The internal communication interface encountered a CRC error. (slot Id: [hwInnerPortSlotId], cpu Id: [hwInnerPortCpuId], port Id: [hwInnerPortPortId]).",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwStrackUserInfo:Attack occurred. (Interface=[Interface], SourceMAC=[SourceMAC], CVLAN=[CVLAN], PVLAN=[PVLAN], EndTime=[EndTime], TotalPackets=[TotalPackets])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/2/hwPowerInvalid:A power module experienced a complete failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], EntityOperStatus=[EntityOperStatus], Reason=[ReasonDsp])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/3/hwNtpDynamicSessionLimitReach:NTP dynamic session number reached the limit.(LimitNumber=[LimitNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/ifstatechange:The status of the non-virtual interface has changed. (RouterId=[RouterId], IfIndex=[IfIndex], IfInstId=[IfInstId], IfState=[IfState], InterfaceName=[InterfaceName], ChgReason=[ChgReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwEntityFileSystemFdAlarm:The file handle of the process is overloaded. (EntityPhysicalIndex=[EntityPhysicalIndex], PhysicalName=[entPhysicalName], ProcessName=[ProcessName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlDefaultValue:Current license value is default, the reason is [hwGtlDefaultValueReason]. (ChassisIDorSlotID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProRootLost:The bridge loses the position of root bridge. (ProcessID=[ProcessID], InstanceID=[InstanceID], ProInstRootType=[ProInstRootType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLEPGRuleAlarm:Failed to add EPG policy rule. (Slot = [hwXACLEPGRuleAlarmSlotid], policy = [hwXACLEPGRuleAlarmPolicy], classifier = [hwXACLEPGRuleAlarmClassifier], rule-priority = [hwXACLEPGRuleAlarmPriority], source-segment = [hwXACLEPGRuleAlarmSourceSegmentId], destination-segment = [hwXACLEPGRuleAlarmDestinationSegmentId], protocol = [hwXACLEPGRuleAlarmProtocol], source-port = [hwXACLEPGRuleAlarmSourceport], destination-port = [hwXACLEPGRuleAlarmDestinationport])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/3/hwGtlItemMismatch:The license item or serial number mismatched with the main chassis or board. (ChassisIDorSlotID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/2/hwFanInvalid:A fan module experienced a complete failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], EntityOperStatus=[EntityOperStatus], Reason=[ReasonDsp])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwMacUsageRaisingThreshold:MAC usage reached the Threshold. (PhysicalName=[entPhysicalName],MacEntityUsage=[hwMacEntityUsage],MacEntityUsageThreshold=[hwMacEntityUsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/3/hwExtAllMemberDownNotify:The last member interface link status changes to down. (TrunkIfIndex=[ifIndex], TrunkName=[ifName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ThirdPartRouteBeDeletedByPurgeInexact:OSPFv3 routes advertised by another device were deleted, and the possibly faulty device did not support OSPFv3 flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospfv3 flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], RuledOutDeviceNum=[hwOspfv3RuledOutDeviceNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CM/4/hwNacMaxUserAlarm:The number of NAC users reached the maximum. (Slot=[Slot], User-num=[User-num], Threshold=[Threshold]%, Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLEPGGroupMemberMacVlanAlarm:Failed to add VLAN-MAC member to traffic-segment endpoint group. (Traffic-segment id=[hwXAclEpgGroupMemberMacAlarmSegmentId], MAC=[hwXAclEpgGroupMemberMacAlarmMacAddress], VlanId=[hwXAclEpgGroupMemberMacAlarmVlanId], Slot=[hwXAclEpgGroupMemberMacAlarmSlotid])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FTPS/3/hwFtpLoginFailed:Users failed to login ftp server too frequently. (failed times=[hwFtpUserLoginFailedTimes], statistic period=[hwFtpUserLoginStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwIpv6RouteThresholdExceed:The number of IPv6 routes in the VPN instance exceeded the alarm threshold multiplied by the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], alarm threshold=[midThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwRadiusAuthServerDown:The communication with the RADIUS authentication server fails. (IpAddress=[IpAddress], Vpn-Instance=[Vpn-Instance])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HAF/4/hwBoardBecomeMaster:Board changed to the master state. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=Master/Slave Board Switchover.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VSTM/3/hwVstmMacExceed:The number of MAC routes on the device exceeded the maximum value. (CurrentMACRouteCount=[VstmCurMacNum], MaxMACRouteValue=[VstmMaxMacNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/4/hwGtlTrialResFeatureEnable:The trial of resource items has been enabled. (RemainDay=[hwGtlItemTrialResRemainTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpDiscardRecvRoute:BGP discard received routes. (InstanceName=[InstName], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], DiscardReason=[DiscardReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpInterfaceNeighborChange:Neighbor information of the interface was changed. (NeighborIndex=[remoteIndex], Action=[eventType], Interface=[localPort], RemoteChassisType=[chassisSubType], RemoteChassisId=[chassisId], RemotePortIdType=[portIdSubType], RemotePortId=[portId], RemoteSystemName=[systemName], RemoteSystemDescription=[systemDescription], RemoteSystemCapabilitySupported=[systemCapSupported], RemoteSystemCapabilityEnabled=[systemCapEnabled], RemoteManagementAddressType=[managementAddrType], RemoteManagementAddress=[managementAddr], RemoteManufacturerName=[manufacturerName], RemoteModelName=[modelName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/1/topologyChange:Bridge topology changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpPeerRouteExceed:The number of routes received from the BGP peer exceeded the alarm number. (InstanceId=[InstanceId], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], PeerRemoteAddrType=[PeerIPAddrType], PeerRemoteAddr=[PeerIPAddr], MaxRouteNum=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwIPSGVlanDropALarm:The packet dropped by IPSG exceeds the alarm threshold. (DroppedNum=[DroppedNum], Threshold=[Threshold], VLAN=[VLAN], PacketInfo=[PacketInfo])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPLimitExceed:The number of ARP entries learned on the interface exceeded the threshold. (Interface name=[InterfaceName], Maximum number of ARP entries=[LimitNumber], Number of learned ARP entries=[LearnedNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwPimVrfTypeSGThresholdExceed:The number of existed routing entries exceeded the vpn upper threshold. (LimitType=[LimitType], AddressFamily=[AddressFamily], VpnName=[VpnName], CurrentCount=[CurrentCount], LimitCount=[LimitCount], ThresholdCount=[ThresholdCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwPatchInstallFail:Patch operation failed. (SlotIndex=[SlotIndex], PatchIndex=[PatchIndex], PackageName=[PackageName], PackageVersion=[PackageVersion], FailReason=[FailReason], PhysicalName=[PhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpPeerBackwardTransition:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Ipv6Addr], InstanceId=[InstanceId], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState], LocalIfName=[LocalIfName], Reason=[Reason], Description=[Description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/1/hwPowerRemove:The power module was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], EntityOperStatus=[EntityOperStatus], Reason=[ReasonDsp])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDIPv6ConflictEvent:Detected an IPv6 address collision. (Ipv6Address=[Ipv6Addr], Local MacAddress=[LocalMacAddr], Local InterfaceName=[LocalIfName], Local WorkInterfaceName=[LocalWorkIfName], Local VLAN=[LocalPVid], Local INNER-VLAN=[LocalCVid], Received MacAddress=[RcvMacAddr], Received InterfaceName=[RcvIfName], Received WorkInterfaceName=[RcvWorkIfName], Received VLAN=[RcvPVid], Received INNER-VLAN=[RcvCVid])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3ThirdPartRouteBeDeletedByPurgeExact:OSPFv3 routes advertised by another device were deleted. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwUntrustedV6ReplyPktAlarmBd:The number of the discarded DHCPv6 reply packets on the untrusted interface exceeds the threshold. (IfIndex=[IfIndex], Interface=[Interface], BdID=[BdID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwIsisThirdPartRouteBeDeletedByPurgeExact:IS-IS routes advertised by another device were deleted. Reset or isolate the faulty device from the network. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FM/4/hwAlarmTargetHostDel:Target host [IPAddress] was deleted.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3RouteLoopDetected:The local device has detected an OSPFv3 routing loop. (LoopType=[LoopType], DetectProtocolAttr=[DetectProtocolAttr], RedistributeID1=[RedistributeID1], RedistributeID2=[RedistributeID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisThirdPartRouteBeDeletedByPurge:IS-IS routes advertised by another device were deleted. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], TotalNodeNum=[hwIsisTotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwIsisHostName1], HostIpAddress=[hwIsisHostIpAddress1], SystemID=[hwIsisSystemID1] (2) HostName=[hwIsisHostName2], HostIpAddress=[hwIsisHostIpAddress2], SystemID=[hwIsisSystemID2] (3) HostName=[hwIsisHostName3], HostIpAddress=[hwIsisHostIpAddress3], SystemID=[hwIsisSystemID3])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/4/hwBgpUnnumberedPacketSendFailed:The BGP peer cannot send packets for a long time. (BGP instance=[InstanceName], VPN instance=[VpnInstance], BgpPeerRemoteAddr=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/1/hwBrdTempFatalAlarm:The board temperature exceeded the fatal alarm threshold. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityThresholdType=[EntityThresholdType], EntityThresholdCritical=[EntityThresholdCritical], EntityThresholdCurrent=[EntityThresholdCurrent], EntityTrapFaultID=[EntityTrapFaultID],Reason=[ReasonDsp])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ThirdPartRouteBeDeletedByPurge:OSPFv3 routes advertised by another device were deleted. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], TotalNodeNum=[hwOspfv3TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv3PurgeHostName1], HostIpAddress=[hwOspfv3PurgeIpAddress1], RouterID=[hwOspfv3PurgeRouterId1] (2) HostName=[hwOspfv3PurgeHostName2], HostIpAddress=[hwOspfv3PurgeIpAddress2], RouterID=[hwOspfv3PurgeRouterId2] (3) HostName=[hwOspfv3PurgeHostName3], HostIpAddress=[hwOspfv3PurgeIpAddress3], RouterID=[hwOspfv3PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2RouteLoopDetected:The local device has detected an OSPF routing loop. (LoopType=[LoopType], DetectProtocolAttr=[DetectProtocolAttr], RedistributeID1=[RedistributeID1], RedistributeID2=[RedistributeID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/hwSNMPReset:SNMP was switched to a new process.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AIFABRIC/2/hwFLowMatrixRailInvalidAlarm:Path planning failed. (Slot ID=[hwFLowMatrixRailSlotId], flow source IPv4 address=[hwFLowMatrixRailSourceIp], flow destination IPv4 address=[hwFLowMatrixRailDestinationIp], flow outbound interface name=[hwFLowMatrixRailOutPort])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/5/hwOutputRateChangeOverThresholdNotice:The output rate change ratio exceeded the threshold. (IfIndex = [IfIndex], InterfaceName = [InterfaceName], ThresholdPercent = [ThresholdPercent], CurrentStatisticalPeriodRate = [CurrentStatisticalPeriodRate], LastStatisticalPeriodRate = [LastStatisticalPeriodRate])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessUp:Session changes to UP. (Index=[Index], ConfigurationName=[ConfigurationName], PeerIp=[PeerIp], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], DefaultIp=[DefaultIp], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], NextHop=[NextHop], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop], EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanTnlUp:The status of the vxlan tunnel changed to up. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr], TunnelStatus=[TnlStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SUM/4/hwSystemRollback:System rollback. (FileName=[SoftwareName], Version=[Version], Reason=[FailReason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ERPS/2/hwErpsFwStateDiscarding:The state of ERPS port was changed to discarding. (RingId=[RingID], InterfaceIndex=[IfIndex], InterfaceName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EAP/4/hwQuietUserClearAlarm:The quiet max user alarm is cleared. (Threshold=[Threshold]%, UserNum=[UserNum], Lower Threshold=[LowerThreshold]%, Upper Threshold=[UpperThreshold]%, Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "INFO/4/hwICLogFileStorageThrd:The logfile surplus storage spaces is less than 20 percent. (LogFileType=[LogFileType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "GMDB/2/hwNDBResThresholdExceed:The usage of NDB resources reached the threshold. (Slot=[hwNDBSlot], CPU=[hwNDBCpu], Threshold=[hwNDBThreshold], Current=[hwNDBCurrent], ReasonId=[hwNDBReasonId], Description=[hwNDBReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgConfigUnsaved:Configuration changes are not saved within the specified time.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlInitial:The license was activated abnormally because it had been initialized. (ChassisID=[hwGtlChassisID], BoardID=[hwGtlBoardID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3RouteBeDeletedByPurgeInexact:OSPFv3 routes advertised by the local device were deleted by another device, and the possibly faulty device did not support OSPFv3 flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospfv3 flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], RuledOutDeviceNum=[hwOspfv3RuledOutDeviceNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwPortMacLimitOverThreshold:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (L2IfPortName=[L2IfPortName],MacLimitMaxMac=[MacLimitMaxMac])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestResultStatusChange:NQA entry test result changed. (OwnerIndex=[OwnerIndex],TestName=[TestName],ResultIndex=[ResultIndex],HopIndex=[HopIndex],TestType=[TestType],SourceIP=[SourceIP],SourceIfName=[SourceIfName],DestinationIP=[DestinationIP],LastResult=[LastResult],CurrentResult=[CurrentResult],ChangeToFailTimes=[ChangeToFailTimes],ChangeToSuccessTimes=[ChangeToSuccessTimes],ChangeToNoResultTimes=[ChangeToNoResultTimes],ChangeToNegotiateFailTimes=[ChangeToNegotiateFailTimes],ChangeToAbnormalTimes=[ChangeToAbnormalTimes],FailTimes=[FailTimes],SuccessTimes=[SuccessTimes],NoResultTimes=[NoResultTimes],NegotiateFailTimes=[NegotiateFailTimes],AbnormalTimes=[AbnormalTimes])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSDIAG/5/hwEntityExtHardDiskOnline:The disk is successfully mounted. (DiskType=[DiskType],DiskSN=[DiskSN],DiskSlot=[DiskSlot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMlagPortActiveStandbyNotElected:The M-LAG member interfaces are not elected when the M-LAG works in active/standby mode.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPortFail:The port failed partially. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsRootkitAttack:Rootkit has been detected. (eventCategory=[event-category], occurTime=[occurTime], result=[result], rootkitName=[rootkitName], detectionType=[detectionType], detectedThreat=[detectedThreat], detectionSource=[detectionSource], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwCfgRestoreFail:Failed to restore system configurations.(Result=[Result])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/ospfv3NbrStateChange:The status of the non-virtual neighbor has changed. (RouterId=[RouterId], NbrIfIndex=[NbrIfIndex], NbrIfInstId=[NbrIfInstId], NbrRtrId=[NbrRtrId], NbrState=[NbrState], IfName=[IfName], Reason=[NbrStateChangeReason], SubReason=[SubReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/nbrrestarthelperstatuschange:The neighbor exits from the restart helper state. (RouterId=[RouterId], NbrIfIndex=[NbrIfIndex], NbrIfInstId=[NbrIfInstId], NbrRtrId=[NbrRtrId], NbrRestartHelperStatus=[NbrRestartHelperStatus], NbrRestartHelperAge=[NbrRestartHelperAge], NbrRestartHelperExitReason=[NbrRestartHelperExitReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "INFO/4/hwICLogFileAging:One log file was deleted due to aging. (LogFileName=[LogFileName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ImportNssaRouteExceed:The number of NSSA LSAs generated when an OSPFv3 process imports external routes exceeds the configured maximum number. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3AreaIdIndex=[hwOspfv3AreaIdIndex], hwOspfv3MaxLimit=[hwOspfv3MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/hwOspfv3ImportAseRouteThreshold:The number of AS-external LSAs generated when an OSPFv3 process imports external routes exceeds the configured alarm upper threshold. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3Threshold=[hwOspfv3Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/2/hwStormSuppBdAlarm:Rate of packets exceeded the storm suppression threshold. (BdId=[hwStormSupptVsiId], PacketType=[hwStormSuppPktType], Threshold=[hwStormSuppThreshold], mode=[hwStormSuppMode], ExceededPacketCount=[hwStormSuppDropCnt])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/5/hwNetconfServerSessionEnd:A NETCONF server session ended. (UserName=[UserName], SessionId=[SessionId], IpAddress=[IpAddress], KilledBy=[KilledBy], TerminalReason=[TerminalReason], VpnName=[VpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsTestFailed:The NQA entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], RttSum=[RttSum], RttSum2Low=[RttSum2Low], RttSum2High=[RttSum2High], RttMin=[RttMin], RttMax=[RttMax], PacketOutOfSequences=[PacketOutOfSequences], Errors=[Errors], Busies=[Busies], Timeouts=[Timeouts], Drops=[Drops], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JitterOut=[JitterOut], JitterIn=[JitterIn], OWSumSD=[OWSumSD], OWSumDS=[OWSumDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwOMUSyncFailAlarm:Data failed to be synchronized from the master OMU to the slave OMU. (Reason=The OMU data of [BoardName] synchronization timed out. [Action])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "INFO/1/hwICLogWriteFail:Failed to write log data into the file.(LogType=[LogType], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwNomatchSnpBindTblDhcpv6PktAlarm:The number of the discarded DHCPv6 request packets that do not match the binding table exceeds the threshold on the interface. (Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/4/hwGtlTrialResFeatureDisable:The trial time of resource items is over.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpPartialLinkLoss:Link bandwidth lost partly. (TrunkIndex=[TrunkIndex], TrunkIfIndex=[TrunkIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwL3vpnIpv6PrefixThresholdExceed:The number of IPv6 prefixes in the VPN instance exceeded the threshold. (VpnInstanceName=[VpnInstanceName], PrefixCount=[PrefixCount], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlNearDeadline:License is near deadline, remaining [hwGtlRemainTime] day (s). Apply for a new license file from Huawei before the grace period expires. Otherwise, relevant service functions may be unavailable or the configuration may become ineffective. (FeatureName=[hwGtlFeatureName], ChassisIDorSlotID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/mplsL3VpnVrfNumVrfRouteMaxThreshExceeded:The number of prefixes in the VPN instance exceeded the maximum value. (VpnInstanceName=[VpnInstanceName], VpnInstanceRouteCount=[VpnInstanceRouteCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2LsaRetranExceedLimit:The number of OSPF LSA retransmissions on an interface exceeds the limit. (ProcessId=[hwOspfv2ProcessIdIndex], AreaId=[hwOspfv2AreaId], InterfaceName=[hwOspfv2IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProLoopbackDetected:The MSTP process's port has been set to discarding state because of detecting loopback. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysClockChangedNotification:The local time is changed with LocalTime. (LocalTime=[LocalTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUSTEM/2/hwTrustemCertificateExpiredAlarm:The trustem certificate already expired. (PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], CertificateName=[hwTrustemCertificateName], CertificateType=[hwTrustemCertificateType], BeginTime=[hwTrustemCertificateBeginTime], EndTime=[hwTrustemCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCrlFailLdap:Get crl unsuccessfully with LDAP. (hwLdapIP=[ldapip], hwLdapPort=[ldapport], hwCrlAttribute=[crlattribute], hwCrlDN=[crldn], hwLdapVersion=[ldapversion]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpMdnInterfaceRemTablesChange:MDN Neighbor information of the interface was changed. (LocalInterface=[interfaceName], EventType=[eventType], RemoteIndex=[remoteIndex], RemoteDeviceId=[remoteDeviceId], RemoteInterface=[remoteInterface], RemoteMacAddress=[macAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisSeqNumExceedThreshold:The LSP sequence number has exceeded the upper threshold value. (SysInstance=[isisSysInstance], SysLevel=[isisSysLevelIndex], LspId=[isisPduLspId], ThresholdValue=0x[thresholdVal])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "INFO/4/hwICLogFileNumThrd:The logfile number is more than 90 percent. (LogFileType=[LogFileType], CurNum=[CurNum], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/3/hwPimRpfRtFlapping:The RPF route is flapping. (AddressFamily=[AddressFamily], SrcAddr=[SrcAddr], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisSystemIdAutoRecover:ISIS-INFO: After a system ID conflict was detected within an IS-IS area, IS-IS changed the system ID automatically. (hwisisSysInstance = [hwisisSysInstance], hwISISConflictSystemID = [hwISISConflictSystemID], hwISISAutoSysId = [hwISISAutoSysId], hwISISLocalIP = [hwISISLocalIP], hwISISRemoteIP = [hwISISRemoteIP]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSDIAG/5/hwEntityExtHardDiskOffline:The disk is successfully unmounted. (DiskType=[DiskType],DiskSN=[DiskSN],DiskSlot=[DiskSlot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfRouteExceed:The number of routes received from peers in a BGP address family reached the maximum value. (Address Family=[AddressFamily], MaxRouteNumber=[RouteLimitNum], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwARPBDHostConflictAlarm:The host access interface frequently changed. (LocalIPAddress=[LocalIP], LocalBDID=[LocalBDId], LocalMAC=[LocalMAC], RemoteIPAddress=[ConflictIP], RemoteBDID=[RemoteBDId], RemoteMAC=[RemoteMAC], LocalInterface=[LocalInterface], RemoteInterface=[RemoteInterface], TunnelPeer=[TunnelPeer])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwRouteLoopDetected:The local device has detected a routing loop. (LoopType=[loopType], DetectProtocol=[detectProtocol], DetectProtocolAttr=[detectProtocolAttr], RedistributeID1=[redistributeID1], RedistributeID2=[redistributeID2])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/2/hwPKIPresetCertUnavailable:The preset certificate is unavailable. (Slot=[hwPKIPresetCertSlotId], Reason=[hwPKIPresetCertUnavailableReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdIPv6SessUp:Session changes to UP. (Index=[Index], ConfigurationName=[ConfigurationName], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop],EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CFG/2/hwCfgMinisystemConfigRecovery:The system use mini-system configurations to recovery.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FM/4/hwAlarmClearedReportTrap:Notice NMS to clear active alarm. (AlarmClearedNum=[AlarmClearedNum],AlarmClearedSnList=[AlarmClearedSnList])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EWM/3/hwWarrantyToBeExpired:The electronic warranty is about to expire. Please apply for a new digital warranty from the supplier before the service ends. (device type=[Type], position=[Slot], serial number=[SerialNumber], days remaining=[RemainedDays])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwIpv4RouteThresholdExceed:The number of IPv4 routes in the VPN instance exceeded the alarm threshold multiplied by the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], alarm threshold=[midThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisDatabaseOverload:The overload state of IS-IS LSDB changed. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisSysLevelOverloadState=[isisSysLevelOverloadState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ND/2/hwNDHostIPConflict:Host IPv6 address conflicted. (BD=[BDId], LocalIPv6Address=[LocalIPv6], LocalMAC=[LocalMAC], LocalWorkInterface=[LocalWorkIf], LocalPeVid=[LocalPevid], LocalCeVid=[LocalCevid], RemoteIPv6Address=[RemoteIPv6], RemoteMAC=[RemoteMAC], RemoteWorkInterface=[RemoteWorkIf], RemotePeVid=[RemotePevid], RemoteCeVid=[RemoteCevid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/5/hwTrunkMemNumberChange:The number of active trunk members changed. (TrunkName=[TrunkName], PortName=[PortName], ActiveTrunkMemNum=[TrunkMemNumber], Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FTP/5/hwFlhOperNotification:The file transfer operation finished. (Operation=[Operation], OperStatus=[OperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/5/hwMstpiBridgeLostRootPrimary:This bridge is no longer the root bridge of the MSTP. (InstanceID=[InstanceID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpEstablishedNotification:The BGP FSM enters the Established state. (BgpPeerRemoteAddr=[PeerIpv4Addr], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState],VpnInstance=[VpnInstance])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsAbnormalShellDetected:The abnormal shell behavior has been detected. (eventCategory=[event-category], eventType=[event-type], level=[level], occurTime=[occur-time], result=[result], path=[shell-path], operationType=[operation-type], cmdline=[cmdline], type=[attribute-type], from=[old-attribute], to=[new-attribute], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOpticalRemove:Optical Module has been removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwNdSnpUserNumberAlarmGlobal:The number of ND global users exceeds alarm threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], CurrentUser=[CurrentUser], MaxUser=[MaxUser])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TCP/4/hwTCPMD5AuthenFail:TCP MD5 authentication failed. (tcpConnLocalAddress=[tcpConnLocalAddress], tcpConnLocalPort=[tcpConnLocalPort], tcpConnRemAddress=[tcpConnRemAddress], tcpConnRemPort=[tcpConnRemPort], hwTCPProtocol=[hwTCPProtocol], hwTCPVrfName=[hwTCPVrfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OPENFLOW/2/hwOpenflowConnectionDown:Openflow connection is down. (IP Type=[OpenflowIpType], Local IP=[OpenflowLocalIp], Remote IP=[OpenflowRemoteIp], VrfName=[VrfName], DatapathId=[DatapathId], AuxiliaryId=[AuxiliaryId], SubReason=[SubReason], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMLagHeartLost:The DFS dual-active detection message is lost. Check the source address configuration or link configuration of the local or remote switch.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/6/hwOspfv3PeerFlappingSuppressStatusChange:The status of peer flapping suppress is changed. (ProcessId=[ProcessId], RouterId=[RouterId], AreaId=[AreaId], ifName=[ifName], SuppressStatus=[SuppressStatus], SuppressReason=[SuppressReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwBoardWarning:The board experienced a minor fault. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwNomatchSnpBindTblDhcpPktAlarm:The number of the discarded DHCP request packets that do not match the binding table exceeds the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwIpv4PrefixExceed:The number of IPv4 prefixes exceeded the maximum value. (PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisCorruptedLSPDetected:The checksum of LSP is wrong. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisPduLspId=[isisPduLspId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestFailed:NQA entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], CompletionTimeMin=[CompletionTimeMin], CompletionTimeMax=[CompletionTimeMax], SumCompletionTime=[SumCompletionTime], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], SumCompletionTime2Low=[SumCompletionTime2Low], SumCompletionTime2High=[SumCompletionTime2High], LastGoodProbe=[LastGoodProbe], LastGoodPath=[LastGoodPath])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwL3vpnIpv6PrefixExceed:The number of IPv6 prefixes in the VPN instance exceeded the maximum value. (VpnInstanceName=[VpnInstanceName], PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SSH/3/hwSSHLoginFailed:Users failed to login ssh server too frequently. (failed times=[hwUserInfoLoginFailedTimes], statistic period=[hwUserInfoStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKILocalCertNearlyExpired:The local certificate is nearly expired. (LocalCertIssuer=[issuer], LocalCertSubject=[subject], LocalCertStartTime=[start-time], LocalCertFinishTime=[finish-time])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/authenticationFailure:Failed to login through SNMP.(IPAddressType=[IPAddressType], IPAddress=[IPAddress], ReasonInfo=[ReasonInfo].)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwBoardResThresholdExceed:The number of forwarding resources reaches the alarm threshold. (Slot=[hwFwdResLackSlotStr],Threshold=[hwFwdResThreshold],Reason=[hwFwdResLackReasonId],Description=[hwReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/hwOspfv3NbrExceedThreshold:The number of neighbors exceeds the upper of configured threshold. (hwOspfv3NbrThresholdUpper=[hwOspfv3NbrThresholdUpper])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSDP/2/backward:MSDP peer exit the established state. (RemoteAddr=[RemoteAddr], PeerState=[PeerState], InstanceName=[InstanceName], ExitReason=[ExitReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKGM/2/hwSysPackageVerifyFailed:Package verification failed.(PhysicalName=[PhysicalName], PackageName=[PackageName], FailReason=[FailReason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2DeleteRouteByPurge:The local device deleted OSPF routes advertised by other devices. Reset or isolate the device from the network. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKICACertNearlyExpired:The CA certificate is nearly expired. (CACertIssuer=[issuer], CACertSubject=[subject], CACertStartTime=[start-time], CACertFinishTime=[finish-time])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpVlanSpeedLimitALarm:The VLAN's ARP packet speed exceeded the configured speed limit value. (SuppressValue=[SpeedLmtValue], Vlan=[VlanId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/2/hwBfdSessFaultDown:The BFD session went Down. (Index=[Index], SessName=[ConfigurationName], LocalDiscriminator=[LocalDiscriminator], Diagnosis=[Diagnosis], BindIfName=[BindIfName], Description=[Description], FeNodeID=[FeNodeID], PeerIp=[PeerIp], LinkType=[LinkType], BindVpnName=[BindVpnName], TunnelName=[TunnelName], DownReason=[DownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMLagConsistencyCheckFailed:M-LAG consistency check failed because there are configurations that do not meet the requirements. (type = type[type]). Run the display dfs-group consistency-check command to check details.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VFS/3/hwFlhSyncFailNotification:Failed to copy file by hwFlhSyncTable with FlhSyncIndex [FlhSyncIndex], FlhSyncSrcFile [FlhSyncSrcFile], FlhSyncDstFile [FlhSyncDstFile].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/5/hwTrunkBwChange:The trunk interface bandwidth changes. (TrunkName=[TrunkName], OldBandwidth=[OldBandwidth], NewBandwidth=[NewBandwidth])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProTcFlap:The local device proactively detected that its STP topology was flapping. (ProcessID=[process-id], InstanceID=[instance-id])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwBsrCrpReachLimit:The number of C-RP entries received by the BSR reached the upper limit. (AddressFamily=[AddressFamily], InstName=[InstName], BsrAddr=[BsrAddr], AdminScope=[AdminScope], CurrentCount=[CurrentCount], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwUntrustedV6ReplyPktAlarm:The number of the discarded DHCPv6 reply packets on the untrusted interface exceeds the threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/hwOspfv3ImportNssaRouteThreshold:The number of NSSA LSAs generated when an OSPFv3 process imports external routes exceeds the configured alarm upper threshold. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3AreaIdIndex=[hwOspfv3AreaIdIndex], hwOspfv3Threshold=[hwOspfv3Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisVersionSkew:IS-IS received a PDU with incorrect ProtocolVersion. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduProtocolVersion=[isisPduProtocolVersion], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanIPv6TnlUp:The status of the IPv6 VXLAN tunnel changed to up. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr], TunnelStatus=[Tnl6Status])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/pingTestCompleted:Ping entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], AddressType=[AddressType], Address=[Address], MinRtt=[MinRtt], MaxRtt=[MaxRtt], AverageRtt=[AverageRtt], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], RttSumOfSquares=[RttSumOfSquares], LastGoodProbe=[LastGoodProbe])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisIDLenMismatch:The ID length of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisPduFieldLen=[isisPduFieldLen], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwBdMacLimitOverThresholdAlarm:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (Bd=[BdId], MacLimitMaxMac=[MacLimitMaxMac].)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwNdSnpUserNumberAlarmIf:The number of ND users on the interface exceeds alarm threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], CurrentUser=[CurrentUser], MaxUser=[MaxUser])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWD/1/hwInnerPortLinkDown:The link of the internal communication interface went down. (slot Id: [hwInnerPortSlotId], cpu Id: [hwInnerPortCpuId], port Id: [hwInnerPortPortId]).",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwAllLpuSfuFail:All installed LPUs and SFUs were not registered for a long time.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLEPGGroupMemberAlarm:Failed to add IP member to traffic-segment endpoint group. (IP address = [hwXAclEpgGroupMemberAlarmIPAddress], Mask = [hwXAclEpgGroupMemberAlarmIPMask], VpnInstanceName = [hwXAclEpgGroupMemberAlarmVpnInstanceName], Traffic-segment id = [hwXAclEpgGroupMemberAlarmSegmentId], Slot = [hwXAclEpgGroupMemberAlarmSlotid])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortLoopGuarded:The loop protection port did not receive BPDU packets within prescriptive time. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/2/hwPKILocalCertInvalid:The local certificate is invalid. (LocalCertIssuer=[issuer], LocalCertSubject=[subject], LocalCertStartTime=[start-time], LocalCertFinishTime=[finish-time])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpPeerSessionExceed:The number of BGP peer sessions will exceed the maximum number. (MaximumNumber=[MaximumNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/hwRisingAlarm:Alarm Id monitors alarm OID variable with the sample type, and the sampled alarm value is greater than or equal to rising threshold. (AlarmId=[AlarmId], OID=[OID], SampleType=[SampleType], SampleValue=[SampleValue], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisPeerFlapSuppStatusChange:The status of peer flapping suppress is changed. (isisSysInstance=[isisSysInstance], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], ifIndex=[ifIndex], ifName=[ifName], SuppressStatus=[hwIsisPeerFlappingSuppressStatus], Reason=[Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisAuthenticationFailure:The authentication password of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsKeyfileTampered:The file has been created or modified. (eventCategory=[event-category], eventType=[event-type], level=[level], occurTime=[occur-time], result=[result], user=[user], loginTime=[login-time], visitorIp=[visitor-ip], path=[file-path], operationType=[operation-type], processPath=[process-path], type=[attribute-type], from=[old-attribute], to=[new-attribute], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-FRAME/1/hwForwardEngineInvalid:The forwarding engine completely failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/2/hwMLagPeerlinkSingleLpu:All peer-link member interfaces in the Up state reside on the same LPU.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwIpsgDropAlarm:The packet number dropped by IPSG reaches [INTEGER1], exceed the alarm threshold [INTEGER2], interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/2/IPv4VxlanTunnelDown:The IPv4 vxlan tunnel status changes. (SourceIpAddress=[SrcIpAddr], DestinationIpAddress=[DstIpAddr], TunnelStatus=[TnlStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwPublicIpv6PrefixThresholdExceed:The number of public IPv6 prefixes exceeded the threshold. (PrefixCount=[PrefixCount], Threshold=[Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwCableSnrAbnormal:The SNR value of an electrical port is abnormal, and the quality of the Ethernet cable is poor. (Physical port index = [hwPhysicalPortIfIndex], Physical port name = [hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwStrackErrorDown:Interface's status is changed to error-down because an attack is detected, Interface [Interface].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpsLearnStrictCheck:The received ARP packet was not in response to the request packet that the device sent. (Interface=[IfIndex], SourceIP=[SourceIP], SourceMAC=[SourceMAC], VLAN=[VLAN])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisAdjAfDown:One address family of the IS-IS dual-stack neighbor is down. (SysInstance=[hwisisSysInstance], SysLevel=[hwisisSysLevelIndex], IfIndex=[ifIndex], IfName=[ifName], AdjSysID=[hwIsisAdjSysID], AddressFamily=[hwIsisAddressFamily], Reason=[hwIsisAdjAfDownReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserLoginFail:A user login failed. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpUserNumberAlarmGlobal:The number of DHCP global users exceeds alarm threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], CurrentUser=[CurrentUser], MaxUser=[MaxUser])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/5/hwNetconfMdaResourceChange:The device MDA resource changed. (ChangedResourceType=[ResourceType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMflpVlanLoopPeriodicTrap:MAC flapping detected, VlanId = [VlanId], Original-Port = [IfNameA], Flapping port 1 = [IfNameB], port 2 = [IfNameC]. [AlarmReason].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwBoardFail:The board partially failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PATCH/5/hwPatchUpdateTrap:The patch with slot [PatchSlotIndex], patch index [PatchIndex], version [PatchVersion] and type [PatchType] has updated to the state [PatchState], sessionid [SessionId].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PATCH/2/hwPatchErrorTrap:Failed to operate patch. (PatchErrorIndex =[PatchErrorIndex], SlotIndex=[SlotIndex], PkgIndex =[PkgIndex], ErrorCode=[ErrorCode], PkgName=[PkgName] )",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdIfThresholdExceed:The number of IGMP or MLD entries on the interface reached the upper threshold. (AddressFamily=[AddressFamily], Ifindex=[IfIndex], CurrentCount=[CurrentCount], ThresholdCount=[ThresholdCount], Ifname=[IfName], InstanceName=[InstanceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwPhysicalAdminIfDown:The physical manage interface physical status changes to down. (ifName=[ifName], OperStatus=[ifOperStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfTxRetransmit:An OSPF packet is retransmitted on a non-virtual interface. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], NbrIfIpAddress=[NbrIfIpAddress], NbrAddressLessIf=[NbrAddressLessIf], IfNeighbor=[IfNeighbor], PacketType=[PacketType], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/hwOspfv3IntraAreaRouterIdConflict:OSPFv3 router ID conflict is detected in intra-area. (ProcessId=[ProcessId], RouterId=[RouterId], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwcfgmaneventlog:Configuration file was changed. (LogIndex=[LogIndex], SrcCmd=[SrcCmd], SrcData=[SrcData], DestData=[DestData], TerUser=\"[TerUser]\", SrcAddr=[SrcAddr], ConfigChangeId=[ConfigChangeId], LogTime=[LogTime], CfgBaselineTime=\"[CfgBaselineTime]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/interface-election:The interface is elected as a DR. (IfIndex=[IfIndex], IfName=[PimInterfaceName], IfIPverion=[IfIPverion], IfAddrType=[IfAddrType], Addr=[Addr], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfNssaTranslatorStatusChange:The status of the NSSA translator changes. (RouterId=[RouterId], AreaId=[AreaId], NSSATranslatorState=[NSSATranslatorState], ProcessId=[ProcessId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortStateDiscarding:The MSTP process's port has been set to discarding state. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortRootGuarded:The root protection port of the instance of the MSTP process received a superior message. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2LsdbOverflow:The number of AS-external LSAs in the LSDB of an OSPF process reaches the configured maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2MaxLimit=[hwOspfv2MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlResourceLack:The number of used resources has exceeded the upper threshold. To continue using these resources, purchase and activate corresponding license resource items as soon as possible. (ItemName=[hwGtlItemName], AssignedValue=[hwGtlItemControlValue], UsedValue=[hwGtlItemUsedValue], ItemDescription=[hwGtlItemDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/2/hwGtlFeatureFunInactive:Item is inactive. (ItemName=[hwGtlItemName], FeatureName=[hwGtlFeatureName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwEntityExtHardDiskFull:The disk partition usage exceeded the pre-set overload threshold. (DiskType=[DiskType], DiskSN=[DiskSN], DiskUsage=[DiskUsage], DiskUsageThreshold=[DiskUsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisRouteBeDeletedByPurgeInexact:IS-IS routes advertised by the local device were deleted by another device, and the possibly faulty device did not support IS-IS purge LSP source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display isis purge-source-trace analysis-report command output is the faulty device. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], RuledOutDeviceNum=[hwIsisRuledOutDeviceNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpMdnRemTablesChange:MDN Neighbor information was changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwDhcpSnpChaddrAlarm:The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeds the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2RouteBeDeletedByPurgeInexact:OSPF routes advertised by the local device were deleted by another device, and the possibly faulty device did not support OSPF flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospf flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], RuledOutDeviceNum=[hwOspfv2RuledOutDeviceNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwIsisRouteBeDeletedByPurgeExact:IS-IS routes advertised by the local device were deleted by another device. Reset or isolate the faulty device from the network. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/lldpRemTablesChange:LLDP neighbor information was changed. (Added=[lldpStatsRemTablesInserts], Deleted=[lldpStatsRemTablesDeletes], Dropped=[lldpStatsRemTablesDrops], Aged=[lldpStatsRemTablesAgeouts])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/2/hwExtLinkUp:The link status of the trunk member interface turned to UP. (ifIndex=[ifIndex], ifAdminStatus=[ifAdminStatus], ifOperStatus=[ifOperStatus], ifDescr=[ifDescr], hwIFExtPhyStatus=[hwIFExtPhyStatus], hwIFExtMemberOf=[hwIFExtMemberOf])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3RouteBeDeletedByPurgeExact:OSPFv3 routes advertised by the local device were deleted by another device. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdGmpJoin:Interface receives an IGMP or MLD Join message. (Interface=[InterfaceName], InterfaceIndex=[InterfaceIndex], Version=[GmpVersion], SrcStr=[SrcAddr], GrpStr=[GrpAddr], HostAddr=[SenderAddr], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwARPSDaiVlanDropALarm:The packet dropped by DAI exceeds the alarm threshold. (DroppedNum=[INTEGER1], Threshold=[INTEGER2], VLAN=[INTEGER3], PacketInfo=[OCTET]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/5/hwBoardSplitPorts:Port split/aggregate configuration has changed on the board. (hwPhysicalName=[hwPhysicalName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/2/hwPowerFail:A power module experienced a partial failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], EntityOperStatus=[EntityOperStatus], Reason=[ReasonDsp])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwcfgStartupFileIntegrityFail:Integrity check of the startup configuration file failed. (FileType=[FileType])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCB/4/hwXQoSPfcDeadLockAlarm:PFC deadlock is detected. (interface=[ifname], lossless priority=[priority], detected number=[detectednumber], recovered number=[recoverednumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ImportAseRouteExceed:The number of AS-external LSAs generated when an OSPF process imports external routes exceeds the configured maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2MaxLimit=[hwOspfv2MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/linkdown:The interface status changes. (ifName=[ifName], AdminStatus=[ifAdminStatus], OperStatus=[ifOperStatus], Reason=[Reason], mainIfname=[mainIf])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/2/hwMLagVxlanByPassTunnelTraffic:The bypass VXLAN tunnel cannot forward traffic. (Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanIpv6TnlDel:The IPv6 VXLAN tunnel was deleted. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsThresholdNotification:NQA entry over threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], Threshold1=[Threshold1], CompletionTimeMax=[CompletionTimeMax], RTDOverThresholds=[RTDOverThresholds])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/2/hwMgmdGMPInterfaceLimit:Membership report message is discarded because the interface-specific IGMP or MLD group membership limitation is exceeded. (AddressFamily=[AddressFamily], SrcAddr=[SrcAddr], GrpAddr=[GrpAddr], Ifindex=[IfIndex], CurrentCount=[CurrentCount], Ifname=[IfName], InstanceName=[InstanceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsOWDThresholdNotificationSD:The OWD-SD of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], OWDOverThresholdsSD=[OWDOverThresholdsSD])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/3/vrrpTrapAuthFailure:VRRP authentication failed. (vrrpTrapPacketSrc=[vrrpTrapPacketSrc], vrrpTrapAuthErrorType=[vrrpTrapAuthErrorType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/pimNeighborLoss:The PIM neighbor was lost. (NbrIntIndex=[NbrIntIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisSequenceNumberSkip:ISIS received a self-originated LSP with a greater sequence number. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspId=[isisPduLspId], ifIndex=[ifIndex], IfName=[IfName],oldSeqNum=[oldSeqNum],newSeqNum=[newSeqNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VFS/4/hwSysMasterHDError:The system master HD error.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsFilePrivilegeEscalated:The file privilege has been escalated. (eventCategory=[event-category], eventType=[event-type], level=[level], occurTime=[occur-time], result=[result], path=[path], method=[method], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwStartupSecureVersionNeedRefresh:The startup secure version needs to be refreshed. (Position=[Position])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwSlotNDThresholdExceedAlarm:The number of ND entries exceeded the threshold of slot. (entPhysicalIndex=[entPhysicalIndex], Slotname=[slotname], Threshold=[Threshold], Number of dynamic ND entries=[DynEntries], Number of static ND entries=[StatEntries], Number of remote ND entries=[RemoteEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/hwFallingAlarm:Alarm Id monitors alarm OID variable with the sample type, and the sampled alarm value is less than or equal to falling threshold. (AlarmId=[AlarmId], OID=[OID], SampleType=[SampleType], SampleValue=[SampleValue], Threshold=[Threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwPrefecTcaAlarm:A pre-FEC BER threshold-crossing alarm was generated. (IfIndex=[hwPhysicalPortIfIndex],SlotId=[hwPhysicalPortInSlot],CardId=[hwPhysicalPortInCard],PortId=[hwPhysicalPortInPort],InterfaceName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/6/hwOspfv3GreaterAgeLsaRecived:OSPFv3 receive LSA with greater Lsa-Age. (ProcessId=[ProcessId], RouterId =[RouterId], AreaId=[AreaId], IfName=[IfName], LsaId=[LsaId], LsaAge=[LsaAge])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwBoardResWarningThresholdExceed:The number of forwarding resources reaches the alarm threshold. (Slot = [hwFwdResLackSlotStr], Threshold = [hwFwdResThreshold], Reason = [hwFwdResLackReasonId], Description = [hwReasonDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/4/hwCKNSwitchFailAlarm:Failed to switch the CKN. (IfIndex=[IfIndex], Role=[Role], Local Port=[Local-Port], Old CKN=[Old-CKN], New CKN=[New-CKN], Switch Reason=[Switch-Reason], Failed Reason=[Failed-Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProTcGuarded:With the TC protection enabled, if TC BPDUs were received after the number of TC BPDUs received by an instance exceeded the threshold, these TC BPDUs were processed after the TC protection time expires. (ProcessID=[ProcessID], proTcGuard=[proTcGuard], InstanceID=[InstanceID], proInstBridgePriority=[proInstBridgePriority])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUSTEM/2/hwTrustemCertificateExpiredEarlyWarning:The trustem certificate will expire. (PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], CertificateName=[hwTrustemCertificateName], CertificateType=[hwTrustemCertificateType], BeginTime=[hwTrustemCertificateBeginTime], EndTime=[hwTrustemCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfv2ImportAseRouteThreshold:The number of AS-external LSAs generated when an OSPF process imports external routes exceeds the configured alarm upper threshold. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2Threshold=[hwOspfv2Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/2/hwStormSuppIfmAlarm:Rate of packets exceeded the storm suppression threshold. (IfName=[hwStormSuppIfName], PacketType=[hwStormSuppPktType], Threshold=[hwStormSuppThreshold], mode=[hwStormSuppMode], ExceededPacketCount=[hwStormSuppDropCnt])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPBdSuppressEntryExceedAlarm:The number of ARP broadcast-suppress entries exceeds the specification. (EntPhysicalIndex=[EntPhysicalIndex], Slot name=[SlotName], Specs=[Specs], Number of ARP broadcast-suppress entries=[SuppEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysSlaveSwitchFailNotification:Failed to run slave switch with SlaveSwitchIndex [SlaveSwitchIndex], ChassisNum[ChassisNum].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NETCONFC/2/hwNetconfClientConfigFailed:Failed to deliver configurations to a peer device. (peerName=[peerName], addrType=[addrType], address=[address], featureName=[featureName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisThirdPartRouteBeDeletedByPurgeInexact:IS-IS routes advertised by another device were deleted, and the possibly faulty device did not support IS-IS purge LSP source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display isis purge-source-trace analysis-report command output is the faulty device. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], RuledOutDeviceNum=[hwIsisRuledOutDeviceNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/3/hwCfgMemoryInsufficient:The memory usage is too high. As a result, the configuration fails to be edited.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessDown:Session changes to DOWN. (Index=[Index], ConfigurationName=[ConfigurationName], PeerIp=[PeerIp], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], DefaultIp=[DefaultIp], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], NextHop=[NextHop], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop], EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessReachLimitBindIf:Try to build session, but the session number in the IO board with interface has reached the limit, the new session binding with interface can not be created. (ConfigurationName=[ConfigurationName], InterfaceName=[InterfaceName], SessionLimitPerBoard=[SessionLimitPerBoard])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwNomatchSnpBindTblDhcpPktAlarmBd:The number of the discarded DHCP request packets that do not match the binding table exceeds the threshold. (IfIndex=[IfIndex], Interface=[Interface], BdID=[BdID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpMlagPartnerMisconnect:The local device in the M-LAG may be connected to an incorrect partner device because the partner system ID of the local Eth-Trunk is different from that of the paired Eth-Trunk. (TrunkIfIndex=[TrunkIfIndex], TrunkName=[TrunkName], M-LAG-ID=[M-LAG-ID], LocalPSystemID=[LocalPSystemID], PeerPSystemID=[PeerPSystemID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwBoardInvalid:The board totally failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3LsaRetranExceedLimit:The number of OSPFv3 LSA retransmissions on an interface exceeds the limit. (ProcessId=[hwOspfv3ProcessId], AreaId=[hwOspfv3AreaIdIndex], InterfaceName=[hwOspfv3IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/4/hwBgpPacketSendFailed:The BGP peer cannot send packets for a long time. (BGP instance=[InstanceName], VPN instance=[VpnInstance], BgpPeerRemoteAddr=[PeerAddress], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCertFailLdap:Get certificate unsuccessfully with LDAP. (hwLdapIP=[ldapip], hwLdapPort=[ldapport], hwCertAttribute=[certattribute], hwCertDN=[certdn], hwLdapVersion=[ldapversion], hwCertSaveName=[certsavename]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimVrfTypeSGExceed:The number of existed routing entries exceeded the vpn upper limit. (LimitType=[LimitType], AddressFamily=[AddressFamily], VpnName=[VpnName], CurrentCount=[CurrentCount], LimitCount=[LimitCount],SrcAddr=[SrcAddr], GrpAddr=[GrpAddr])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OAS/2/hwOASApplicationFault:The application fails. (ApplicationName=[appName],SlotID=[slotID],CpuID=[cpuID],ApplicationFaultReason=[faultReason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKGM/5/hwPackageOperationSuccess:Package operation succeeded. (PackageOperationType=[PackageOperationType], PackageType=[PackageType], PackageName=[PackageName], PackageVersion=[PackageVersion])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/1/hwMacsecRcvRspTimeout:The MKA protocol status of the local interface becomes Down because the response message cannot be received during the timeout period. (IfIndex=[IfIndex], Role=[Role], Local Port=[LocalPort])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSResourceOverrunAlarm:The resource usage exceeds the alarm threshold. (slot ID = [hwXQoSResourceOverrunAlarmSlotID], resource type = [hwXQoSResourceOverrunAlarmType], total number of resources = [hwXQoSResourceOverrunAlarmTotal], number of remaining resources = [hwXQoSResourceOverrunAlarmFree], resource usage alarm threshold = [hwXQoSResourceOverrunAlarmThreshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwIpv4PrefixThresholdExceed:The number of IPv4 prefixes exceeded the threshold. (PrefixCount=[PrefixCount], MaxValue=[MaxValue], ThresholdLowerLimit=[ThresholdLowerLimit], ThresholdUpperLimit=[ThresholdUpperLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2RouteBeDeletedByPurgeExact:OSPF routes advertised by the local device were deleted by another device. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/2/hwDldpUnidirectionalLink:Link layer state of the port changed to one way. (IfIndex=[IfIndex], IfName=[IfName], FaultReason=[FaultReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/ifrxbadpacket:An OSPFV3 packet that is received on a non-virtual interface cannot be parsed. (RouterId=[RouterId], IfIndex=[IfIndex], IfInstId=[IfInstId], IfState=[IfState], PacketSrc=[PacketSrc], PacketType=[PacketType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwARPSDaiDropALarm:The packet number dropped by DAI reaches [INTEGER1], exceed the alarm threshold [INTEGER2], Interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpsEntryCheck:ARP entry attack. (SourceInterface=[InterfaceName], SourceIP=[IpAddress], SourceMAC=[MacAddress], VLAN=[PeVlan], INNER-VLAN=[CeVlan])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/3/hwlldpNeighborUnexpectedAlarm:The neighbor information of LLDP packet is not as expected. (Interface=[interfaceName], RemoteChassisType=[chassisSubType], RemoteChassisId=[chassisId], RemotePortIdType=[portIdSubType], RemotePortId=[portId], Reason=[lldpReasonString])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwcfgNextStartupFileIntegrityFail:Integrity check of the next startup configuration file failed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProLoopDetectedRising:The MSTP process's port has been set to discarding state because loopback of protocol packets is detected. (ProcessID=[ProcessID],InstanceID=[InstanceID],PortID1=[PortID1],PortID2=[PortID2],PortID3=[PortID3],PortID4=[PortID4],PortIDFlag=[PortIDFlag],PortState=[PortState],IfIndex=[IfIndex],PortName=[PortName],PwName=[PwName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisRejectedAdjacency:IS-IS failed to establish the adjacency with its peer. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EAP/4/hwQuietUserMaxAlarm:The number of quiet 802.1x users is reaching the max. (Threshold=[Threshold]%, UserNum=[UserNum], Lower Threshold=[LowerThreshold]%, Upper Threshold=[UpperThreshold]%, Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfRouteThresholdExceed:The number of routes received from peers in a BGP address family reached the alarm threshold. (Address Family=[AddressFamily], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortStateForwarding:The MSTP process's port has been set to forwarding state. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/3/ifconfigerror:A packet is received on the non-virtual interface from a router whose configuration conflicts with the local configuration. (RouterId=[RouterId], IfIndex=[IfIndex], IfInstId=[IfInstId], IfState=[IfState], PacketSrc=[PacketSrc], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpUnnumberedPeerRouteExceed:The number of routes received from the BGP peer exceeded the alarm number. (InstanceId=[InstanceId], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], LocalIfName=[LocalIfName], PeerRemoteAddrType=[PeerIPAddrType], PeerRemoteAddr=[PeerIPAddr], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VSTM/2/hwEthernetARPHostIPConflict:Host IP address conflicted. (LocalIPAddress=[LocalIP], LocalVNIID=[LocalVniId], LocalMAC=[LocalMAC], LocalVtepIP=[LocalVtepIP], RemoteIPAddress=[ConflictIP], RemoteVNIID=[RemoteVniId], RemoteMAC=[RemoteMAC], RemoteVtepIP=[RemoteVtepIP], LocalInterface=[LocalInterface], RemoteInterface=[RemoteInterface])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/3/hwXQOSIfLrDiscardAlarm:The outgoing traffic on the interface exceeds the alarm threshold for the CIR of the interface. (Interface=[hwXQoSIfLrCfgIfName], CIR=[hwXQoSIfLrCir] kbit/s, alarm threshold=[hwXQoSTrapThreshold] of the percentage, outbound interface rate=[hwXQoSPassPacketRate] kbit/s)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/3/hwBfdSessReachTotalLimit:The number of BFD sessions on all IO boards has reached the upper limit. (TotalSessionLimit=[TotalSessionLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2IntraAreaRouterIdConflictRecovered:Router IDs confliction is recovered. (ProcessId=[ProcessId], AreaId=[AreaId], OldRouterId=[OldRouterId], NewRouterId=[NewRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwBsrBsmReachLimit:The size of the BSM message has reached the upper limit. (AddressFamily=[AddressFamily], InstName=[InstName], BsrAddr=[BsrAddr], AdminScope=[AdminScope])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/6/entConfigChange:Entity MIB change. (Oid=[OID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisOrigLSPBuffSizeMismatch:The size of the local buffer for originating IS-IS LSPs is smaller than the size of the received LSP. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspId=[isisPduLspId], isisPduOriginatingBufferSize=[isisPduOriginatingBufferSize], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisManualAddressDrops:Some area addresses were discarded because the number of area addresses exceeded three. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisManAreaAddr=[isisManAreaAddr], isisManAreaAddrExistState=[isisManAreaAddrExistState])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwCommunicateError:The communication channel failed. (hwEntityPhysicalIndex=[hwEntityPhysicalIndex], entPhysicalName=[entPhysicalName], hwEntityTrapEntType=[hwEntityTrapEntType], hwEntityTrapFaultID=[hwEntityTrapFaultID], hwEntityCommunicateType=[hwEntityCommunicateType], hwEntityTrapReasonDescr=[hwEntityTrapReasonDescr])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/ospfVirtNbrStateChange:The status of the virtual neighbor changes. (VirtNbrArea=[VirtNbrArea], VirtNbrRtrId=[VirtNbrRtrId], ProcessId=[ProcessId], RouterId=[RouterId], VirtNbrState=[VirtNbrState], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/6/hwConAuthModeIncomplete:The authentication mode of console port is none or password but not set password. (Slot=[Slot],AuthMode=[AuthMode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/6/hwNmsPingTrap:NMSPingTrap was sent successfully.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpBackwardTransition:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Ipv6Addr], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState], LocalIfName=[LocalIfName], Reason=[Reason], Description=[Description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/4/hwCipherSwitchFailAlarm:Failed to switch the Cipher Suite. (IfIndex=[IfIndex], Role=[Role], Local Port=[Local-Port], Peer Cipher Suite=[Peer-Cipher-Suite], Cipher Suite=[Cipher-Suite], Switch Reason=[Switch-Reason], Failed Reason=[Failed-Reason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfConfigError:A packet is received on the virtual interface from a router whose configuration conflicts with the local configuration. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpUserNumberAlarmIf:The number of DHCP users on the interface exceeds alarm threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], CurrentUser=[CurrentUser], MaxUser=[MaxUser])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/piminvalidregister:PIM receives an invalid register message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvRegAddressType=[InvRegAddressType], InvRegOriginAddr=[InvRegOriginAddr], InvRegGrpAddr=[InvRegGrpAddr], InvRegRpAddr=[InvRegRpAddr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwStrackIfVlanInfo:Attack occurred. (Interface=[Interface], CVLAN=[CVLAN], PVLAN=[PVLAN], EndTime=[EndTime], TotalPackets=[TotalPackets])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwCardRemove:The card was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwPublicIpv6PrefixExceed:The number of public IPv6 prefixes exceeded the maximum value. (PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIUpdateLocalCertSucCmp:Updating the local certificate through CMPv2 succeeded. (LocalCertIssuer=[LocalCertIssuer], LocalCertSubject=[LocalCertSubject], NewLocalCertStartTime=[NewLocalCertStartTime], NewLocalCertFinishTime=[NewLocalCertFinishTime]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/hwIsisDeleteRouteByPurge:The local device deleted IS-IS routes advertised by other devices. Reset or isolate the device from the network. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], PurgeLspNum=[hwIsisPurgeLspNum], AffectedNodeNum=[hwIsisAffectedNodeNum], TotalNodeNum=[hwIsisTotalNodeNum], Interval=[hwIsisInterval])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwNextStartupFileInconsistent:The file for next startup on the active main control board is different from that on the standy main control board.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsRTDThresholdNotification:The RTD of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], RTDOverThresholds=[RTDOverThresholds])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwStrackIpInfo:Attack occurred. (Interface=[Interface], SourceIp=[SourceIP], CVLAN=[CVLAN], PVLAN=[PVLAN], EndTime=[EndTime], TotalPackets=[TotalPackets], SourceIpv6=[SourceIPv6])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/1/hwSystemMemoryOverload:The memory usage exceeds the reliability overload threshold. (TrapSeverity=[TrapSeverity], EventType=[EventType], PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], UsageValue=[UsageValue], Unit=[Unit], UsageThreshold=[UsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwCfgConfigChangeLog:The configuration changed. (Internal change =[isInner], User name =[username], Session ID =[ssnId], Command source address =[srcAddress], Storage type =[datastoreType], Terminal type =[termninalType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwPortSecRcvInsecurePktAlarm:Secure MAC addresses reached the limit. (IfIndex=[IfIndex], IfName=[IfName], MacLimitMaxMac=[MacLimitMaxMac], Action=[Status](1:restrict;2:protect;3:error-down))",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/hwOspfv2GreaterAgeLsaRecived:OSPF receive LSA with greater Lsa-Age. (ProcessId=[ProcessId], AreaId=[AreaId], IfIndex=[IfIndex], NbrIPaddress=[NbrIpAddress], IfName=[IfName], NbrRtrId=[NbrRtrId], LsaId=[LsaId], LsaAge=[LsaAge])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3RouteBeDeletedByPurge:OSPFv3 routes advertised by the local device were deleted by another device. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], TotalNodeNum=[hwOspfv3TotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwOspfv3PurgeHostName1], HostIpAddress=[hwOspfv3PurgeIpAddress1], RouterID=[hwOspfv3PurgeRouterId1] (2) HostName=[hwOspfv3PurgeHostName2], HostIpAddress=[hwOspfv3PurgeIpAddress2], RouterID=[hwOspfv3PurgeRouterId2] (3) HostName=[hwOspfv3PurgeHostName3], HostIpAddress=[hwOspfv3PurgeIpAddress3], RouterID=[hwOspfv3PurgeRouterId3])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/3/hwPimRpfAssertWinnerFlapping:The assert winner is flapping. (AddressFamily=[AddressFamily], SrcAddr=[SrcAddr], GrpAddr=[GrpAddr], InterfaceName=[InterfaceName], CurrentAssertWinnerAddr=[CurrentAssertWinnerAddr], InstanceName=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwUntrustedReplyPktAlarmBd:The number of the discarded DHCP reply packets on the untrusted interface exceeds the threshold. (IfIndex=[IfIndex], Interface=[Interface], BdID=[BdID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ImportNssaRouteExceed:The number of NSSA LSAs generated when an OSPF process imports external routes exceeds the configured maximum number. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2AreaId=[hwOspfv2AreaId], hwOspfv2MaxLimit=[hwOspfv2MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/rp-mapping-change:The RP changes. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], szGrpAddr=[szGrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], Precedence=[Precedence], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgLastSaveFailNotify:The last save operation failed, please check the configuration.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlDataDamaged:The license fails to be activated during system startup because the license data is damaged. (Position=[hwGtlPosition])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwSysReloadNotification:The board was reboot. (ReloadIndex=[ReloadIndex], ReloadImage=[ReloadImage], ReloadCfg=[ReloadCfg], ReloadReason=[ReloadReason], ReloadTime=[ReloadTime], ReloadAction=[ReloadAction], ReloadPaf=[ReloadPaf], ReloadLicense=[ReloadLicense], ReloadPatch=[ReloadPatch]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSDIAG/3/hwEntityExtHardDiskOfflineFail:Failed to unmount the disk. (DiskType=[DiskType], DiskSN=[DiskSN], DiskSlot=[DiskSlot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/piminterfaceelection:The interface was elected as a DR. (IfIndex=[IfIndex], IfIPverion=[IfIPverion], IfAddrType=[IfAddrType], Addr=[Addr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/2/hwOspfv3ImportAseRouteExceed:The number of AS-external LSAs generated when an OSPFv3 process imports external routes exceeds the configured maximum number. (hwOspfv3ProcessId=[hwOspfv3ProcessId], hwOspfv3MaxLimit=[hwOspfv3MaxLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisSystemIdConflict:System ID may conflict. (hwisisSysInstance=[hwisisSysInstance], hwisisSysLevelIndex=[hwisisSysLevelIndex], OwnSystemId=[OwnSystemId], sysProcIndexofDyname=[sysProcIndexofDyname], OwnDynamicName=[OwnDynamicName], AdjSystemId=[AdjSystemId], AdjDynamicName=[AdjDynamicName], LocalIP=[hwIsisLocalIP], AdjIP=[hwIsisAdjIP], RemoteIP=[hwIsisRemoteIP])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWD/4/hwEntityExtCpuUsageNotfication:The cpu usage exceeds the threshold value. (forwarding type = [hwCpuUsageTrapType], slot id = [hwCpuUsageTrapSlot], cpu id = [hwCpuUsageTrapCpu], current cpu usage = [hwCpuUsageCurrentUsage], threashold = [hwCpuUsageThreashold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwOpticalInvalid:Optical Module is invalid. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwPortVlanSecureMacAlarm:Interface receive insecure MAC address. (IfIndex=[Interface], InterfaceName=[InterfaceName], MacAddr=[MacAddr], VLAN=[VLAN], Action=[Status](1:restrict;2:protect;3:error-down))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwRequestNoTrustPktAlarmBd:The number of the discarded DHCP request packets exceeds the threshold because the DHCP snooping trust port is not configured or the trust port is Down. (IfIndex=[IfIndex], Interface=[Interface], BdID=[BdID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisLspRetranExceedLimit:The number of IS-IS LSP retransmissions on an interface exceeds the limit. (SysInstance=[hwisisSysInstance], InterfaceName=[hwIsisIfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/pingTestFailed:Ping entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], AddressType=[AddressType], Address=[Address], MinRtt=[MinRtt], MaxRtt=[MaxRtt], AverageRtt=[AverageRtt], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], RttSumOfSquares=[RttSumOfSquares], LastGoodProbe=[LastGoodProbe])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserSshLogout:The SSH connection is logout. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/4/hwNvo3VxlanIPv6TnlDown:The status of the IPv6 VXLAN tunnel changed to down. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr], TunnelStatus=[Tnl6Status])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSBUMReplicationAlarm:The BUM traffic to be replicated exceeds the device capability. (slot ID = [hwXQoSBUMReplicationAlarmSlotId], chipID = [hwXQoSBUMReplicationAlarmChipId])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisMaxAreaAddressesMismatch:The MaxAreaAddress field of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisPduMaxAreaAddress=[isisPduMaxAreaAddress], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpUnnumberedPeerRouteNumThresholdExceed:The number of routes received from the BGP peer exceeded the alarm threshold. (InstanceId=[InstanceId], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], LocalIfName=[LocalIfName], PeerRemoteAddrType=[PeerIPAddrType], PeerRemoteAddr=[PeerIPAddr], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VTY/3/hwVtyExceed:The number of available VTY channels is lower than the threshold. (currentLoginVTYs=[hwCurrentVty], totalVTYs=[hwMaxVty])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKGM/2/hwOnboardFirmwareDamaged:The onboard firmware is damaged.(PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpDynamicPeerSessionExceed:The number of BGP dynamic peer sessions exceeded the maximum number. (MaximumNumber=[MaximumNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMacTrapPortCfgAlarm:MAC trap detected, [hwMacTrapMacInfo], MacAddress = [MacAddr], VlanId = [VlanId], VsiName = [VsiName], Ifindex = [Ifindex], IfName = [IfName].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKGM/4/hwPackageVersionDowngrade:The software version is downgraded. (PreviousPackage=[PreviousPackage],PreviousVersion=[PreviousVersion],CurrentPackage=[CurrentPackage],CurrentVersion=[CurrentVersion])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/mplsL3VpnVrfDown:The interface bound to the VPN instance went Down. (VpnInstanceName=[VpnInstanceName], IfName=[IfName], IfCurRowStatus=[IfCurRowStatus], VRFOperationStatus=[VRFOperationStatus])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwVlanMacLimitOverThreshold:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (Vlan=[VlanId],MacLimitMaxMac=[MacLimitMaxMac])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/hwOspfv3IntraAreaRouterIdConflictClear:Router IDs confliction is recovered. (ProcessId=[ProcessId], AreaId=[AreaId], OldRouterId=[OldRouterId], NewRouterId=[NewRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPDynamicEntryExceedAlarm:The number of dynamic ARP entries exceeds the specification. (EntPhysicalIndex=[EntPhysicalIndex], Slot name=[SlotName], Specs=[Specs], Number of dynamic ARP entries=[DynEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiEdgePortChanged:After the edge port receives a BPDU packet, the port is no longer an edge port. (InstanceID=[InstanceID], PortIndex=[PortIndex], EdgePortEnableState=[EdgePortEnableState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestCompleted:NQA entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], CompletionTimeMin=[CompletionTimeMin], CompletionTimeMax=[CompletionTimeMax], SumCompletionTime=[SumCompletionTime], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], SumCompletionTime2Low=[SumCompletionTime2Low], SumCompletionTime2High=[SumCompletionTime2High], LastGoodProbe=[LastGoodProbe], LastGoodPath=[LastGoodPath])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/mplsL3VpnVrfRouteMidThreshExceeded:The number of prefixes in the VPN instance exceeded the middle threshold. (VpnInstanceName=[VpnInstanceName], VpnInstanceRouteCount=[VpnInstanceRouteCount], MidThresholdValue=[MidThresholdValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSDIAG/3/hwEntityExtHardDiskOnlineFail:Failed to mount the disk. (DiskType=[DiskType], DiskSN=[DiskSN], DiskSlot=[DiskSlot])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NETCONFC/2/hwNetconfClientSyncConfigFailed:Failed to synchronize configurations to a peer device. (peerName=[peerName], addrType=[addrType], address=[address])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCB/3/hwXQoSPfcApplyFailAlarm:Failed to apply PFC on interface. (interface=[ifname])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpPeerAfPerRouteExceed:The routes number of the specified type received from peers in a BGP address family reached the maximum value. (Address Family=[AddressFamily], RouteType=[RouteType], MaxRouteNumber=[RouteLimitNum], BGP instance name=[InstanceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/1/hwCPUUtilizationRisingAlarm:The CPU usage exceeded the pre-set overload threshold. (TrapSeverity=[TrapSeverity],ProbableCause=[ProbableCause],EventType=[EventType],PhysicalIndex=[PhysicalIndex],PhysicalName=[PhysicalName],RelativeResource=[RelativeResource],UsageType=[UsageType],SubIndex=[SubIndex],CpuUsage=[CpuUsage],Unit=[Unit],CpuUsageThreshold=[CpuUsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LBDT/4/hwLdtPortLoop:Loopback existed on the port. (ifname=[ifName], vlan=[vlanId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisRouteBeDeletedByPurge:IS-IS routes advertised by the local device were deleted by another device. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. (SysInstance=[isisSysInstance], HostName=[hwIsisHostName], HostIpAddress=[hwIsisHostIpAddress], SystemID=[isisPduLspId], SysLevel=[isisSysLevelIndex], TotalNodeNum=[hwIsisTotalNodeNum], Log in to the following devices to locate the faulty device: (1) HostName=[hwIsisHostName1], HostIpAddress=[hwIsisHostIpAddress1], SystemID=[hwIsisSystemID1] (2) HostName=[hwIsisHostName2], HostIpAddress=[hwIsisHostIpAddress2], SystemID=[hwIsisSystemID2] (3) HostName=[hwIsisHostName3], HostIpAddress=[hwIsisHostIpAddress3], SystemID=[hwIsisSystemID3])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/3/hwXQoSChipBufferOverrunAlarm:The chip buffer usage exceeds the threshold. (Slot = [hwXQoSChipBufferOverrunAlarmSlotId], chip =[hwXQoSChipBufferOverrunAlarmChipId], current used buffer length = [hwXQoSChipBufferOverrunAlarmUsedLength] KBytes, current threshold = [hwXQoSChipBufferOverrunAlarmThreshold] percent)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwFwmFaultAlarm:The forwarding manage module partially failed. (Slot=[hwFwmFaultSlotStr], Cpu=[hwFwmFaultCpuStr], Reason=[hwFwmFaultReasonId], Description=[hwFwmFaultReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdIPv6SessDown:Session changes to DOWN. (Index=[Index], ConfigurationName=[ConfigurationName], BindIfIndex=[BindIfIndex], BindIfName=[BindIfName], Diagnosis=[Diagnosis], BindVrfIndex=[BindVrfIndex], BindVpnName=[BindVpnName], SessionType=[SessionType], BindType=[BindType], StaticLspName=[StaticLspName], PwSecondary=[PwSecondary], VcId=[VcId], VsiName=[VsiName], VsiPeerAddress=[VsiPeerAddress], DiscrAuto=[DiscrAuto], PeerIpv6=[PeerIpv6], Ipv6NextHop=[Ipv6NextHop], EvplId=[EvplId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/6/hwIsisLspRemainingLifetimeRefresh:ISIS receive LSP with small Remaining Lifetime. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], ifIndex=[ifIndex], ifName=[ifName], isisAdjSysID=[hwIsisAdjSysID], isisPduLspId=[isisPduLspId], isisRemainingLifetime=[hwIsisRemainingLifetime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SSL/2/hwSSLCertificateExpiredEarlyWarning:The SSL certificate will expire. (CertificateName=[hwSSLCertificateName], CertificateType=[hwSSLCertificateType], BeginTime=[hwSSLCertificateBeginTime], EndTime=[hwSSLCertificateEndTime])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/2/hwExtLinkDown:The link status of the trunk member interface turned to DOWN. (ifIndex=[ifIndex], ifAdminStatus=[ifAdminStatus], ifOperStatus=[ifOperStatus], ifDescr=[ifDescr], hwIFExtPhyStatus=[hwIFExtPhyStatus], hwIFExtMemberOf=[hwIFExtMemberOf])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIRequestCertSucCmp:Requesting certificate through CMPv2 succeeded. (hwCMPUrl=[cmpurl], hwCMPName=[cmpname], CmpSessionName=[sessionname]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CM/4/hwNacUserClearAlarm:The NAC Max User Alarm is cleared. (Slot=[Slot], User-num=[User-num], Threshold=[Threshold]%, Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/hwVrrpExtTrapMasterDown:The VRRP status changed from master to another state. (ifIndex=[ifIndex], VrId=[VrId], MasterIpAddr=[MasterIpAddr], sysName=[sysName], ifName=[ifName], CurrentState=[CurrentState], ChangeReason=[ChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwEthHalfDuplex:Eth half duplex. (InterfaceIndex=[hwPhysicalPortIfIndex],InterfaceName=[hwPhysicalPortName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCB/4/hwXQoSPfcTxRateAlarm:The rate of transmitted PFC frames exceeds the threshold. (interface=[ifname], lossless priority=[priority], transmitted rate=[transmittedrate], threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/6/hwUserLogin:User login successful. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpsGatewayConflict:Received an ARP packet with a duplicate IP address from the interface. (InterfaceName=[InterfaceName], IpAddress=[IpAddress], MacAddress=[MacAddress], PE-VLAN=[PeVLAN], CE-VLAN=[CeVLAN])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpUserNumberAlarmVlan:The number of DHCP users on the vlan exceeds alarm threshold. (IfIndex=[IfIndex], VLANIndex=[VlanIndex], VlanID=[VlanID], CurrentUser=[CurrentUser], MaxUser=[MaxUser])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/hwOspfv2PeerFlappingSuppressStatusChange:The status of peer flapping suppress is changed. (ProcessId=[ProcessId], AreaId=[AreaId], ifAreaId=[ifAreaId], ifIndex=[ifIndex], ifName=[ifName], SuppressStatus=[SuppressStatus], SuppressReason=[SuppressReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/routeExceed:The number of existed routing entries reached the global upper limit. (LimitType=[LimitType], AddressFamily=[AddressFamily], CurrentCount=[CurrentCount], LimitCount=[LimitCount],SrcAddr=[SrcAddr], GrpAddr=[GrpAddr], InstanceName=[InstanceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/pingProbeFailed:Ping entry probe failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], AddressType=[AddressType], Address=[Address], MinRtt=[MinRtt], MaxRtt=[MaxRtt], AverageRtt=[AverageRtt], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], RttSumOfSquares=[RttSumOfSquares], LastGoodProbe=[LastGoodProbe])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDProxyDynThresholdExceedAlarm:The number of dynamic ND Proxy entries exceeded the threshold of the device. (Threshold=[Threshold], Number of dynamic ND proxy entries=[DynProxyEntries]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/5/hwTrunkStatusChange:The trunk interface status changes. (TrunkName=[TrunkName], TrunkIndex=[ifIndex], TrunkAdminStatus=[TrunkAdminStatus], TrunkStatus=[TrunkStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPMACMismatch:The MAC of static ARP set by user is unequal to the actual MAC address. (StaticIP=[StaticIP], VPNInstance=[VPNInstance], StaticMAC=[StaticMAC], DynamicMAC=[DynamicMAC])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/invalid-join-prune:PIM receives an Invalid Join/Prune message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddrType=[GroupMappingAddrType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddrType=[GroupMappingRPAddrType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvJPAddrType=[InvJPAddrType], InvJPOriginAddr=[InvJPOriginAddr], InvJPGrpAddr=[InvJPGrpAddr], InvJPRpAddr=[InvJPRpAddr], NbrIfIndex=[NbrIfIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime], NbrName=[NbrName], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfTxRetransmit:An OSPF packet is retransmitted on a virtual interface. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId], ProcessId=[ProcessId], RouterId=[RouterId], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwNhmCyclicIterateRestrain:Cyclic iteration was suppressed. (restrainType=[restrainType], vpnName=[vpnName], nexthop=[nexthop], protocolType=[protocolType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/2/hwPKIDBUnavailable:The PKI database is unavailable. (Reason=[hwPKIDBFailDesp])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProRootShake:The root bridge role flapped. (ProcessID=[ProcessID], InstanceID=[InstanceID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsUnauthorizedRootUser:An unauthorized root user has been detected. (eventCategory=[event-category], occurTime=[occurTime], result=[result], unauthorizedUser=[unauthorizedUser], gid=[gid], home=[home], shell=[shell], uid=[uid], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwIsisSystemIdCfgConflict:An IS-IS system ID conflict occurred. The system ID may have been automatically restored, but the conflicting configuration may still exist. To restore the configured system ID, manually delete the network-entity of the local device and reconfigure it. (SysInstance=[hwisisSysInstance], Level=[hwisisSysLevelIndex], ConflictSystemID=[hwIsisConflictSystemID], LocalHostName=[hwIsisHostName], RemoteHostName=[hwIsisAdjSysName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpStateDown:The LACP status of the member port changes to down. (TrunkIndex=[TrunkIndex],PortIfIndex=[PortIfIndex],TrunkId=[TrunkId],TrunkName=[TrunkName],PortName=[PortName],Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpNegotiateFailed:The member of LAG negotiation failed. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName], Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwPPEDropPacketAlarm:In slot [SlotId], due to insufficient buffer, packets on PPE are lost. (DropPacketCount=[DropPacketNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ND/4/hwNDAntiAttackRateLimit:Packet speed exceeded the configured speed-limit value. (PacketType=[PktType], SuppressValue=[SupVal], CurrentValue=[CurVal], SuppressType=[SupType], InterfaceName=[IfName], WorkIfName=[WorkIfName], SourceMacAddress=[SrcMac], DestinationMacAddress=[DstMac], SourceAddress=[SrcIp], DestinationAddress=[DstIp], TargetAddress=[TgtIp], PE-VLAN=[PeVlan], CE-VLAN=[CeVlan])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/3/hwPKIRequestCertFailCmp:Requesting certificate through CMPv2 failed. (hwCMPUrl=[cmpurl], hwCMPName=[cmpname], CmpSessionName=[sessionname]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwSessionCarAttackInfo:One of the linkup sessions is detected as an attack. (Protocol=[Protocol], SourceIP=[SourceIP], DstIP=[DstIP], SourceIPv6=[SourceIPv6], DstIPV6=[DstIPV6], SourcePort=[SourcePort], DstPort=[DstPort], SourceMAC=[SourceMAC], DstMAC=[DstMAC])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpTotalLinkLoss:Link bandwidth lost totally. (TrunkIndex=[TrunkIndex], TrunkIfIndex=[TrunkIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], Reason=[ReasonCode])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM_VXLAN/2/hwVxlanMlagByPassTunnelCfg:The bypass VXLAN tunnel is not configured, and VXLAN service traffic diverted to the M-LAG devices will be discarded.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/4/hwGtlLicenseStateChange:License state changed from [hwGtlLicensePreviousState] to [hwGtlLicenseState].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProRootChanged:The root bridge of MSTP process changed. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID=[PortID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortBpduGuarded:The edge port with BPDU protection enabled will be shut down, because it received a BPDU packet that may be used to initiate an attack. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/1/isisAttemptToExceedMaxSequence:The LSP sequence number has reached the maximum value. (SysInstance=[isisSysInstance], SysLevel=[isisSysLevelIndex], LspId=[isisPduLspId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/risingAlarm:Alarm table [AlarmId] monitors [OID] with the sample type [SampleType], and the sampled alarm value [SampleValue] is greater than or equal to [Threshold].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisAreaMismatch:IS-IS received a level-1 Hello PDU whose area address is different from the local area address. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/3/hwBrdTempAlarm:The board temperature exceeded alarm threshold. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityThresholdType=[EntityThresholdType], EntityThresholdWarning=[EntityThresholdWarning], EntityThresholdCurrent=[EntityThresholdCurrent], EntityTrapFaultID=[EntityTrapFaultID], Reason=[ReasonDsp])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DCB/4/hwXQoSPfcTurnOffAlarm:The PFC function is disabled on the interface because the PFC deadlock threshold is exceeded. (interface=[ifname], lossless priority=[priority], detected number=[detectednumber], threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwLinkHeartbeatDropAlarm:The SAID PING function detected that the packet loss rate reached or exceeded the threshold. (InterfaceIfIndex=[InterfaceIfIndex], InterfaceName=[InterfaceName], SendInterfaceName=[SendInterfaceName], RecvInterfaceName=[RecvInterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgOperateCompletion:Configuration was copied. (OperationIndex=[hwCfgOperateIndex], OperationType=[hwCfgOperateType], OperationResultIndex=[hwCfgOperateResultIndex], OptTime=[hwCfgOperateTime], OptState=[hwCfgOperateState], OptEndTime=[hwCfgOperateEndTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BFD/4/hwBfdSessReachLimit:The session number in all the IO boards has reached the limit, the new session can not be created. (TotalSessionLimit=[TotalSessionLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/4/hwEvpnDiscardRoute:The EVPN instance discards the newly learned MAC and MAC/IP routes. (RouteType=[RouteType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwNomatchSnpBindTblNDPktAlarm:The number of the discarded ND packets that do not match the binding table exceeds the threshold on the interface. (Interface=[Interface], VlanID=[VlanIndex], LastDroppedSourceMac=[LastDroppedSourceMac], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwCfgUnlockConfigurationByUser:The system configuration was unlocked. (UserName=[UserName], UnlockTime=[UnlockTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/routeThresholdExceed:The number of existed routing entries exceeded the global upper threshold. (LimitType=[LimitType], AddressFamily=[AddressFamily], CurrentCount=[CurrentCount], LimitCount=[LimitCount], ThresholdCount=[ThresholdCount], ReasonType=[ReasonType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisOwnLSPPurge:ISIS received a self-originated LSP with the age being 0. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspId=[isisPduLspId], isisPduRemoteRouterID=[isisPduRemoteRouterID], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ERPS/2/hwErpsFwStateForwarding:The state of ERPS port was changed to forwarding. (RingId=[RingID], InterfaceIndex=[IfIndex], InterfaceName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisLsdbThresholdReachClear:The number of LSP has been less than the lower threshold value. (SysInstance=[IsisSysInstance], LsdbMaxLimit=[IsisLsdbMaxLimit], LsdbUpperThreshold=[IsisLsdbUpperThreshold], LsdbLowerThreshold=[IsisLsdbLowerThreshold], LsdbTotal=[IsisLsdbTotal])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewEdgePortChanged:After the edge port receives a BPDU packet, the port is no longer an edge port. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysSlaveSwitchSuccessNotification:Succeeded to run slave switch with SlaveSwitchIndex [SlaveSwitchIndex], ChassisNum[ChassisNum], SlaveSwitchSrc[SlaveSwitchSrc], SlaveSwitchDst[SlaveSwitchDst].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlItemExpire:The SnS of the cloud-based license sales item expires. Renew the license in time. (Chassis ID=[hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdBoardLimitThresholdExceed:IGMP or MLD total entries count on the board reached the upper threshold. (AddressFamily=[AddressFamily], SlotName=[SlotName], CurrentCount=[CurrentCount], LimitCount=[LimitCount], Threshold=[Threshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtNbrRestartHelperStatusChange:The helper status of the virtual neighbor changes. (VirtNbrAreaId=[VirtNbrAreaId], VirtNbrRtrId=[VirtNbrRtrId], ProcessId=[ProcessId], RouterId=[RouterId], VirtNbrRestartHelperStatus=[VirtNbrRestartHelperStatus], VirtNbrRestartHelperAge=[VirtNbrRestartHelperAge], VirtNbrRestartHelperExitReason=[VirtNbrRestartHelperExitReason], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortStateForwarding:The port has been set to forwarding state. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/3/isisAuthenticationTypeFailure:The authentication type of received PDU is different from local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPSpeedLimitAlarm:Packet speed exceeded the configured speed limit. (IfIndex=[IfIndex], SuppressValue=[SupValue], CurrentValue=[CurValue], SuppressType=[SupType], SourceIP=[SrcIp], DestinationIP=[DstIp], VpnInstance name=[VpnName], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwLocalFaultAlarm:The local fault alarm has occurred. (IfIndex=[hwPhysicalPortIfIndex], IfName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NVO3/2/IPv6VxlanTunnelDown:The IPv6 vxlan tunnel status changes. (SourceIpv6Addr=[SrcIpv6Addr], DestinationIpv6Addr=[DstIpv6Addr], TunnelStatus=[Tnl6Status])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwVtyNumExceed:The number of login users reaches the maximum VTY limit. (MaxUserNum=[MaxUserNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RMON/4/fallingAlarm:Alarm table [AlarmId] monitors [OID] with the sample type [SampleType], and the sampled alarm value [SampleValue] is less than or equal to [Threshold].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlFeatureDefaultValue:License feature has expired. (FeatureName=[hwGtlFeatureName], Reason=[hwGtlDefaultValueReason], Position=[hwGtlPosition])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AIFABRIC/4/hwInofConsistencyCheck:The configurations on the two iNOF reflectors synchronized to the client are inconsistent.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfNbrRestartHelperStatusChange:The neighbor exits from the restart helper state. (RouterId=[RouterId], NbrIpAddr=[NbrIpAddr], NbrAddressLessIndex=[NbrAddressLessIndex], NbrRtrId=[NbrRtrId], NbrRestartHelperStatus=[NbrRestartHelperStatus], NbrRestartHelperAge=[NbrRestartHelperAge], NbrRestartHelperExitReason=[NbrRestartHelperExitReason], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwBoardRemove:The board was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/3/hwRemoteFaultAlarm:The remote fault alarm has occurred. (IfIndex=[hwPhysicalPortIfIndex], IfName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-FRAME/2/hwForwardEngineFail:The forwarding engine partially failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwComponentBackupFail:Data backup between the active and standby components failed. (ComponentName=[ComponentName], Process ID=[PID], Block ID=[BlockID])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwVxlanTunnelMacLimitOverThresholdAlarm:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (SourceIpAddress=[SourceIp], DestinationIpAddress=[PeerIp], MacLimitMaxMac=[MacLimitMaxMac].)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwStorageUtilizationRisingAlarm:The storage usage exceeded the pre-set overload threshold. (TrapSeverity=[TrapSeverity], ProbableCause=[ProbableCause], EventType=[EventType], PhysicalIndex=[PhysicalIndex], PhysicalName=[PhysicalName], RelativeResource=[RelativeResource], UsageType=[UsageType], SubIndex=[SubIndex], UsageValue=[UsageValue], Unit=[Unit], UsageThreshold=[UsageThreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIUpdateLocalCertFailCmp:Updating the local certificate through CMPv2 failed. (LocalCertIssuer=[LocalCertIssuer], LocalCertSubject=[LocalCertSubject]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpPartnerMisconnect:The peer link of the LACP member interface might be incorrectly connected. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpTimeLockFail:The time lock status is failed. (hwPtpTimeLockStatus=[hwPtpTimeLockStatus], hwPtpTimeLockFailReason=[hwPtpTimeLockFailReason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/hwisisDatabaseOverload:IS-IS LSP at this node is overloaded start. (SysInstance=[hwisisSysInstance])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "HAF/4/hwBoardLeaveMaster:Board leave master state. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=Master/Slave Board Switchover.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiTcGuarded:With the TC protection enabled, if TC BPDUs were received after the number of TC BPDUs received by an instance exceeded the threshold, these TC BPDUs were processed after the TC protection time expires. (InstanceID=[InstanceID], bridgePriority=[bridgePriority])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsProbeFailed:NQA entry probe failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], RttSum=[RttSum], RTTSum2Low=[RTTSum2Low], RTTSum2High=[RTTSum2High], RTTMin=[RTTMin], RTTMax=[RTTMax], PacketOutOfSequences=[PacketOutOfSequences], Errors=[Errors], Busies=[Busies], Timeouts=[Timeouts], Drops=[Drops], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JitterOut=[JitterOut], JitterIn=[JitterIn], OWSumSD=[OWSumSD], OWSumDS=[OWSumDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgB2SOperate:Begin to back up the current configuration to the server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwUntrustedReplyPktAlarm:The number of the discarded DHCP reply packets on the untrusted interface exceeds the threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwArpsPacketCheck:Invalid packet. (SourceInterface=[InterfaceName], SourceIP=[IpAddress], SourceMAC=[MacAddress], VLAN=[PeVlan], INNER-VLAN=[CeVlan])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwMflpBdAlarm:MAC flapping detected, BdId = [BdId], Original-Port = [IfNameA], Flapping port 1 = [IfNameB], port 2 = [IfNameC]. [AlarmReason].",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfAuthFailure:A packet is received on a virtual interface from a router whose authentication key or authentication type conflicts with the local authentication key or authentication type. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSystemConfigError:A system configuration error occurs. ( EntityTrapFaultID = [EntityTrapFaultID])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfMaxAgeLsa:An LSA is aged. (RouterId=[RouterId], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpPeerRouteNumThresholdExceed:The number of routes received from the BGP peer exceeded the alarm threshold. (InstanceId=[InstanceId], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], PeerRemoteAddrType=[PeerIPAddrType], PeerRemoteAddr=[PeerIPAddr], MaxRouteNumber=[RouteLimitNum], AlarmThreshold=[RouteLimitThreshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisLSPTooLargeToPropagate:ISIS attempt to propagate an LSP which is larger than the dataLinkBlockSize for the circuit. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduLspSize=[isisPduLspSize], isisPduLspId=[isisPduLspId], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TTY/5/hwUserSshLogin:The SSH connection login successful. (UserIndex=[UserIndex], UserName=[UserName], UserIP=[UserIP], UserChannel=[UserChannel], AuthType=[AuthType], VpnInstanceName=[VpnInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/ospfIfRxBadPacket:An OSPF packet that is received on a non-virtual interface cannot be parsed. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], PacketSrc=[PacketSrc], PacketType=[PacketType], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2NbrExceedThreshold:The number of neighbors exceeds the upper of configured threshold. (hwOspfv2NbrThresholdUpper=[hwOspfv2NbrThresholdUpper])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EAP/4/DOT1XREACHMAXNUM:The number of users has reached the max number. (ifIndex=[ifIndex], PortName=[OCTET], Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwIpv6PrefixExceed:The number of IPv6 prefixes exceeded the maximum value. (PrefixCount=[PrefixCount], MaxValue=[MaxValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/traceRouteTestCompleted:TraceRoute entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], AddressType=[AddressType], Address=[Address])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortRootGuarded:The root protection port received a superior message. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/5/hwInputRateChangeOverThresholdNotice:The input rate change ratio exceeded the threshold. (IfIndex = [IfIndex], InterfaceName = [InterfaceName], ThresholdPercent = [ThresholdPercent], CurrentStatisticalPeriodRate = [CurrentStatisticalPeriodRate], LastStatisticalPeriodRate = [LastStatisticalPeriodRate])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMlagDfsPeerDown:The DFS peer status went Down. (Dfs-GroupId=[hwdfsGroupId], SystemId=[hwsysMac], Dfs-Type=[hwdfsType], PeerAddress=[hwdfsPeerAddress])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/2/hwMgmdGMPBoardLimit:Membership report message is discarded because the IGMP or MLD group membership limitation on the board is exceeded. (AddressFamily=[AddressFamily], SlotName=[SlotName], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EWM/3/hwWarrantyMissingSession:The current service period is missing. If you want to continue using it, please purchase and activate the corresponding e-warranty as soon as possible. (device type=[Type], position=[Slot], serial number=[SerialNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/1/hwBgpRouteLoopDetected:The local device has detected a BGP routing loop. (BGP instance name=[InstanceName], Vpn-instance=[Vpn-instance], Afi=[AddrFamilyAfi], Safi=[AddrFamilySafi], Address Family=[AddressFamily])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCertSucLdap:Get certificate successfully with LDAP. (hwLdapIP=[ldapip], hwLdapPort=[ldapport], hwCertAttribute=[certattribute], hwCertDN=[certdn], hwLdapVersion=[ldapversion], hwCertSaveName=[certsavename]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/1/hwOspfv3DeleteRouteByPurge:The local device deleted OSPFv3 routes advertised by other devices. Reset or isolate the device from the network. (SysProcessId=[hwOspfv3ProcessId], HostName=[hwOspfv3PurgeHostName], HostIpAddress=[hwOspfv3PurgeIpAddress], RouterID=[hwOspfv3PurgeRouterId], Area=[hwOspfv3AreaIdIndex], FlushLsaNum=[hwOspfv3FlushLsaNum], AffectedNodeNum=[hwOspfv3AffectedNodeNum], TotalNodeNum=[hwOspfv3TotalNodeNum], Interval=[hwOspfv3PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/L3VPN_MIB_TRAP_TUNNEL_UPDOWN_EVENT:The tunnel up/down event is occurred. (VpnIndex=[VpnIndex], NextHop=[NextHop], Ckey=[Ckey], TrapType=[TrapType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EVPN/2/hwEvpnMacDupVpnAlarm:MAC addresses were suppressed in an EVPN instance due to frequent MAC duplication. (EVPNInstanceName=[EVPNInstanceName], TAG=[TAG], MAC=[MAC], InterfaceName1=[InterfaceName1], InterfaceName2=[InterfaceName2], InterfaceName3=[InterfaceName3], InterfaceName4=[InterfaceName4], IPAddress1=[IPAddress1], IPAddress2=[IPAddress2], IPAddress3=[IPAddress3], IPAddress4=[IPAddress4], VcId=[VcId], EvplInstId1=[EvplInstId1], EvplInstId2=[EvplInstId2], EvplInstId3=[EvplInstId3], EvplInstId4=[EvplInstId4])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwIfMonitorInputRateRising:Interface input flow bandwidth usage exceeded the trap threshold. (Interface=[IfIndex], BandWidthUsage=[hwIfMonitorInputRatePercentage], TrapThreshold=[hwIfMonitorInputRateThreshold], InterfaceName=[InterfaceName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/vrrpTrapNewMaster:The VRRP status changed to master. (ifIndex=[ifIndex], VrId=[VrId], MasterIPAddress=[MasterIPAddress], sysName=[sysName], ifName=[ifName], ChangeReason=[ChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/hwBgpUnnumberedPeerBackwardTransition:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Ipv6Addr], InstanceId=[InstanceId], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState], LocalIfName=[LocalIfName], Reason=[Reason], Description=[Description])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfIfAuthFailure:A packet is received on a non-virtual interface from a router whose authentication key or authentication type conflicts with the local authentication key or authentication type. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], PacketSrc=[PacketSrc], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPThresholdExceedAlarm:The number of ARP entries exceeded the threshold. (entPhysicalIndex=[entPhysicalIndex], Slot name=[slotname], Threshold=[Threshold], Number of dynamic ARP entries=[DynEntries], Number of static ARP entries=[StatEntries])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PTP/2/hwPtpFrequencyLockFail:Current lock status of clock frequency synchronization failed. (hwPtpFreqLockStatus=[hwPtpFreqLockStatus])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/4/hwCfgB2STransferFail:Failed to transfer the configuration file to (index=[hwCfgBackupIndex]) server [hwCfgBackupServerIp] through [hwCfgBackupProtocol] when automatically backing up the configuration.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwOspfv2ImportNssaRouteThreshold:The number of NSSA LSAs generated when an OSPF process imports external routes exceeds the configured alarm upper threshold. (hwOspfv2ProcessIdIndex=[hwOspfv2ProcessIdIndex], hwOspfv2AreaId=[hwOspfv2AreaId], hwOspfv2Threshold=[hwOspfv2Threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/4/hwVrrpExtTrapNonMaster:The VRRP status changed between backup and initialize. (ifIndex=[ifIndex], VrId=[VrId], MasterIpAddr=[MasterIpAddr], sysName=[sysName], ifName=[ifName], CurrentState=[CurrentState], ChangeReason=[ChangeReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwCfgLockConfigurationByUser:The system configuration was locked. (UserName=[UserName], Identifier=[Identifier], LockTime=[LockTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwDhcpSnpChaddrAlarmBd:The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeds the threshold. (IfIndex=[IfIndex], Interface=[Interface], BdID=[BdID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwMflpVlanLoopAlarm:MAC flapping detected, VlanId = [VlanId], Original-Port = [IfNameA], Flapping port 1 = [IfNameB], port 2 = [IfNameC]. [AlarmReason].",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOpticalFail:The optical module failed partially. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/2/hwConfigInconsistent:Running configurations on the master and slave main control boards were inconsistent.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlCloudNearDeadline:Cloud license is near deadline, remain time is [hwGtlRemainTime] day (s).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwChassisFail:The chassis partially failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSCLOCK/4/hwClockChanged:The system UTC time is changed with UTCTime [UTCTime].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwLinkHeartbeatChangeAlarm:The SAID PING function detected that the packet modification rate reached or exceeded the threshold. (InterfaceIfIndex=[InterfaceIfIndex], InterfaceName=[InterfaceName], SendInterfaceName=[SendInterfaceName], RecvInterfaceName=[RecvInterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwIfMonitorOutputRateRising:Interface output flow bandwidth usage exceeded the trap threshold. (Interface=[IfIndex], BandWidthUsage=[hwIfMonitorOutputRatePercentage], TrapThreshold=[hwIfMonitorOutputRateThreshold], InterfaceName=[InterfaceName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpInterfaceRemTablesChange:Neighbor information of the interface was changed. (Interface=[interfaceName], Action=[action], Added=[lldpRemInserts], Deleted=[lldpRemDeletes], RemoteInterfaceName=[remInterfaceName], RemoteDeviceManageAddress=[remManageAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/1/hwOspfv2ThirdPartRouteBeDeletedByPurgeExact:OSPF routes advertised by another device were deleted. Reset or isolate the faulty device from the network. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwStrackDenyPacket:Some packets are dropped because an attack is detected. (Interface=[Interface], SourceMAC=[SourceMAC], SourceIP=[SourceIP], CVLAN=[CVLAN], PVLAN=[PVLAN], SourceIPv6=[SourceIPv6])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfLsdbApproachingOverflow:The number of AS-external LSAs in the LSDB of an OSPF process is approaching the configured maximum number.(ospfRouterId=[ospfRouterId], ospfExtLsdbLimit=[ospfExtLsdbLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CONFIGURATION/6/hwCfgChgNotify:Configuration changed. (CurrentCfgChgSeqID=[CurrentCfgChgSeqID],CfgChgSeqIDReveralCount=[CfgChgSeqIDReveralCount],CfgChgTableMaxItem=[CfgChgTableMaxItem],CfgBaselineTime=[CfgBaselineTime],CfgFlowIdTime=[CfgChgTime],CfgFlowIdAgent=[TerminalType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/2/hwVlantransExceedChipSpec:The VLAN transforms exceeds the chip specification. (ifName=[ifName], vlan begin=[vlanBgn], vlan end=[vlanEnd], priority begin=[vlanPriBgn], priority end=[vlanPriEnd], inner vlan begin=[innerVlanBgn], inner vlan end=[innervlanEnd], chip specification=[chipSpec])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPFV3/4/ospfv3NssaTranslatorStatusChange:The status of the NSSA translator changes. (RouterId=[RouterId], AreaId=[AreaId], NSSATranslatorState=[NSSATranslatorState], ProcessId=[ProcessId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPIPConflictEvent:Detected an IP address collision. (IpAddress=[IpAddr], Local MacAddress=[LocalMacAddr], Local InterfaceName=[LocalIfName], Local VLAN=[LocalPVid], Local INNER-VLAN=[LocalCVid], Received MacAddress=[RcvMacAddr], Received InterfaceName=[RcvIfName], Received VLAN=[RcvPVid], Received INNER-VLAN=[RcvCVid], Collision Type=[type])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VFS/4/hwSysSlaveHDError:The system slave HD error.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/invalid-register:PIM receives an invalid register message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvRegAddressType=[InvRegAddressType], InvRegOriginAddr=[InvRegOriginAddr], InvRegGrpAddr=[InvRegGrpAddr], InvRegRpAddr=[InvRegRpAddr], PimInstanceID=[PimInstanceID], PimInstanceName=[PimInstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IGMP/4/hwMgmdGmpLeave:Interface receives an IGMP or MLD Leave message or corresponding group timer on this interface expires. (Interface=[InterfaceName], InterfaceIndex=[InterfaceIndex], SrcStr=[SrcAddr], GrpStr=[GrpAddr], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfIfStateChange:The status of the non-virtual interface changes. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], IfState=[IfState], ProcessId=[ProcessId], AreaId=[AreaId], IfnetIndex=[IfnetIndex], LocalIfIpAddress=[LocalIfIpAddress], IfName=[IfName], InstanceName=[InstanceName], IfChgReason=[IfChgReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwIfMonitorCrcErrorRising:The CRC error is rising. (InterfaceIndex=[EntityPhysicalIndex], hwIfMonitorCrcErrorStatistics=[hwIfMonitorCrcErrorStatistics], hwIfMonitorCrcErrorThreshold=[hwIfMonitorCrcErrorThreshold], hwIfMonitorCrcErrorInterval=[hwIfMonitorCrcErrorInterval], InterfaceName=[EntPhysicalName], hwIfMonitorAllStatistics=[hwIfMonitorAllStatistics])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwOpticalUnAuthorized:The optical module was not certified by Huawei. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/2/hwFanFail:The fan partially failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], EntityOperStatus=[EntityOperStatus], Reason=[ReasonDsp])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfOriginateLsa:An LSA is generated. (RouterId=[RouterId], LsdbAreaId=[LsdbAreaId], LsdbType=[LsdbType], LsdbLsid=[LsdbLsid], LsdbRouterId=[LsdbRouterId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LCS/1/hwGtlItemNearExpire:The SnS of the cloud-based license sales item has expired. Please renew it in time. (Chassis ID = [hwGtlChassisID])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ERROR-DOWN/4/hwErrordown:Error-down occurred. (Ifindex=[IfIndex], Ifname=[IfName], Cause=[Cause])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VFS/5/hwFlhSyncSuccessNotification:Succeeded to copy file by hwFlhSyncTable with FlhSyncIndex [FlhSyncIndex], FlhSyncSrcFile [FlhSyncSrcFile], FlhSyncDstFile [FlhSyncDstFile].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPV6/2/ipv6IfStateChange:The IPv6 status changes. (ifName=[ipv6IfDescr], AdminStatus=[ipv6IfAdminStatus], OperStatus=[ipv6IfOperStatus], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfVirtIfStateChange:The status of the virtual interface changes. (VirtIfAreaId=[VirtIfAreaId], VirtIfNeighbor=[VirtIfNeighbor], ProcessId=[ProcessId], RouterId=[RouterId], VirtIfState=[VirtIfState], InstanceName=[InstanceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/hwIpv4RouteExceed:The number of IPv4 routes in the VPN instance exceeded the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], maximum value=[max])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwRequestNoTrustPktAlarm:The number of the discarded DHCP request packets exceeds the threshold on the interface because the DHCP snooping trust port is not configured or the trust port is Down. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/piminvalidjoinprune:PIM receives an Invalid Join/Prune message. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddrType=[GroupMappingAddrType], GrpAddr=[GrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddrType=[GroupMappingRPAddrType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], InvJPAddrType=[InvJPAddrType], InvJPOriginAddr=[InvJPOriginAddr], InvJPGrpAddr=[InvJPGrpAddr], InvJPRpAddr=[InvJPRpAddr], NbrIfIndex=[NbrIfIndex], NbrAddrType=[NbrAddrType], NbrAddr=[NbrAddr], NbrUpTime=[NbrUpTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/2/hwPKICrlInvalid:The crl is invalid. (CrlIssuer=[issuer], CrlStartTime=[start-time], CrlFinishTime=[finish-time])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NETCONF/5/hwNetconfServerSessionStart:The NETCONF server created a session. (UserName=[UserName], SessionId=[SessionId], IpAddress=[IpAddress], VpnName=[VpnName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NTP/4/hwNtpClientLimitExceed:NTP client number reached the limit.(Current client number=[currentnum])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/2/hwPKICACertInvalid:The CA certificate is invalid. (CACertIssuer=[issuer], CACertSubject=[subject], CACertStartTime=[start-time], CACertFinishTime=[finish-time])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProNewPortBpduGuarded:The MSTP process's edge port with BPDU protection enabled will be shut down, because it received a BPDU packet. (ProcessID=[ProcessID], InstanceID=[InstanceID], PortID1=[PortID1], PortID2=[PortID2], PortID3=[PortID3], PortID4=[PortID4], PortIDFlag=[PortIDFlag], PortState=[PortState], IfIndex=[IfIndex], PortName=[PortName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstPVNumExceeded:The number of PVs running VBST has exceeded the upper limit, this may lead to high cpu usage and device hosting. (entPhysicalIndex=[entPhysicalIndex], entPhysicalName=[entPhysicalName], hwVbstMaxPVNum=[hwVbstMaxPVNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwUsedIPReachThreshold:The number of used addresses exceeds alarm threshold. (PoolName=[poolname], Threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLEPGGroupMemberMacBdAlarm:Failed to add BD-MAC member to traffic-segment endpoint group. (Traffic-segment id=[hwXAclEpgGroupMemberMacAlarmSegmentId], MAC=[hwXAclEpgGroupMemberMacAlarmMacAddress], BdId=[hwXAclEpgGroupMemberMacAlarmBdId], Slot=[hwXAclEpgGroupMemberMacAlarmSlotid])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LACP/2/hwLacpPDUChange:The LACP member interface's status changed from selected to unselected due to the PDU change. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName], OldPduInfo=[OldPduInfo], NewPduInfo=[NewPduInfo], ReasonCode=[ReasonString])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCrlSucLdap:Get crl successfully with LDAP. (hwLdapIP=[ldapip], hwLdapPort=[ldapport], hwCrlAttribute=[crlattribute], hwCrlDN=[crldn], hwLdapVersion=[ldapversion]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TELNET/3/hwTelnetLoginFailed:Users failed to login telnet server too frequently. (failed times=[hwUserInfoLoginFailedTimes], statistic period=[hwUserInfoStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSResourceAlarm:Services fail to be delivered due to insufficient resources. (slot ID = [hwXQoSResourceAlarmSlotID], resource type = [hwXQoSResourceAlarmType], service type = [hwXQoSResourceAlarmServiceType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/2/hwOspfv2ThirdPartRouteBeDeletedByPurgeInexact:OSPF routes advertised by another device were deleted, and the possibly faulty device did not support OSPF flush LSA source trace. Log in to the possibly faulty device. If the device is deleting routes, reset or isolate it from the network. Otherwise, check other devices. Neither of the devices displayed in the display ospf flush-source-trace analysis-info command output is the faulty device. (SysProcessId=[hwOspfv2ProcessIdIndex], HostName=[hwOspfv2PurgeHostName], HostIpAddress=[hwOspfv2PurgeIpAddress], RouterID=[hwOspfv2PurgeRouterId], Area=[hwOspfv2AreaId], FlushLsaNum=[hwOspfv2FlushLsaNum], AffectedNodeNum=[hwOspfv2AffectedNodeNum], TotalNodeNum=[hwOspfv2TotalNodeNum], RuledOutDeviceNum=[hwOspfv2RuledOutDeviceNum], Interval=[hwOspfv2PurgeStatPeriod])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/2/hwIpv6RouteExceed:The number of IPv6 routes in the VPN instance exceeded the maximum value. (VPN instance name=[vpnName], number of existing routes=[current], maximum value=[max])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpiPortStateDiscarding:The port has been set to discarding state. (InstanceID=[InstanceID], PortIndex=[PortIndex], IfIndex=[IfIndex], PortName=[PortName], PwName=[PwName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DCB/4/hwXQoSPfcRxRateAlarm:The rate of received PFC frames exceeds the threshold. (interface=[ifname], lossless priority=[priority], received rate=[receivedrate], threshold=[threshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKGM/2/hwSysImageDamagedNotification:The software package is damaged.(PhysicalName=[PhysicalName],PackageName=[PackageName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NTP/3/hwNtpSynchronizationFailure:NTP synchronization state changed.(State = [state], SynchronizationSourceAddress = [source])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/hwOspfv2IntraAreaRouteridConflict:Router IDs conflict in an intra area. (ProcessId=[ProcessId], AreaId=[AreaId], SelfIfnetIndex=[SelfIfnetIndex], NbrIpAddr=[NbrIpAddr], RouterId=[RouterId], NbrRtrId=[NbrRtrId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/3/hwXQOSQueueBufferOverrunAlarm:The used buffer of queue is over the configured threshold (QueueID = [hwXQOSQueueBufferAlarmQueueID], interface = [hwXQOSQueueBufferAlarmIfName], slot = [hwXQOSQueueBufferAlarmSlotStr], current used buffer cell = [hwXQOSQueueBufferAlarmUsedCell], current used buffer length= [hwXQOSQueueBufferAlarmUsedLength] KBytes, current threshold = [hwXQOSQueueBufferAlarmThreshold] percent, current discard = [hwXQOSQueueBufferAlarmDiscard]).",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKICrlNearlyExpired:The crl is nearly expired. (CrlIssuer=[issuer], CrlStartTime=[start-time], CrlFinishTime=[finish-time])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsOWDThresholdNotificationDS:The OWD-DS of the NQA entry exceeded the configured threshold. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], Threshold=[Threshold], Index=[Index], RttMax=[RttMax], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], OWDOverThresholdsDS=[OWDOverThresholdsDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLEPGGroupMemberV6Alarm:Failed to add IPv6 member to traffic-segment endpoint group. (IPv6 address = [hwXAclEpgGroupMemberV6AlarmIPv6Address], Mask = [hwXAclEpgGroupMemberV6AlarmIPv6Mask], VpnInstanceName = [hwXAclEpgGroupMemberV6AlarmVpnInstanceName], Traffic-segment id = [hwXAclEpgGroupMemberV6AlarmSegmentId], Slot = [hwXAclEpgGroupMemberV6AlarmSlotid])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VCMU/2/hwFanRemove:The fan module was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], EntityOperStatus=[EntityOperStatus], Reason=[ReasonDsp])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMlagPortDown:M-LAG member interfaces with the same M-LAG ID on both M-LAG devices are Down. (M-LAG ID=[hwMlagInfId], LocalIfname=[hwMlagInfName], LocalSystemMAC=[hwLocalSysID], RemoteSystemMAC=[hwRemoteSysID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ARP/2/hwEthernetARPMACIPConflict:MAC and IP address conflict. (Conflict interface=[LogicIfName], Conflict MAC address=[ConflictMAC], Conflict IP address=[ConflictIP], Received packet's destination MAC address=[DstMAC], Received packet's destination IP address=[DstIP], Received packet's VLAN=[Vlan], Received packet's CE-VLAN=[Cevlan], Input interface=[PhyIfName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwPDRouteExceed:The number of PD route for DHCPv6 relay reached the maximum.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwCardInvalid:The card unavailable. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/2/hwL2mcBoardGMPEntryLimit:The number of Layer 2 multicast entries on the board reached the upper limit. (AddressFamily=[AddressFamily], SlotName=[SlotName], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMflpBdPeriodicTrap:MAC flapping detected, BdId = [BdId], Original-Port = [IfNameA], Flapping port 1 = [IfNameB], port 2 = [IfNameC]. [AlarmReason].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisProtocolsSupportedMismatch:The protocol of received Protocol TLV is mismatched with local configuration. (isisSysInstance=[isisSysInstance], isisSysLevelIndex=[isisSysLevelIndex], isisCircIndex=[isisCircIndex], isisCircIfIndex=[isisCircIfIndex], isisPduProtocolsSupported=[isisPduProtocolsSupported], isisPduLspId=[isisPduLspId], isisPduFragment=[isisPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsTestCompleted:NQA entry test completed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], RttSum=[RttSum], RTTSum2Low=[RTTSum2Low], RTTSum2High=[RTTSum2High], RTTMin=[RTTMin], RTTMax=[RTTMax], PacketOutOfSequences=[PacketOutOfSequences], Errors=[Errors], Busies=[Busies], Timeouts=[Timeouts], Drops=[Drops], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], MaxDelaySD=[MaxDelaySD], MaxDelayDS=[MaxDelayDS], JitterOut=[JitterOut], JitterIn=[JitterIn], OWSumSD=[OWSumSD], OWSumDS=[OWSumDS])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/traceRouteTestFailed:TraceRoute entry test failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], AddressType=[AddressType], Address=[Address])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwIpv6PrefixThresholdExceed:The number of IPv6 prefixes exceeded the threshold. (PrefixCount=[PrefixCount], MaxValue=[MaxValue], ThresholdLowerLimit=[ThresholdLowerLimit], ThresholdUpperLimit=[ThresholdUpperLimit])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "BGP/2/bgpBackwardTransNotification:The BGP FSM moves from a higher numbered state to a lower numbered state. (BgpPeerRemoteAddr=[PeerIpv4Addr], BgpPeerLastError=[PeerLastError], BgpPeerState=[PeerState],VpnInstance=[VpnInstance])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HIPS/3/hwHipsAbnormalBehaviorDetected:The abnormal behavior has been detected by HIPS. (eventCategory=[eventCategory], eventType=[eventType], level=[level], occurTime=[occurTime], result=[result], user=[user], visitorIp=[visitorIp], evidence=[evidence], slot=[slot], card=[card], cpu=[cpu], barcode=[barcode])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/6/ospfLsdbOverflow:The number of AS-external LSAs in the LSDB of an OSPF process reaches the configured maximum number. (ospfRouterId=[ospfRouterId], ospfExtLsdbLimit=[ospfExtLsdbLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/2/isisAdjacencyChange:ISIS adjacency state change. (SysInstance=[IsisSysInstance], SysLevel=[IsisSysLevelIndex], CircIndex=[IsisCircIndex], CircIfIndex=[IsisCircIfIndex], LspId=[IsisPduLspId], AdjState=[IsisAdjState], IfIndex=[IfIndex], IfName=[IfName], Reason=[HwIsisAdjChgReason], SubReason=[HwIsisAdjChgSubReason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwRadiusAcctServerDown:The communication with the RADIUS accounting server fails. (IpAddress=[IpAddress], Vpn-Instance=[Vpn-Instance])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/4/pimrpmappingchange:The RP changes. (GroupMappingOrigin=[GroupMappingOrigin], GroupMappingAddressType=[GroupMappingAddressType], szGrpAddr=[szGrpAddr], GrpPfxLen=[GrpPfxLen], GroupMappingRPAddressType=[GroupMappingRPAddressType], RPAddr=[RPAddr], GroupMappingPimMode=[GroupMappingPimMode], Precedence=[Precedence])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwCpcarAutoPortDefendAlarm:Auto port defend detected in slot [SlotId]. (Protocol=[Protocol], Interface=[IfName], Reason=[ReasonDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMLagSynConnectivityCheckFailed:The connectivity check of the M-LAG synchronization channel fails. (Slot = [slotStr], Reason : [reasonDescription])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsProbeFailed:NQA entry probe failed. (OwnerIndex=[OwnerIndex], TestName=[TestName], TargetAddressType=[TargetAddressType], TargetAddress=[TargetAddress], OperStatus=[OperStatus], Index=[Index], HopIndex=[HopIndex], AddressType=[AddressType], Address=[Address], CompletionTimeMin=[CompletionTimeMin], CompletionTimeMax=[CompletionTimeMax], SumCompletionTime=[SumCompletionTime], ProbeResponses=[ProbeResponses], SentProbes=[SentProbes], SumCompletionTime2Low=[SumCompletionTime2Low], SumCompletionTime2High=[SumCompletionTime2High], LastGoodProbe=[LastGoodProbe], LastGoodPath=[LastGoodPath])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwStorageDevRemove:The storage device was removed. (EntPhysicalName=[EntPhysicalName], hwStorageDevName=[hwStorageDevName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfIfConfigError:A packet is received on the non-virtual interface from a router whose configuration conflicts with the local configuration. (RouterId=[RouterId], IfIpAddress=[IfIpAddress], AddressLessIf=[AddressLessIf], PacketSrc=[PacketSrc], ConfigErrorType=[ConfigErrorType], PacketType=[PacketType], ProcessId=[ProcessId], AreaId=[AreaId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFlowControlDeadLockAlarm:The port continuously received a large number of pause frames when it did not forwad packets. (IfIndex=[hwPhysicalPortIfIndex], IfName=[hwPhysicalPortName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwBootloaderPwdEmpty:The password of bootloader is empty. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/coldStart:OID [oid] coldStart.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLEPGEnableAlarm:Failed to enable traffic-segment. (slot = [hwXACLEPGEnableAlarmSlotid])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/6/hwNmsHeartBeat:NMSHeartbeat was sent successfully.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwSysPatchDamagedNotification:The patch package running on a board was damaged.(PhysicalName=[PhysicalName], PatchName=[PatchName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwLinkHeartbeatChangeAlarm:The SAID PING function detected that the packet modification rate reached or exceeded the threshold. (InterfaceIfIndex = [InterfaceIfIndex], InterfaceName = [InterfaceName], SendInterfaceName = [SendInterfaceName], RecvInterfaceName = [RecvInterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "M-LAG/4/hwMLagPeerlinkSingleCard:All up member interfaces of the peer-link are located on the same subcard.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwLinkHeartbeatDropAlarm:The SAID PING function detected that the packet loss rate reached or exceeded the threshold. (InterfaceIfIndex=[InterfaceIfIndex], InterfaceName=[InterfaceName], SendInterfaceName=[SendInterfaceName], RecvInterfaceName=[RecvInterfaceName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DAD/1/hwDadConflictDetect:Dual-active scenario is detected.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDM/4/hwStrackIfVlanInfo:Attack occurred.(Interface=[Interface],CVLAN=[CVLAN], PVLAN=[PVLAN], EndTime=[EndTime], TotalPackets=[TotalPackets])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSMulticastPktsDiscardAlarm:The outgoing multicast traffic in the slot is discarded.(Slot=[hwXQoSMulticastPktsDiscardAlarmSlotid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/6/hwRadiusAcctServerUp:The communication with the RADIUS accounting server is resumed. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackMemberLimit:The number of stack members has reached the upper limit and new members failed to join. (hwStackMemberThreshold=[hwStackMemberThreshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SMLKTRAP/4/hwSmartLinkInactiveLinkFail:Link port of smart link group was abnormal. (LinkStatus=[LinkStatus],InterfaceName=[IfIndex],GroupID=[SmlkGrpID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/6/hwTrunkMemberChange:Eth-Trunk member interface change. (Type=[hwType], TrunkIfIndex=[hwEthTrunkIfIndex], TrunkName=[hwTrunkName], PortIfIndex=([hwPortIfIndexList]), PortName=([hwPortNameList]))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwAutoDiagnoseAlarm:The AutoDiagnose system detects that the device is faulty. (Reason = [hwAutoDiagnoseReasonId], Description : [hwReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwBiosOrBootloaderPwdError:The BIOS/BootLoader menu password is not set or is the default password.(EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMLagHeartLost:The DFS dual-active detection message is lost. Check the source address configuration or link configuration of the local or remote switch.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/hwMplsLdpMultiLinkCfgInconsistent:MPLS LDP multi-link or local-remote adjacencys configurations are inconsistent, LDP Session or LSP maybe interrupts. (VrfName=[VrfName], PeerLsrId=[PeerLsrId], LocalLsrId=[LocalLsrId], ConfigIfName=[ConfigIfName], ConfigRmtPeerIp=[ConfigRmtPeerIp], ConfigType=[ConfigType], EffectKa=[EffectKa], EffectTa=[EffectTa], EffectLam=[EffectLam])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SMLKTRAP/4/hwSmartLinkGroupEnable:Smart link group [SmlkGrpID] was [EnabledStatus].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/2/hwDhcpv6SnpBindTblExhaust:The number of DHCPv6 Snooping binding entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMLagConsistencyCheckType1:The two switches in the M-LAG have different [type] configurations. Run the display dfs-group consistency-check command to check details.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwXQoSStormSuppressSlotAlarm:Packet loss occurred in the slot because of storm suppression.(Slot=[hwXQoSStormSuppressSlotAlarmSlot])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMacHashConflict:A hash conflict occurs in MAC addresses.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelChangeBw:The bandwidth of the tunnel has changed. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], TunnelIfIndex=[TunnelIfIndex], TunnelPreBandwidth=[TunnelPreBandwidth], TunnelNextBandwidth=[TunnelNextBandwidth], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwPhyStackPortIsDown:The stack member port's link state is down. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/6/hwRadiusAuthServerUp:The communication with the RADIUS authentication server is resumed. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IPV4/2/hwNvo3VxlanVniConflict:The VNI bound to the local BD conflicts with the VNI bound to the VPN advertised by the remote end to the local end. (Conflicting VNI=[hwVxlanVni])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/1/hwStackMemberPortLoopAlarm:A loop occurred in the stack because error packets were generated on the device. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/3/hwAllocatedIpLimitReachAlarm:The number of allocated IPv6 addresses reached the limit. (LimitValue=[LimitValue])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmUnexpectedMEP:MEP received a CCM with unexpected MEP. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FCOE/4/hwFCoEConnectVfNum:The number of VF_Ports has already reached the maximum. (VF_Port quantity= [vfPortNum])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwPatchErrorTrap:Failed to operate patch. (PatchErrorIndex =[PatchErrorIndex], SlotIndex=[SlotIndex], PkgIndex =[PkgIndex], ErrorCode=[ErrorCode], PkgName=[PkgName] )",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelHotstandbyDown:The hot-standby LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/4/hwBoardBecomeMaster:Board changed to the master state. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=Master/Slave Board Switchover.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/3/hwStackMemPortAutoRepairDownAlarm:An entry exception is detected on a stack member interface, and automatic repair triggers the physical interface to go Down. (hwStackPortName=[hwStackLocalIfName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDM/4/hwBaseSecurityAntiAttackRateRising:The rate of flooding packets for anti-attack exceeds the alarm threshold is detected to slide into a warning state. (AntiAttackType=[AntiAttackType], Threshold=[Threshold]bps, ActualRate=[ActualRate]bps)",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwPWVcDown:The status of the PWE3 VC turned DOWN. (VcId=[VcId], VcType=[VcType], PeerAddress=[PeerAddress], InterfaceIndex=[InterfaceIndex], VcInboundLabel=[VcInboundLabel], VcOutboundLabel=[VcOutboundLabel], SecondaryPw=[SecondaryPw], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], SysUpTime=[SysUpTime], InterfaceName=[InterfaceName], SwitchVcId=[SwitchVcId], TunnelPolicyName=[TunnelPolicyName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSPfcDeadLockAlarm:PFC deadlock is detected. (interface=[ifname], lossless priority=[priority], detected number=[detectednumber], recovered number=[recoverednumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/2/hwXQosQueueExcepAlarm:Queue exception leads to non forwarding in slot [SlotId]. (Protocol=[Protocal])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwCpuFail:A fault occurred in the CPU. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/4/hwWholeFwdResThresholdExceed:The whole device forwarding engine resources exceeded the threshold. (EntityPhysicalIndex=[EntiyPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], ReasonId=[ReasonId], ReasonDescription=[Reason])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS-TE/2/hwAddrConflictNode:RSVP tunnels failed to be established due to path loop or the address conflict. Check the involved node. (ConflictAddrNode=[nodeAddr])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/5/hwmplsldpvirtualtunneldown:The LDP virtual tunnel went Down. (LdpVirtualTunnelFEC=[LdpVirtualTunnelFEC])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwUntrustedReplyPktAlarm:The number of the discarded DHCP reply packets on the untrusted interface exceeded the threshold. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanId], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/2/hwStackSipPortSingleLinkAlarm:There is only one available link between SIP ports in the out-of-band CSS. (hwStackMemberId=[hwStackMemberId])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcGlobalEntryThresholdExceed:The total number of global multicast groups exceeded the upper threshold. (AddressFamily=[AddressFamily], LimitType=[LimitType], CurrentNumber=[CurrentNumber], LimitNumber=[LimitNumber], Threshold=[Threshold]%)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwCmuRemove:The CMU was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelHSBSwitch:Main LSP of Tunnel switches to backup LSP in HSB. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LDT/4/hwLdtPortLoop:Loopback existed on the port. (ifname=[ifname], vlan=[vlanid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/2/hwVsDiskFullAlarm:The disk usage exceeded the overload threadhold. (StorageSpace=[StorageSpace], StorageSpaceFree=[StorageSpaceFree], StorageName=[StorageName])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/hwMplsLdpPeerAddressCountExceed:The peer address count reaches the upper limit. (PeerLsrId=[PeerLsrId], VrfName=[VrfName], AddressTotalCount=[AddressTotalCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/2/hwMplsLdpLastLocalAdjDown:The last local adjacency in the local-and-remote LDP session went Down because the Hello Hold timer expired. (VrfName=[VrfName], PeerLsrId=[PeerLsrId], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/5/hwPatchUpdateTrap:The patch with slot [PatchSlotIndex], patch index [PatchIndex], version [PatchVersion] and type [PatchType] has updated to the state [PatchState].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmUnexpectedMAC:MEP received a CCM with unexpected MAC address. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VIRTUAL-PERCEPTION/2/hwVpVmDownloadProfileFault:Failed to download the VM profile. (VMVlan=[VMVlan], VMMAC=[VMMAC], ProfileID=[ProfileId], IfIndex=[IfIndex], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FCOE/4/hwFCoEVLanError:A FIP VLAN notification packet is received on the interface, that the VLAN in the packet is not a FCoE VLAN. (interface name = [IfName], VLAN = [vlanId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmUnexpectedPeriod:MEP received a CCM with unexpected period. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwL2ProtocolTunnelDropThresholdRaising:The number of the protocol transmit on the port reach the drop threshold.(IfName=[ifname], ProtocolName=[protocolname], DropThreshold=[dropthreshold])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/3/hwEthernetARPGateWayDuplicateAlarm:Gateway IP address is counterfeited. (Interface Name = [hwEthernetARPGateWayIfName], Port Name = [hwEthernetARPGateWayPortName], IP Address = [hwEthernetARPGateWayIP])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwSysImageErrorNotification:The next startup image package is error. (imageIndex=[imageIndex], curImageName=[curImageName], nextImageName=[nextImageName], errReason=[errReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRILL/3/trillAuthenticationFailure:The authentication password of received PDU is different from local configuration. (trillSysInstance=[trillSysInstance], trillCircIndex=[trillCircIndex], trillCircIfIndex=[trillCircIfIndex], trillPduFragment=[trillPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/mplsTunnelDown:Tunnel status changes to Down. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], OutIfIndex=[OutIfIndex], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], TunnelName=[TunnelName], OutIfName=[OutIfName], SubReason=[SubReason], Reason=[DownReason], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwXQoSStormControlAlarm:Rate of packets exceeded the storm control threshold. (IfIndex=[hwXQoSStormControlIfIndex], IfName=[hwXQoSStormControlIfName], Type=[hwXQoSStormControlType], Threshold=[hwXQoSStormControlThreshold], Mode=[hwXQoSStormControlMode], Action=[hwXQoSStormControlActionName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampControlSessionNumExceed:The number of TWAMP control session is out of device capability.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelPrimaryDown:The primary LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpPktRateAlarm:The rate of DHCP packets exceeded the speed limit. (DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwCpcarReduceCarAlarm:The CPU usage is high, and the CAR values of some queues decrease in slot [SlotId].",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SMLKTRAP/4/hwSmartLinkLinkSwitch:Smart link group [SmlkGrpID] status turned to [SmlkGrpStatus].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DAD/4/hwDadPortProtocolAlarm:The protocol status of the dual-active port is down.(hwDadDetectPort=[hwDadDetectPort])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwEcmpMemberLimitOverThresholdAlarm:The number of next hops to which routes recurse exceeds the device capability. During route convergence, load balancing may fail on some links. (Slot=[hwFwdResLackSlotStr])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsLspThresholdExceed:The lsp count exceeds the threshold. (hwMplsLspProtocol=[LspProtocol], hwMplsLspCurrentCount=[LspCurrentCount], hwMplsLspThreshold=[LspThreshold], hwMplsLspTotalCount=[LspTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpSnpChaddrAlarm:The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeded the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanId], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackMemberAdd:The stack member device joined in. (hwStackIdIndex=[hwStackIdIndex], hwStackId=[hwStackId], hwStackMacAddress=[hwStackMacAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSRcyPortPktsDropAlarm:Recycle port has packets dropped.(Port=[hwXQoSRcyPortPktsDropAlarmPortId], SlotId=[hwXQoSRcyPortPktsDropAlarmSlotId], ChipId=[hwXQoSRcyPortPktsDropAlarmChipId])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMacLimitOverThresholdAlarm:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (IfName=[IfName], Vlan=[VLANID], MacLimitMaxMac=[MacLimitMaxMac], Vlan id 0 indicates that the limit alarm is not configured in the VLAN.)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackConfigDifferent:The stack configuration is inconsistent. (hwStackId=[hwStackId], hwStackReason=[hwStackReason], hwStackIdIndex=[hwStackIdIndex])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwAllocatedIpThresholdReachAlarm:The number of allocated IPv6 addresses reached the threshold. (AlarmThreshold=[Threshold])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwBrdTempAlarm:The board temperature exceeded the upper alarm threshold. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityThresholdType=[EntityThresholdType], EntityThresholdCritical=[EntityThresholdCritical], EntityThresholdCurrent=[EntityThresholdCurrent], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwBoardlowmemoryoverload:The low-end memory usage exceeds 95 percent. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/1/hwStackLogicStackPortLinkErr:The interface Stack-Port was linked invalidly. (hwStackLocalIfName=[hwStackLocalIfName], hwStackPeerIfName=[hwStackPeerIfName], Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelHSBResume:Main LSP of Tunnel resumes from backup LSP in HSB. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/2/hwDhcpSnpBindTblExhaust:The number of DHCP Snooping binding entries reached the upper limit. (Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRILL/2/trillNicknameConflict:TRILL local nickname is conflicted and inhibited. (LocalSysId=[hwTrillLocalSysId], ConflictNickname=[hwTrillConflictNickname], LocalPriority=[hwTrillLocalPriority])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/5/hwSumUpgradeSuccess:For system [sysIndex], upgrade [CurrentPackageVersion] successfully.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsResourceTotalCountExceed:The number of used MPLS resources reached the maximum number. (hwMplsResourceType=[ResourceType], hwMplsResourceTotalCount=[ResourceTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/rm_mib_trap_tnlgroup_down:The status of the tunnel group changed to Down. (Destination=[Destination], TunnelPolicy=[TunnelPolicy])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/3/hwGlobalAllocatedIpLimitReachAlarm:The number of globally assigned IPv6 addresses reached the limit. (LimitValue=[LimitValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackMemberLeave:The stack member device left. (hwStackIdIndex=[hwStackIdIndex], hwStackId=[hwStackId], hwStackMacAddress=[hwStackMacAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LDP/1/Session-Down-MIB:The LDP session status is Down. (PeerLsrId=[PeerLsrId], VrfName=[VrfName], SessionType=[SessionType], IfName=[IfName], SubReason=[SubReason], Reason=[Reason])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSIngressAgingDiscardAlarm:Traffic in the slot ingress buffer is discarded for no schedule. (Slot=[hwXQoSIngressAgingDiscardAlarmSlotid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/5/hwStackLinkUp:The interface Stack-Port is up. (StackPortName=Stack-Port[hwStackPortStackId]/[hwStackPortId], hwStackPortStatus=[hwStackPortStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwCpcarDropPacketAlarm:Rate of packets to cpu exceeded the CPCAR limit in slot [SlotId]. (Protocol=[Protocol], PPS/CBS=[Cir]/[Cbs], ExceededPacketCount=[DropPacketNum])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EFM/5/loopbackfailed:Interface starts loopback failed. (IfIndex=[IfIndex],IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackLinkLimitAlarm:The number of STACK links has reached the alarm threshold. (hwStackLocalIfName=[hwStackLocalIfName], hwStackCurrentLinkNum=[hwStackCurrentLinkNum], hwStackLinkAlarmThreshold=[hwStackLinkAlarmThreshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsResourceThresholdExceed:The number of used MPLS resources exceeded the threshold. (hwMplsResourceType=[MplsResourceType], hwMplsResourceCurrentCount=[ResourceCurrentCount], hwMplsResourceThreshold=[ResourceThreshold], hwMplsResourceTotalCount=[ResourceTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRILL/6/hwTrillLspRemainingLifetimeRefresh:TRILL receive LSP with small Remaining Lifetime. (trillSysInstance=[hwTrillInstanceID], ifIndex=[ifIndex], ifName=[IfName], trillAdjSysID=[hwTrillSysID], trillPduLSPid=[hwTrillPduLspId], trillRemainingLifetime=[hwTrillRemainingLifetime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSUnicastPktsCongestionInterfaceAlarm:The interface was congested.(Interface=[hwXQoSUnicastPktsCongestionInterfaceAlarmIfName], Direction=[hwXQoSUnicastPktsCongestionInterfaceAlarmDirection])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_RSVP/2/hwRsvpTeAddrConflict:The IP address conflicted with that of other devices. (ConflictAddr=[ipaddr], SuspiciousAddr1=[suspiciousAddr1], SuspiciousAddr2=[suspiciousAddr2], SuspiciousAddr3=[suspiciousAddr3], SuspiciousAddr4=[suspiciousAddr4], SuspiciousAddr5=[suspiciousAddr5], SuspiciousAddr6=[suspiciousAddr6], SuspiciousAddr7=[suspiciousAddr7], SuspiciousAddr8=[suspiciousAddr8])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "PIM/4/hwPimGlobalTypeOifThresholdExceed:The number of outgoing interfaces in global multicast routing entries reached the upper alarm threshold. (LimitType=[LimitType], AddressFamily=[AddressFamily], LimitCount=[LimitCount], ThresholdCount=[ThresholdCount], ReasonType=[ReasonType])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRILL/3/trillAuthenticationTypeFailure:The authentication type of received PDU is different from local configuration. (trillSysInstance=[trillSysInstance], trillCircIndex=[trillCircIndex], trillCircIfIndex=[trillCircIfIndex], trillPduFragment=[trillPduFragment], ifIndex=[ifIndex], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwPortSecRcvInsecurePktAlarm:Interface([IfIndexA]) receives packets with non-secure source mac-address. (IfName=[IfName], IfIndex=[IfIndexB], Action=[Action](1:restrict;2:protect;3:error-down))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwBoardFwdResLack:The board forwarding engine resources were overloaded. (EntityPhysicalIndex=[EntityPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Slot=[SlotStr], Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/1/hwFIBOverloadForward:The interface board is in the overload forwarding state because the FIB module is overloaded. (EntityPhysicalIndex=[EntityPhysicalIndex], HwBaseTrapSeverity=[HwBaseTrapSeverity], HwBaseTrapProbableCause=[HwBaseTrapProbableCause], HwBaseTrapEventType=[HwBaseTrapEventType], HwFibOverloadModule=[HwFibOverloadModule], entPhysicalName=[entPhysicalName])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsInsecureAlgorithm:An insecure encryption algorithm is used, which has security risks. (Feature Name=[FeatureName], Algorithm Name=[AlgorithmName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/4/hwRadiusAuthServerDown:The communication with the RADIUS authentication server fails. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwBoardFwdMsgCongest:The message forwarding on the board is congested. (SlotName=[SlotName], FeNodeId=[FeNodeId], ReasonId=[ReasonId], ReasonDesc=[ReasonDesc])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SYSTEM/4/hwSysIssuNotification:System upgrade with IssuState [IssuState], IssuCdtCheck [IssuCdtCheck].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MRM/2/hwMcastEntryExceed:Multicast routing total entries of all instances cannot be created because the limit is reached. (LimitType=[LimitType], AddressFamily=[AddressFamily], LimitCount=[LimitCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FCOE/4/hwFCoELoginVnNum:The number of online VN_Ports mapping the VF_Port has already reached the maximum (instance name=[instanceName] , VF_Index=[vfPort] , VN_Port quantity =[vnPortNum] ).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FCOE/4/hwFCoEPortLoseVlan:The FCoE VLAN that it is configured on the interface is not the same as the VLAN in the packet. (interface name = [IfName], VLAN = [vlanId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/3/hwSrPrefixSidConflict:The prefix-sid conflict is detected. (SrProtocol=[hwSrProtocol], SrProcessId=[hwSrProcessId], SrPrefixSid=[hwSrPrefixSid], SrPrefixAddress=[hwSrPrefixAddress], SrPrefixAddressMask=[hwSrPrefixAddressMask], SrConflictType=[hwSrConflictType], SrConflictState=[hwSrConflictState])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "SMLKTRAP/4/hwSmartLinkGroupDisable:Smart link group [SmlkGrpID] was [EnabledStatus].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsDynamicLabelThresholdExceed:The dynamic label usage exceeds the threshold, which will affect the creation of BGP/LDP/RSVPTE/MPLS VPNs. (hwMplsDynamicLabelTotalCount=[DynamicLabelTotalCount], hwMplsDynamicLabelCurrentCount=[DynamicLabelCurrentCount], hwMplsDynamicLabelThresholdUpperLimit=[DynamicLabelThresholdUpperLimit], hwMplsDynamicLabelThresholdLowerLimit=[DynamicLabelThresholdLowerLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwBdMacLimitOverThresholdAlarm:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (Bd=[BdId], MacLimitMaxMac=[MacLimitMaxMac].)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EFM/3/dyinggasp:Remote DyingGasp Event occurred. (IfIndex=[IfIndex], RemoteMacAddress=[RemoteMacAddress], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVplsVcDown:The status of the VPLS VC turned DOWN. (VsiName=[VsiName], PwId=[PwId], RemoteIp=[RemoteIp], PwType=[PwType], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], SysUpTime=[SysUpTime], TunnelPolicyName=[TunnelPolicyName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDM/4/hwStrackUserInfo:Attack occurred.(Interface=[Interface], SourceMAC=[SourceMAC], CVLAN=[CVLAN], PVLAN=[PVLAN], EndTime=[EndTime], TotalPackets=[TotalPackets])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwStackMacInconsistence:The stack system's MAC address is not the manufacture MAC address of any member device.(hwStackSystemMac=[hwStackSystemMac])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwXQoSStormControlTrap:StormControlAlarm. (hwXQoSStormControlIfIndex=[uiIfIndex], hwXQoSStormControlBroadcastMinRate=[uiBcMinRate], hwXQoSStormControlBroadcastMaxRate=[uiBcMaxRate], hwXQoSStormControlMulticastMinRate=[uiMcMinRate], hwXQoSStormControlMulticastMaxRate=[uiMcMaxRate], hwXQoSStormControlInterval=[uiStormInterval], hwXQoSStormControlStatus=[uiStormStatus], hwXQoSStormControlUnicastMinRate=[uiUcMinRate], hwXQoSStormControlUnicastMaxRate=[uiUcMaxRate], hwXQoSStormControlBroadcastMode=[uiBcMode], hwXQoSStormControlMulticastMode=[uiMcMode], hwXQoSStormControlUnicastMode=[uiUcMode], hwXQoSStormControlUnknownUcMode=[uiUnknownUcMode], hwXQoSStormControlUnknownUnicastMinRate=[uiUnknownUcMinRate], hwXQoSStormControlUnknownUnicastMaxRate=[uiUnknownUcMaxRate],hwXQoSStormControlIfName=[IfName],hwXQoSStormControlType=[aucStormType],hwXQoSStormControlActionName=[aucActionName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/3/hwDot1agCfmRDI:MEP received a CCM with RDI flag set. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwFanRemove:The fan module was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/2/hwMLagPeerlinkSingleLpu:All peer-link member interfaces in the Up state reside on the same LPU.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/mplsTunnelReoptimized:Tunnel Re-Optimized. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], LspRole=[LspRole], WorkingLsp=[WorkingLsp], LspProtocolStatus=[LspProtStatus], NewLspPath=[NewLspPath], OldLspPath=[OldLspPath], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwCpcarAutoPortDefendAlarm:Port-based automatic local attack defense was detected in slot [SlotId]. (Protocol=[Protocol], Interface=[IfName], Reason=[ReasonDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/4/hwVplsVcStatusChange:The status of the VPLS VC changed. (VsiName=[VsiName], PwId=[PwId], RemoteIp=[RemoteIp], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], HWPwState=[HWPwState], HWPwWorkingState=[HWPwWorkingState], SysUpTime=[SysUpTime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwPowerRemove:The power module was removed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMlagDiffVersionOrBoardType:The versions or board type of the devices at both ends of the M-LAG system are inconsistent. (LocalVersion=[hwLocalVersion], LocalBoardType=[hwLocalBoardType], RemoteVersion=[hwRemoteVersion], RemoteBoardType=[hwRemoteBoardType])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMacUsageRaisingThreshold:MAC usage reached the Threshold.(PhysicalName=[entPhysicalName], MacEntityUsage=[hwMacEntityUsage], MacEntityUsageThreshold=[hwMacEntityUsageThreshold].)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFanInvalid:A fan module experienced a complete failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrProtNotAval:The primary Tunnel has been unbound by bypass Tunnel. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], BypassTunnelId=[BypassTunnelId], TunnelType=[TunnelType], SubGroupId=[SubGroupId], SubGroupOrignatorId=[SubGroupOrignatorId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwOpticalInvalid:Optical Module is invalid. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FIB/4/hwBoardFwdResThresholdExceed:The board forwarding engine resources exceeded the threshold. (EntityPhysicalIndex=[EntiyPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Slot=[SlotStr], ReasonId=[ReasonId], ReasonDescription=[Reason])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwNomatchSnpBindTblDhcpPktAlarm:The number of the discarded DHCP request packets that did not match the binding table exceeded the threshold on the interface. (IfIndex=[IfIndex], VlanIndex=[VlanIndex], VsiIndex=[VsiIndex], Interface=[IfName], VlanID=[VlanId], DiscardedNumber=[DiscardPktAccount])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsLspTotalCountExceed:The lsp count reaches the upper limit. (hwMplsLspProtocol=[LspProtocol], hwMplsLspTotalCount=[LspTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/4/hwPortSecRcvIllegalMacAlarm:Interface([IfIndexA]) receives packets with illegal source mac-address. (IfName=[IfName], MacAddress=[MacAddress], Vlan=[Vlan], VsiName=[VsiName], SecurityPort = [SecurityPort], Action=[Action](1:restrict;2:protect;3:error-down))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwCrlInvalid:The Crl is not in validity.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackMemberPortSpeedDifferentAlarm:The rates of member ports in a stack port are different. (hwStackPortName=[hwStackLocalIfName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IPV4/2/hwPacketChange:Packets are changed. (Packets in port = [hwPacketChangeInPort], Packets out port = [hwPacketChangeOutPort])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrSwitch:Tunnel frr switches. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], BypassSessionTunnelId=[BypassTunnelId], BypassLocalLspId=[BypassLocalLspId], BypassIngressLsrId=[BypassIngressLsrId], BypassEgressLsrId=[BypassEgressLsrId], TunnelType=[TunnelType], ProtectedIfName=[ProtectedIfName], BypassTunnelPath=[BypassTunnelPath], SubGroupId=[SubGroupId], SubGroupOrignatorId=[SubGroupOrignatorId], FrrMethod=[FrrMethod])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwWholeFwdResLack:The whole device forwarding engine resources were overloaded. (EntityPhysicalIndex=[EntiyPhysicalindex], EntPhysicalIndex=[EntPhysicalindex], EntPhysicalName=[EntPhysicalName], Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSUnicastPktsDiscardAlarm:The outgoing unicast traffic in the slot is discarded.(Slot=[hwXQoSUnicastPktsDiscardAlarmSlotid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsTunnelBesteffortDown:The best-effort LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelBBResume:Main LSP of Tunnel resumes from backup LSP in Best-effort Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],ulTunnelAdminStatus=[ulTunnelAdminStatus],ulTunnelOperStatus=[ulTunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwCmuInvalid:The CMU failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MACSEC/4/hwMacsecCknSwitchFail:Failed to switch the CKN. (IfIndex=[IfIndex], Role=[Role], Local Port=[LocalPort], Old CKN=[OldCKN],New CKN=[NewCKN], Switch Reason=[SwitchReason], Failed Reason=[FailReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwFanFail:The fan partially failed. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwXQoSVlanStormSuppressAlarm:Packet loss occurred in the VLAN due to storm suppression. (VLAN=[hwXQoSVlanStormSuppressAlarmVlanid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/1/hwCBQoSPbrInvalidAlarm:PBR becomes invalid. (BehaviorName = [hwCBQoSRdrRouteAlarmBehaviorName], SACL Protocal = [hwCBQoSRdrRouteAlarmProtoFamily], SACL View = [hwCBQoSRdrRouteAlarmApplyType], SACL InterfaceName = [hwCBQoSRdrRouteAlarmInterfaceName], SACL ViewParam = [hwCBQoSRdrRouteAlarmViewParam])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_COMM/2/hwMlagLinkLocalConflictDetect:A link-local address on the local device conflicted with an IPv6 address configured using the m-lag ipv6 command on the peer M-LAG device. (vpn-instance=[hwMlagLinkLocalVpnName], link-local address=[hwMlagLinkLocalAddress])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/5/hwPhyStackPortIsUp:The stack member port's link state is up. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrResume:Tunnel frr resumes. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelOBResume:Main LSP of Tunnel resumes from backup LSP in Ordinary Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2VPN/2/hwVplsVsiDown:The status of the VPLS VSI turned DOWN. (VsiName=[VsiName], InterfaceIndex=[InterfaceIndex], VsiId=[VsiId], HWL2VpnStateChangeReason=[HWL2VpnStateChangeReason], VsiStatus=[VsiStatus], InterfaceName=[InterfaceName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwGlobalAllocatedIpThresholdReachAlarm:The number of globally allocated IPv6 addresses reached the threshold. (ThresholdValue=[ThresholdValue], LimitValue=[LimitValue])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/mplsTunnelRerouted:Tunnel Re-routed. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus], TunnelType=[TunnelType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EFM/3/threshold:Threshold event occurred. (IfIndex=[IfIndex], EventLogIndex=[EventLogIndex], EventLogTimestamp=[EventLogTimestamp], EventLogOui=[EventLogOui], EventLogType=[EventLogType], EventLogLocation=[EventLogLocation], EventLogWindowHi=[EventLogWindowHi], EventLogWindowLo=[EventLogWindowLo], EventLogThresholdHi=[EventLogThresholdHi], EventLogThresholdLo=[EventLogThresholdLo], EventLogValue=[EventLogValue], EventLogRunningTotal=[EventLogRunningTotal], EventLogEventTotal=[EventLogEventTotal], IfName=[IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwCmuFail:The CMU experienced a partial failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwSipPortLinkProtocolAlarm:The physical status of the sip-port is up, but the protocol status is down. (hwSipPort=[hwSipPort])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDM/4/hwStrackIpInfo:Attack occurred.(Interface=[Interface], SourceIp=[SourceIP], CVLAN=[CVLAN], PVLAN=[PVLAN], EndTime=[EndTime], TotalPackets=[TotalPackets], SourceIpv6=[SourceIPv6])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMflpVlanLoopAlarm:MAC flapping is detected and storm suppression is triggered on the flapping interface. VlanId = [VlanId], Original-Port = [IfNameA], Flapping port 1 = [IfNameB], port 2 = [IfNameC]. [AlarmReason].",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelOBSwitch:Main LSP of Tunnel switches to backup LSP in Ordinary Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelAdminStatus=[TunnelAdminStatus], TunnelOperStatus=[TunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpv6SnpBindTblThreshold:The number of DHCPv6 Snooping binding entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/1/hwDot1agCfmUnexpectedMEGLevel:MEP received a CCM with unexpected MEG level. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwPowerInvalid:A power module experienced a complete failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason] )",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwMplsLabelExceedAlarm:The layer number of the label stack exceeds the device capabilities.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXQoSMulticastPktsDiscardInterfaceAlarm:The outgoing multicast traffic on the interface is discarded.(Interface=[hwXQoSMulticastPktsDiscardInterfaceAlarmIfName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMLagConsistencyCheckType2:The two switches in the M-LAG have different [type] configurations. Run the display dfs-group consistency-check command to check details.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/1/hwDot1agCfmLOC:MEP is disconnected with the remote MEP. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId], RmepId=[RmepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DRIVER/4/hwBoardLeaveMaster:Board leave master state. (EntityPhysicalIndex=[EntityPhysicalIndex], EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityType=[EntityType], EntityTrapFaultID=[EntityTrapFaultID],Reason=Master/Slave Board Switchover.)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TWAMP/4/hwTwampResponderSessionNumExceed:The number of TWAMP responder session is out of device capability.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/5/hwmplsldpvirtualtunnelup:The LDP virtual tunnel went Up. (LdpVirtualTunnelFEC=[LdpVirtualTunnelFEC])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwVxlanTunnelMacLimitOverThresholdAlarm:MAC address learning reached the limit and MAC address flapping cannot occur in this broadcast domain. (SourceIpAddress=[SourceIp], DestinationIpAddress=[PeerIp], MacLimitMaxMac=[MacLimitMaxMac].)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI_IPV4/2/hwVxlanNveMacConflict:MAC addresses of NVE interfaces on distributed VXLAN gateways conflict. (Conflicting MAC address = [hwVxlanNveMac], remote NVE IP address = [hwVxlanTnlPeerIpAddr])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/Session-Retry:The number of session initialization messages exceeds the mplsLdpEntityInitSessionThreshold. (PeerLdpId=[PeerLdpId],EntityIndex=[EntityIndex],Times=[InitSessionThreshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCPSNP/4/hwDhcpSnpBindTblThreshold:The number of DHCP Snooping binding entries exceeded the threshold. (Current number=[CurrentNumber], Max number=[MaxNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTunnelBBSwitch:Main LSP of Tunnel switches to backup LSP in Best-effort Backup. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId],ulTunnelAdminStatus=[ulTunnelAdminStatus],ulTunnelOperStatus=[ulTunnelOperStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "QOS/2/hwXQoSFCoEPriorityAlarm:The mapping from PHBs to 802.1p priorities for outgoing packets has been disabled, so 802.1p priorities of FCoE packets may be incorrect and FCoE packets may be lost.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RM/2/hwTunnelSubExceed:The number of subscribed tunnels reached the maximum value. (subscribeTunnelMaxCount=[subscribeTunnelMaxCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwSysResChangedAlarm:The resource mode is changed. (Slot=[hwSysResChgSlotStr], Reason=[hwSysResChgReasonId], Description=[hwSysResChgReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstBpduRateExceeded:The rate at which VBST sends BPDUs exceeds the upper limit, this may lead to high cpu useuage and device fail to be managed. (RateThreshold=[hwVbstRateThreshold], CurrentRate=[hwVbstCurrentRate])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackMemberPortProtocolAlarm:The physical status of the stack member port is up, but the protocol status is down. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTunnelHotstandbySwitch:Traffic switched from the primary LSP to the hot-standby LSP. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMLagSynConnectivityCheckFailed:The connectivity check of the M-LAG synchronization channel fails. (Slot = [slotStr], Reason : [reasonDescription])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMlagPortDown:M-LAG member interfaces with the same M-LAG ID on both M-LAG devices are Down. (M-LAG ID=[hwMlagInfId], LocalIfname=[hwMlagInfName], LocalSystemMAC=[hwLocalSysID], RemoteSystemMAC=[hwRemoteSysID])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/4/hwMflpBdAlarm:MAC flapping is detected and storm suppression is triggered on the flapping interface. BdId = [BdId], Original-Port = [IfNameA], Flapping port 1 = [IfNameB], port 2 = [IfNameC]. [AlarmReason].",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EFM/3/nonthreshold:Nonthreshold Event occurred. (IfIndex=[IfIndex], EventLogIndex=[EventLogIndex], EventLogTimestamp=[EventLogTimestamp], EventLogOUI=[TrapLogOUI], EventLogType=[TrapLogType], EventLogLocation=[TrapLogLocation], IfName=[IfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "QOS/4/hwXACLFEIMemoryFullAlarm:The memory space occupied by ACLs exceeded the available memory space on the forwarding engine, ACL is effected,slot = [hwXACLFEIMemoryFullAlarmSlotid].",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "IPSG/2/hwIpsgDropALarm:The number of packets discarded by IPSG exceeds the threshold. (number of discarded packets = [PktCnt], threshold = [Threshold], interface = [IfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/HwFwdDataSyncIncomplete:Data synchronization is abnormal. (Reason=[ReasonId], ReasonDescription=[Reason])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/2/hwPeerlinkBlock:The STP state of the peer-link member interface is discarding. (STP instance ID = [hwPeerlinkBlockStpInstanceId], Module ID = [hwPeerlinkBlockModId], Member interface = [hwPeerlinkBlockMemberIf])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/3/hwMplsTunnelOrdinaryDown:The ordinary LSP of the tunnel changes to Down. (SessionTunnelId=[SessionTunnelId], TunnelInstIndex=[TunnelInstIndex], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], mplsTunnelIfName=[mplsTunnelIfName], hwMplsTunnelDownReason=[hwMplsTunnelDownReason], hwMplsTunnelDownLSRId=[hwMplsTunnelDownLSRId], hwMplsTunnelDownIfAddrType=[hwMplsTunnelDownIfAddrType], hwMplsTunnelDownIfAddr=[hwMplsTunnelDownIfAddr], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/hwMplsLdpMappingCountExceed:The number of LDP label mapping sent or received on the device exceeded the upper limit. (Type=[Type], VPN name=[VrfName], MappingTotalCount=[MappingTotalCount])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEFEND/4/hwAutoPortDefendViaMflpAlarm:Port-based automatic local attack defense associated with MAC address flapping was detected. (Slot=[SlotId],Protocol=[Protocol],Interface=[IfName],Reason=[ReasonDescription])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-1AG/1/hwDot1agCfmMismerge:MEP received a CCM with unexpected MEG ID. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepId=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsDynamicLabelTotalCountExceed:The dynamic label count reaches the upper limit. (hwMplsDynamicLabelTotalCount=[DynamicLabelTotalCount], hwMplsDynamicLabelCurrentCount=[DynamicLabelCurrentCount])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACKMNG/4/hwStackLinkDown:The interface Stack-Port is down. (StackPortName=Stack-[hwStackPortStackId]/[hwStackPortId], hwStackPortStatus=[hwStackPortStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/1/hwBrdTempFatalAlarm:The board temperature exceeded the fatal alarm threshold. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityThresholdType=[EntityThresholdType], EntityThresholdCritical=[EntityThresholdCritical], EntityThresholdCurrent=[EntityThresholdCurrent], EntityTrapFaultID=[EntityTrapFaultID],Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FEI/2/hwXQoSBDStormSuppressAlarm:Packet loss occurred in the BD due to storm suppression. (BD = [hwXQoSBDStormSuppressAlarmBdid])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/4/hwCertExpired:The PKI certificate will expire after 90 days or the certificate is not in validity.((CertBeginTime=[CertBeginTime], CertEndTime=[CertEndTime]))",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "TRAFFIC-ANALYSIS/4/hwEnpPerformanceAlarm:The rate at which packets are sent to the built-in chip of the CPU exceeds the processing capability of the chip. (SlotID = [hwEnpPerformanceAlarmSlotid])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/2/hwMplsTeLspBfdDown:The status of BFD for TE LSP changed to down. (SessionTunnelId=[SessionTunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], TunnelName=[TunnelName], LspRole=[LspRole], SignalledTunnelName=[SignalledTunnelName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "AAA/3/hwAdminLoginFailed:Administrator type users login failed too frequently. (failed times=[hwLoginFailedTimes], statistic period=[hwStatisticPeriod] minutes)",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwMlagDfsPeerDown:The DFS peer status went Down. (Dfs-GroupId=[hwdfsGroupId], SystemId=[hwsysMac], Dfs-Type=[hwdfsType], PeerAddress=[hwdfsPeerAddress])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "DEVM/2/hwPowerFail:A power module experienced a partial failure. (EntPhysicalIndex=[EntPhysicalIndex], EntPhysicalName=[EntPhysicalName], EntityTrapFaultID=[EntityTrapFaultID], Reason=[Reason] )",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RADIUS/4/hwRadiusAcctServerDown:The communication with the RADIUS accounting server fails. (Server=[ServerIpAddress],Vpn-Instance=[VpnInstance],Port=[ServerPort])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS_LSPM/4/hwMplsTeFrrProtAval:The primary Tunnel has been protected by bypass Tunnel. (TunnelId=[TunnelId], LocalLspId=[LocalLspId], IngressLsrId=[IngressLsrId], EgressLsrId=[EgressLsrId], BypassTunnelId=[BypassTunnelId], InnerLable=[InnerLable], TunnelType=[TunnelType], SubGroupId=[SubGroupId], SubGroupOrignatorId=[SubGroupOrignatorId])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwMacMovedQuietMaxUserAlarm: OID [OID] The number of mac moved quiet users reached the maximum.(Spec of User Num [INTEGER1] Current Threshold [INTEGER2] Lower Threshold [INTEGER3]% Upper Threshold [INTEGER4]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwMacMovedQuietUserClearAlarm: OID [OID] The MAC Moved Quiet Max User Alarm is cleared.(Spec of User Num [INTEGER] Current Threshold [INTEGER] Lower Threshold [INTEGER]% Upper Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwNACUserClearAlarm: OID [OID] The NAC Max User Alarm is cleared.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwNACMaxUserAlarm: OID [OID] The number of NAC users reached the maximum.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwChangePasswordAlarm: OID [OID] Local account password has been modified.(TYPE [OCTET] User-name [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwPPPMaxUserAlarm: OID [OID] The number of PPP users reached the maximum.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwPPPMaxUserClearAlarm: OID [OID] The PPP Max User Alarm is cleared.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwMacQuietMaxUserAlarm: OID [OID] The number of mac quiet users reached the maximum.(Spec of User Num [INTEGER1] Current Threshold [INTEGER2] Lower Threshold [INTEGER3]% Upper Threshold [INTEGER4]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwMacQuietUserClearAlarm: OID [OID] The MAC Quiet Max User Alarm is cleared.(Spec of User Num [INTEGER1] Current Threshold [INTEGER2] Lower Threshold [INTEGER3]% Upper Threshold [INTEGER4]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwQuietUserClearAlarm: OID [OID] The quiet max user alarm is cleared.(UserType=[INTEGER], Threshold=[INTEGER]%, UserNum=[INTEGER], Lower Threshold=[INTEGER]%, Upper Threshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwQuietUserMaxAlarm: OID [OID] The number of quiet users is reaching the max.(UserType=[INTEGER], Threshold=[INTEGER]%, UserNum=[INTEGER], Lower Threshold=[INTEGER]%, Upper Threshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwQuietPortClearAlarm: OID [OID] The quiet max user alarm on port is cleared.(UserType=[INTEGER], IfName=[OCTET], Threshold=[INTEGER]%, UserNum=[INTEGER], Lower Threshold=[INTEGER]%, Upper Threshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwQuietPortMaxAlarm: OID [OID] The number of quiet users is reaching the max on port.(UserType=[INTEGER], IfName=[OCTET], Threshold=[INTEGER]%, UserNum=[INTEGER], Lower Threshold=[INTEGER]%, Upper Threshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwAclResThresholdExceedClearTrap:OID [OID] The rule resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwAclResThresholdExceedTrap:OID [OID] The rule resource usage has exceeded [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwAclResTotalCountExceedClearTrap:OID [OID] The rule resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwAclResTotalCountExceedTrap:OID [OID] The rule resource usage has reached [INTEGER]%.(Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwCounterResThresholdExceedClear:OID [OID] The counter resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwCounterResThresholdExceed:OID [OID] The counter resource usage has exceeded [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwCounterResTotalCountExceedClear:OID [OID] The counter resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwCounterResTotalCountExceed:OID [OID] The counter resource usage has reached [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwMeterResThresholdExceedClear:OID [OID] The meter resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwMeterResThresholdExceed:OID [OID] The meter resource usage has exceeded [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwMeterResTotalCountExceedClear:OID [OID] The meter resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACLE/4/hwMeterResTotalCountExceed:OID [OID] The meter resource usage has reached [INTEGER]%. (Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AM/4/hwUsedIPReachThresholdResume: OID [OID] The number of used addresses descends to alarm threshold. (PoolName=[OCTET], Threshold=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ARP/4/hwEthernetARPThresholdResumeAlarm:OID [OID] The number of ARP entries was restored to the threshold. (entPhysicalIndex=[INTEGER], Slot name=[OCTET], Threshold=[COUNTER], Number of dynamic ARP entries=[COUNTER], Number of static ARP entries=[COUNTER]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwCPUUtilizationResume: OID [oid] CPU utilization recovered to the normal range. (Index=[INTEGER], BaseUsagePhyIndex=[INTEGER], UsageType=[INTEGER], UsageIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", UsageValue=[INTEGER], UsageUnit=[INTEGER], UsageThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BULKSTAT/4/hwBulkStatTransferFileDiscard:OID [oid] The file was discarded because of transfer failure. (FileIndex=[integer], FileName=[octet], LastTransferFailTime=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CFGMGR/4/hwAuthenAssociateAccessLimitTrap: OID [oid] Associate user access limit. (IfName=[OCTET], Period=[INTEGER]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDhcpSnpChaddrAlarm:OID [OID] The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeds the threshold on the interface. (IfIndex=[INTEGER], VlanIndex=[INTEGER], Interface=[OCTET], VlanID=[INTEGER], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwUntrustedReplyPktAlarm:OID [OID] The number of the discarded DHCP reply packets on the untrusted interface exceeds the threshold. (IfIndex=[INTEGER], VlanIndex=[INTEGER], Interface=[OCTET], VlanID=[INTEGER], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwNomatchSnpBindTblDhcpPktAlarm:OID [OID] The number of the discarded DHCP request packets that do not match the binding table exceeds the threshold on the interface. (IfIndex=[INTEGER], VlanIndex=[INTEGER], Interface=[OCTET], VlanID=[INTEGER], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDhcpPktRateAlarm:OID [OID] The rate of DHCP packets exceeds the speed limit. (IfIndex=[INTEGER], VlanIndex=[INTEGER], Interface=[OCTET], VlanID=[INTEGER], DiscardedNumber=[INTEGER]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpUserNumberAlarmIfResume:OID [OID] The number of DHCP users on the interface descends to alarm threshold. (IfIndex=[INTEGER], VlanIndex=[INTEGER], Interface=[OCTET], CurrentUser=[INTEGER], MaxUser=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpUserNumberAlarmVlanResume:OID [OID] The number of DHCP users on the vlan descends to alarm threshold. (IfIndex=[INTEGER], VLANIndex=[INTEGER], VlanID=[INTEGER], CurrentUser=[INTEGER], MaxUser=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpUserNumberAlarmGlobalResume:OID [OID] The number of DHCP global users descends to alarm threshold. (IfIndex=[INTEGER], VlanIndex=[INTEGER], CurrentUser=[INTEGER], MaxUser=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwNdSnpUserNumberAlarmIfResume:OID [OID] The number of ND users on the interface descends to alarm threshold. (IfIndex=[INTEGER], VlanIndex=[INTEGER], Interface=[OCTET], CurrentUser=[INTEGER], MaxUser=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwNdSnpUserNumberAlarmGlobalResume:OID [OID] The number of ND global users descends to alarm threshold. (IfIndex=[INTEGER], VlanIndex=[INTEGER], CurrentUser=[INTEGER], MaxUser=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwNomatchSnpBindTblDhcpv6PktAlarm:OID [OID] The number of the discarded DHCPv6 request packets that do not match the binding table exceeds the threshold on the interface. (Interface=[OCTET], VlanID=[INTEGER], LastDroppedSourceMac=[OCTET], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwNomatchSnpBindTblNDPktAlarm:OID [OID] The number of the discarded ND packets that do not match the binding table exceeds the threshold on the interface. (Interface=[OCTET], VlanID=[INTEGER], LastDroppedSourceMac=[OCTET], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpRemoteBackupAlarm: OID [OID] DHCP snooping user-bind table failed to be recovered from remote server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwSnpRemoteBackupAlarmResume: OID [OID] DHCP snooping user-bind table is successfully recovered from remote server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwNomatchSnpBindTblNDPktAlarmBd: OID [OID] The number of the discarded ND packets that do not match the binding table exceeds the threshold on the interface. (Interface=[OCTET], BdID=[INTEGER], LastDroppedSourceMac=[OCTET], DiscardedNumber=[INTEGER]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwDhcpSnpChaddrAlarmBd:  OID [OID] The number of the discarded DHCP packets in which the CHADDR field is inconsistent with the source MAC address exceeds the threshold on the interface. (IfIndex=[INTEGER], Interface=[OCTET], BdID=[INTEGER], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwPDRouteExceedResume: OID [OID] The number of PD route for DHCPv6 relay descends to alarm threshold.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/4/hwDldpUnidirectionalLink: OID [oid] The port is detected in one way status. (IfIndex=[integer], IfName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/4/hwDldpLinkResume: OID [oid] The port is detected in two way status. (IfIndex=[integer], IfName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/4/hwDldpLoopDetect: OID [oid] The port is detected in Loop status. (IfIndex=[integer], IfName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/4/hwDldpLoopResume: OID [oid] The port is detected exit Loop status. (IfIndex=[integer], IfName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/4/hwDldpNeighborNum: OID [oid] The number of DLDP neighbors reached the upper limit. (UpperLimit=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/4/hwDldpNeighborNumResume: OID [oid] The number of DLDP neighbors fell below 70% of the maximum supported by the device. (UpperLimit=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DOT1X/4/hwSrvcfgEapMaxUserAlarm:OID [OID] The number of users has reached the max number.(PortIndex=[INTEGER], PortName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DOT1X/4/hwMacAuthenMaxUserAlarm:OID [OID] The number of users has reached the max number.(PortIndex=[INTEGER], PortName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DS/4/hwCfgChgNotify:OID [OID] configurations have been changed. The current change number is [change-number], the change loop count is [loop-count], and the maximum number of records is [max-number].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DS/4/hwCfgChangeDetailNotify:OID [OID] configurations have been changed. (SeqId=[integer], ChangeDetail=[STRING], UserName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI_MB/4/hwEMDIIndicatorOverThreshold:OID [oid] The monitor indicator of the EMDI instance exceeded the threshold in 3 consecutive periods.(EmdiInstId=[INTEGER], Type=[INTEGER], Value=[INTEGER], Threshold=[INTEGER]/100000)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI_MB/4/hwEMDIIndicatorOverThresholdResume:OID [OID] The monitor indicator of the EMDI instance is lower than the threshold in 60 consecutive periods.(EmdiInstId=[INTEGER], Type=[INTEGER], Value=[INTEGER], Threshold=[INTEGER]/100000)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI_MB/4/hwEMDIReceiveDuplicatePackets:OID [OID] The device received duplicate packets in 3 consecutive periods.(EmdiInstId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI_MB/4/hwEMDIReceiveDuplicatePacketsResume:OID [OID] The device didn't received duplicate packets again in 60 consecutive periods.(EmdiInstId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI_MB/4/hwEMDIResLack: OID [OID] The emdi resource usage has exceeded [INTEGER]%. (Slot=[OCTET], Used=[INTEGER], Total=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EMDI_MB/4/hwEMDIResLackResume: OID [OID] The emdi resource usage is restored to be lower than [INTEGER]%. (Slot=[OCTET], Used=[INTEGER], Total=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwBoardInvalid: OID [oid] Board is invalid for some reason. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardFailResume: OID [oid] Board resumes from failure. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwCardInvalid: OID [oid] Card is invalid for some reason.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCardInvalidResume: OID [oid] Card resumes from invalid situation. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=[OCTET], EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwBrdTempAlarm: OID [oid] Temperature rises over or falls below the warning alarm threshold. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBrdTempResume: OID [oid] The temperature is restored to a normal range. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwOpticalRemove: OID [oid] Optical Module has been removed. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwOpticalInsert: OID [oid] Optical Module has been inserted. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwOpticalFailResume: OID [OID] Optical Module resumes from failure. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwOpticalInvalidResume: OID [oid] The optical power is recovered to the range between the upper and lower alarm thresholds. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwOpticalBiasCurrentAlarmResume: OID [oid] The bias current is recovered to the range between the upper and lower alarm thresholds. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwPowerRemove: OID [oid] Power is absent. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwPowerInsert: OID [oid] Power is present. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwPowerInvalid: OID [oid] Power supply is unavailable for some reason. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwPowerInvalidResume: OID [oid] Power supply is recovered. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwFanRemove: OID [oid] Fan has been removed. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwFanInsert: OID [oid] Fan has been inserted. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwFanInvalid: OID [oid] Fan is invalid. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwFanInvalidResume: OID [oid] Fan resumes from invalid situation. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCardRemove: OID [oid] Card has been removed. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCardInsert: OID [oid] Card has been inserted. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCPUUtilizationRising: OID [oid] CPU utilization exceeded the pre-alarm threshold. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCPUUtilizationResume: OID [oid] CPU utilization recovered to the normal range. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwMemUtilizationRising: OID [oid] Memory usage exceeded the threshold, and it may cause the system to reboot. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwMemUtilizationResume: OID [oid] Memory usage recovered to the normal range. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwRpsPowerRemove: OID [oid] RPS Power has been removed.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER],PhysicalName=\\\"[OCTET]\\\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwRpsPowerInsert: OID [oid] RPS Power has been inserted.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER],PhysicalName=\\\"[OCTET]\\\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwRpsPowerOn: OID [oid] RPS Power change to supply status.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER],PhysicalName=\\\"[OCTET]\\\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwRpsPowerOff: OID [oid] RPS Power change to not supply status.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER],PhysicalName=\\\"[OCTET]\\\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwVirtualLicenseNearDeadline: OID [OID] Virtual license is near deadline, remain time is [INTEGER] days. (ItemName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwVirtualLicenseNearDeadlineResume: OID [OID] The alarm indicating that the virtual license is about to expire is cleared. (ItemName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwVirtualLicenseExpResume: OID [OID] The virtual license expiry alarm was cleared.(ItemName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwNetconfDatabaseAbnormal: OID [oid] The NETCONF database is abnormal.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwNetconfDatabaseRestore: OID [oid] The NETCONF database is restored.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/4/hwEntityInputRateThresholdAlarmResume: OID [oid] Input flow bandwidth usage fell below the threshold. (SlotID=[STRING], UnitID=[INTEGER], PortID=[STRING], PeerSlotID=[STRING], CurUsage=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/4/hwEntityOutputRateThresholdAlarmResume: OID [oid] Output flow bandwidth usage fell below the threshold. (SlotID=[STRING], UnitID=[INTEGER], PortID=[STRING], PeerSlotID=[STRING], CurUsage=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/4/hwBoardDropRuntPacketNotify: OID [OID] The board has been detected that discards the runt packets, which may affect services. (PhysicalIndex=[INTEGER], PhysicalName=[OCTET], BoardDroppedRuntPkt=[COUNTER64], TimeInterval=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTMIB/4/entConfigChange: OID [oid] Entity MIB change.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM1AG/2/hwDot1agCfmUnexpectedMEGLevel: OID [oid] MEP received a CCM with unexpected MEG level. (MdIndex=[GAUGE], MaIndex=[GAUGE], MdName=[STRING], MaName=[STRING], MepId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM1AG/2/hwDot1agCfmUnexpectedMEGLevelCleared: OID [oid] MEP did not receive any CCM with unexpected MEG level before timeout. (MdIndex=[GAUGE], MaIndex=[GAUGE], MdName=[STRING], MaName=[STRING], MepId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM1AG/2/hwDot1agCfmMismerge: OID [oid] MEP received a CCM with unexpected MEG ID. (MdIndex=[GAUGE], MaIndex=[GAUGE], MdName=[STRING], MaName=[STRING], MepId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM1AG/2/hwDot1agCfmMismergeCleared: OID [oid] MEP did not receive any CCM with unexpected MEG ID before timeout. (MdIndex=[GAUGE], MaIndex=[GAUGE], MdName=[STRING], MaName=[STRING], MepId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM1AG/2/hwDot1agCfmLOC: OID [oid] MEP is disconnected with the remote MEP. (MdIndex=[GAUGE], MaIndex=[GAUGE], MdName=[STRING], MaName=[STRING], MepId=[INTEGER], RmepId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM1AG/2/hwDot1agCfmLOCCleared: OID [oid] MEP is reconnected with the remote MEP. (MdIndex=[GAUGE], MaIndex=[GAUGE], MdName=[STRING], MaName=[STRING], MepId=[INTEGER], RmepId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwCfmVlanOnewayDelay:OID [OID] The result of one-way delay-measure exceeded the threshold. (MdIndex=[GAUGE], MaIndex=[GAUGE], RemoteMacAddress=[OPAQUE], Timestamp=[TIMETICK], DelayValue=[GAUGE], ThresholdValue=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwCfmVlanOnewayDelayRecovery:OID [OID] The result of one-way delay-measure is under the threshold. (MdIndex=[GAUGE], MaIndex=[GAUGE], RemoteMacAddress=[OPAQUE], Timestamp=[TIMETICK], DelayValue=[GAUGE], ThresholdValue=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwCfmVlanTwowayDelay:OID [OID] The result of two-way delay-measure exceeded the threshold. (MdIndex=[GAUGE], MaIndex=[GAUGE], RemoteMacAddress=[OPAQUE], Timestamp=[TIMETICK], DelayValue=[GAUGE], ThresholdValue=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwCfmVlanTwowayDelayRecovery:OID [OID] The result of two-way delay-measure is under the threshold. (MdIndex=[GAUGE], MaIndex=[GAUGE], RemoteMacAddress=[OPAQUE], Timestamp=[TIMETICK], DelayValue=[GAUGE], ThresholdValue=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ERRDOWN/4/hwErrordown: OID [oid] Error-down occurred. (Ifindex=[INTEGER], Ifname=[STRING], Cause=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ERRDOWN/4/hwErrordownRecovery: OID [oid] Error-down recovered. (Ifindex=[INTEGER], Ifname=[STRING], Cause=[STRING], RecoverType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EZOP/4/hwEasyOperationClientAdded: OID [oid] Easy operation client device added. (ClientId=[INTEGER], HostName=\"[OCTET]\", ClientIp=\"[OCTET]\", ClientMac=\"[OCTET]\",ClientEsn=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EZOP/4/hwEasyOperationClientLost: OID [oid] Easy operation client device lost. (ClientId=[INTEGER], HostName=\"[OCTET]\", ClientIp=\"[OCTET]\", ClientMac=\"[OPAQUE]\",ClientEsn=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EZOP/4/hwEasyOperationClientJoinNotPermit: OID [oid] The request of an unauthorized client was denied. (ClientId=[INTEGER], HostName=\"[OCTET]\", ClientIp=\"[OCTET]\", ClientMac=\"[OPAQUE]\", ClientEsn=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EZOP/4/hwEasyOperationClientProcessFail: OID [oid] Operation on the switch fails. ((ClientId=[INTEGER], HostName=\"[OCTET]\", ClientIp=\"[OCTET]\", ClientMac=\"[OPAQUE]\", ClientEsn=\"[OCTET]\"),Reason=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FTPS/4/hwFtpNumThreshold:OID [oid] The number of FTP users exceeded the upper threshold. (Upper threshold = [ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FTPS/4/hwFtpNumThresholdResume:OID [oid] The number of FTP users fell below the lower threshold. (Lower threshold = [ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FM/4/hwAlarmStorm:OID [oid] There are excessive traps, which form a trap storm.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackLinkUp: OID [oid] Stack-port [integer]/[integer] changes to up.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackStandbyChange: OID [oid] Slot [integer] is designated as standby.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackSwitchOver: OID [oid] After switchover, slot [integer] is selected as master.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackSystemRestart: OID [oid] After stack restart, the new master is slot [integer].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackStackMemberAdd: OID [oid] Slot [integer] is added into stack.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackStackMemberLeave: OID [oid] Slot [integer] leaves from stack.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackSystemMacChange: OID [oid] Stack system's MAC address changes to slot [integer]'s MAC address [octet].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwPhyStackPortIsUp: OID [OID] Stack port [octet] state has changed to up.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwPhyStackPortErrorDownRecover: OID [OID] Runts-error-down recovered. (StackPort=[octet], RecoverType=[octet])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackPortErrorDownRecovery: OID [OID] STACK port [STRING] has recovered from error-down state. (ErrorDownType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HACA/4/hwHacaChannelUp: OID [oid] Channel with the HACA server is resumed. (IPAddress=[IPADDR], PortNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HACA/4/hwHacaChannelDown: OID [oid] Channel with the HACA server is interrupted. (IPAddress=[IPADDR], PortNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HGMP/4/hgmpNetTopChange:OID [oid] The NTDP topology has changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HWCM/4/hwCfgManEventlog:OID [oid] Configure changed. (EventIndex=[integer], CommandSource=[integer], ConfigSource=[integer], ConfigDestination=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HWCM/4/hwCfgOperateCompletion:OID [oid] Configure copy. (OperationIndex=[integer], OperationResultIndex=[integer], OperationType=[integer], OperationTime=[timetick], OperationState=[integer], OperationEndTime=[timetick])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HWCM/4/hwCfgB2STransferFail: OID [oid] Failed to transfer the configuration file to (index=[integer]) server [server-ip] through [transport-type] when automatically backing up the configuration.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HWCM/4/hwCfgB2SOperate:OID [oid] Began to back up the current configuration to the server.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwIfMonitorCrcErrorRising: OID [oid] The CRC error is rising. (hwIfMonitorIndex=[INTEGER], hwIfMonitorCrcErrorStatistics=[COUNTER64], hwIfMonitorCrcErrorThreshold=[INTEGER], hwIfMonitorCrcErrorInterval=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwIfMonitorCrcErrorResume: OID [oid] The CRC error resume. (hwIfMonitorIndex=[INTEGER], hwIfMonitorCrcErrorStatistics=[COUNTER64], hwIfMonitorCrcErrorThreshold=[INTEGER], hwIfMonitorCrcErrorInterval=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfMonitorInputRateRising: OID [oid] Interface input flow bandwidth usage exceeded the trap threshold. (Interface=[INTEGER], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfMonitorInputRateResume: OID [oid] Interface input flow bandwidth usage was restored to the trap threshold. (Interface=[INTEGER], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfMonitorOutputRateRising: OID [oid] Interface output flow bandwidth usage exceeded the trap threshold. (Interface=[INTEGER], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfMonitorOutputRateResume: OID [oid] Interface output flow bandwidth usage was restored to the trap threshold. (Interface=[INTEGER], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/linkDown: OID [oid] Interface [interface-index] turned into DOWN state.(AdminStatus=[INTEGER],OperStatus=[INTEGER],InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/linkUp: OID [oid] Interface [interface-index] turned into UP state. (AdminStatus=[INTEGER],OperStatus=[INTEGER],InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfFlowDown:OID [OID] The state of interface turned to DOWN because of FLOW DOWN. (Interface=[INTEGER], InterfaceIndex=[INTEGER], SysUpTime=[TIMETICK], FlowStatus=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfFlowUp:OID [oid] The state of interface turned to UP because of FLOW UP. (Interface=[INTEGER], InterfaceIndex=[INTEGER], SysUpTime=[TIMETICK], FlowStatus=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwIfNameChange:OID [oid] When a single-chassis device is upgraded to a multi-chassis device, the interface information is changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwIfNameChangeResume:OID [oid] When a multi-chassis restore a single-chassis device, the interface information is changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwEntityExtCfmOverSlot: OID [oid] The configuration of the interface board is restored. (BoardName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwEntityExtCfmOverCard: OID [oid] The configuration of the interface card is restored. (CardName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwExtInterfaceDelete:OID [OID] Interface [interface-index] was deleted. (InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/2/hwPortCrcRateExceed: OID [OID] The interface CRC error rate exceeded the trap threshold, which may affect forwarding. Handle it as soon as possible. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], CrcRate=[OCTET], TrapThreshold=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPhysicalPortInBroadcastRapidChange: OID [oid] The rapid-change of input broadcast exceeded the threshold. (IfIndex=[INTEGER], InterfaceName=[STRING], InputBroadcastChangeThreshold=[INTEGER]pps, CurrentInputBroadcastRate=[COUNTER64]pps, BaseInputBroadcastRate=[COUNTER64]pps)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/2/hwPhysicalPortCrcRatioExceed:OID [OID] The ratio of incoming CRC packets on the interface exceeds the threshold. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], Threshold=[OCTET], StatisticsInterval=[INTEGER], CRCPackets=[COUNTER64], TotalInPackets=[COUNTER64])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPhysicalPortCrcRatioResume: OID [OID] The ratio of incoming CRC packets on the interface falls below the threshold. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], Threshold=[OCTET], StatisticsInterval=[INTEGER], CRCPackets=[COUNTER64], TotalInPackets=[COUNTER64])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwInputRateChangeOverThresholdNotice: OID [OID] The input rate change ratio exceeded the threshold. (IfIndex=[INTEGER], InterfaceName=[STRING], ThresholdPercent=[INTEGER]%, CurrentStatisticalPeriodRate=[COUNTER64], LastStatisticalPeriodRate=[COUNTER64])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwOutputRateChangeOverThresholdNotice: OID [oid] The output rate change ratio exceeded the threshold. (IfIndex=[INTEGER], InterfaceName=[STRING], ThresholdPercent=[INTEGER]%, CurrentStatisticalPeriodRate=[COUNTER64], LastStatisticalPeriodRate=[COUNTER64])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPortNoSupportOETrap:OID [oid] The 1000base-T optical/electrical module or optical module cannot be installed on the port when the port is used as a stack port. (EntityPhysicalIndex=[INTEGER], EntityIfIndex=[INTEGER], EntPhysicalName=[OCTET], hwEntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwTrunkMemSpeedDifferentResume: OID [OID] The active member ports in trunk have consistent bandwidth. (TrunkIfIndex=[INTEGER], TrunkName=[OCTET]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPortProtectGroupAvailable: OID [OID] The port protection group is available. (PortProtectGroupId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPortProtectGroupDelete: OID [OID] The port protection group was deleted. (PortProtectGroupId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwInputDiscardNotice:OID [OID] Interface input discard exceed the trap threshold. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], Statistics=[COUNTER64], TrapThreshold=[ULONG], TrapInterval=[ULONG](s)) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwOutputDiscardNotice:OID [OID] Interface output discard exceed the trap threshold. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], Statistics=[COUNTER64], TrapThreshold=[ULONG], TrapInterval=[ULONG](s)) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwTunnelIfNumExceededSpecAlarm:OID [OID] The number of Tunnel interfaces exceeds the limit. (TunnelIfThreshold=[INTEGER], CurrentNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IP/4/hwIfIpAddressChange:OID [oid] An IP address has been changed. (OldIpAddress=[IPADDR], NewIpAddress=[IPADDR], IfIndex=[INTEGER], OldIpMask=[IPADDR], NewIpMask=[IPADDR], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmStreamResourceExceed: OID [OID] The sipfpm global stream resource exceed the threshold. (Used=[INTEGER], Total=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmStreamResourceRecovery: OID [OID] The sipfpm global stream resource is lower than the threshold. (Used=[INTEGER], Total=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmBoardStreamResourceExceed: OID [OID] The sipfpm stream resource on the slot exceed the threshold. (Slot=[OCTET], Used=[INTEGER], Total=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmBoardStreamResourceRecovery: OID [OID] The sipfpm stream resource on the slot is lower than the threshold. (Slot=[OCTET], Used=[INTEGER], Total=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmBoardPktDscpConflict: OID [OID] The DSCP value of the packets matching the SIPFPM measurement flow in the slot conflicts with the configured SIPFPM color bit. (Slot=[OCTET], IfIndex=[INTEGER], Direction=[OCTET], SrcIp=[OCTET], DstIp=[OCTET], Protocol=[INTEGER], SrcPort=[INTEGER], DstPort=[INTEGER], PktDscp=[INTEGER], CfgDscp=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmBoardStreamCreateFail: OID [OID] Failed to create an SIPFPM flow entry in the slot. (Slot=[OCTET], IfIndex=[INTEGER], Direction=[OCTET], SrcIp=[OCTET], DstIp=[OCTET], Protocol=[INTEGER], SrcPort=[INTEGER], DstPort=[INTEGER], Reason=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPCA/4/hwIpfpmBoardAclResourceExceed: OID [OID] The number of ACL resources used by SIPFPM in the slot exceeds the threshold. (Slot=[OCTET], Direction=[OCTET], Used=[INTEGER], Total=[INTEGER], Threshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecTunnelStart: OID [oid] The IPSec tunnel is established. (Ifindex=[Ifindex], SeqNum=[SeqNum],TunnelIndex=[TunnelIndex], RuleNum=[RuleNum], DstIP=[DstIP], InsideIP=[InsideIP], RemotePort=[RemotePort], CpuID=[CpuID], SrcIP=[SrcIP], FlowInfo=[FlowInfo], LifeSize=[LifeSize], LifeTime=[LifeTime], VsysName=[vsys-name], InterfaceName=[InterfaceName], SlotID=[SlotID], Role=[Role])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecTunnelStop: OID [oid] The IPSec tunnel is deleted. (Ifindex=[Ifindex], SeqNum=[SeqNum],TunnelIndex=[TunnelIndex], RuleNum=[RuleNum], DstIP=[DstIP], InsideIP=[InsideIP], RemotePort=[RemotePort], CpuID=[CpuID], SrcIP=[SrcIP], FlowInfo=[FlowInfo], OfflineReason=[offlinereason], VsysName=[vsys-name], InterfaceName=[InterfaceName], SlotID=[SlotID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecPolicyAdd: OID [oid] An IPSec policy is added. (SeqNum=[sequence-number], PolicyName=[policy-name], VsysName=[vsys-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecPolicyDel: OID [oid] An IPSec policy is deleted. (SeqNum=[sequence-number], PolicyName=[policy-name], VsysName=[vsys-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecPolicyAttach: OID [oid] An IPSec policy is applied to an interface. (IfIndex=[interface-index], PolicyName=[policy-name], VsysName=[vsys-name], InterfaceName=[interface-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecPolicyDetach: OID [oid] An IPSec policy is cancelled on an interface. (IfIndex=[interface-index], PolicyName=[policy-name], VsysName=[vsys-name], InterfaceName=[interface-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecIKEReset: OID [oid] Reset IKE SA. (VsysName=[vsys-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecIPSecReset: OID [oid] Reset IPSec SA. (VsysName=[vsys-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecTunnelreachMax: OID [OID] Current counts of ipsec tunnel will reach max CPU limit or license limit, please check it.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecTunnelreachMaxAtOnce: OID [OID] Current counts of ipsec tunnel will reach max CPU limit or license limit, please check it at once.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC/4/hwIPSecWeakEncr: OID [OID] CBC mode encryption algorithm is used, and GCM mode encryption algorithm is recommended. (PeerAddress=[PeerAddress], InterfaceName=[InterfaceName]) \"",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIKESaPhase1Establish: OID [OID] IKE phase1 sa established. (PeerAddress=[PeerAddress], PeerPort=[PeerPort], LocalAddress=[LocalAddress], AuthMethod=[AuthMethod], AuthID=[AuthID], IDType=[IDType], VsysName=[vsys-name], Role=[Role])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecNegoFail: OID [OID] IPSec tunnel negotiation fails. (Ifindex=[Ifindex], SeqNum=[SeqNum], Reason=[Reason], ReasonCode=[ReasonCode], PeerAddress=[PeerAddress], PeerPort=[PeerPort], VsysName=[vsys-name], InterfaceName=[InterfaceName], ConnID=[ConnID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IPSEC-VPN/4/hwIPSecTunnelHaveReachMax: OID [OID] Current counts of ipsec tunnel has been reached max CPU limit or license li mit, please check it at once.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LINE/4/hwVtyNumExceed:OID [oid] The number of login users reaches the maximum limit. (MaxUserNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MID_L2BPTNL/2/hwL2ProtocolTunnelDropThresholdRaising:OID [oid] The number of the protocol transmit on the port reach the drop threshold. (PortName=[OCTET], ProtocolName=[OCTET], Dropthreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MID_L2BPTNL/2/hwL2ProtocolTunnelDropThresholdFalling:OID [oid] The number of the protocol transmit on the port below the drop threshold. (PortName=[OCTET], ProtocolName=[OCTET], Dropthreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwSlotMacLimitNumRaisingThreshold:OID [oid] MAC address learning based on SLOT reached the limit. (L2IfPort=[L2IfPort], MacLimitVlanId=[MacLimitVlanId], MacLimitVsiName=[MacLimitVsiName], entPhysicalIndex=[entPhysicalIndex], aseTrapSeverity=[aseTrapSeverity], BaseTrapProbableCause=[BaseTrapProbableCause], BaseTrapEventType=[BaseTrapEventType], MacDynAddressLearnNum=[MacDynAddressLearnNum], MacLimitMaxMac=[MacLimitMaxMac], SlotName=[SlotName], DeviceName=[DeviceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwSlotMacLimitNumFallingThreshold:OID [oid] MAC address learning based on SLOT is resumed. (L2IfPort=[L2IfPort], MacLimitVlanId=[MacLimitVlanId], MacLimitVsiName=[MacLimitVsiName], entPhysicalIndex=[entPhysicalIndex], aseTrapSeverity=[aseTrapSeverity], BaseTrapProbableCause=[BaseTrapProbableCause], BaseTrapEventType=[BaseTrapEventType], MacDynAddressLearnNum=[MacDynAddressLearnNum], MacLimitMaxMac=[MacLimitMaxMac], SlotName=[SlotName], DeviceName=[DeviceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwPortSecRcvInsecurePktAlarm: OID [oid] Interface ([INTEGER1]/[INTEGER2]) [OCTET] receive insecure MAC address, and the port status is  [INTEGER3]. (1 restrict;2 protect;3 error-down)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwPortStickyReachMaxAlarm: OID [OID] the number of [OCTET] reaches the max.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwRecIllegalMacPktAlarm: OID [OID] Receive packets with an all-0 MAC address. (PhysicalIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMacLimitOverThresholdAlarm: OID [oid] MAC address learning reached the limit. (L2IfNum=[INTEGER], MacLimitVlanId=[INTEGER], MacLimitVsiName=[OCTET], L2PortNum=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], MacDynAddressLearnNum=[INTEGER], MacLimitMaxMac=[INTEGER], L2IfPortName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMacLimitOverThresholdAlarmResume: OID [oid] MAC address learning is resumed. (L2IfNum=[INTEGER], MacLimitVlanId=[INTEGER], MacLimitVsiName=[OCTET], L2PortNum=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], MacDynAddressLearnNum=[INTEGER], MacLimitMaxMac=[INTEGER], L2IfPortName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpVlanAlarm: OID [oid] MAC move detected, VLANID=[INTEGER], [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpQuitVlanAlarm: OID [oid] (VLAN=[INTEGER]) Interface [OCTET1] leaved from VLAN [OCTET2] because MAC move detected.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpQuitVlanResume: OID [oid] (VLAN=[INTEGER]) Interface [OCTET1] has resumed of leaved from VLAN [OCTET2] because MAC move detected.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwPortVlanSecureMacAlarm: OID [oid] Interface [INTEGER] receive insecure MAC address. (MacAddr=[OPAQUE], VLAN=[INTEGER], VsiName=[OCTET], Portindex=[INTEGER], InterfaceName=[OCTET], the port status is  [INTEGER]. (1 restrict;2 protect;3 error-down))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwSlotMacUsageRaisingThreshold:OID [OID] The MAC Address usage exceeds the threshold. (MacUsageIndex=[INTEGER1], BaseTrapType=[INTEGER2], TrapSeverity=[INTEGER3], BaseTrapCause=[INTEGER4], MacUsage=[INTEGER5], MacUsageThreshold=[INTEGER6], PhysicalName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwSlotMacUsageFallingThreshold: OID [OID] The MAC Address usage falls below the threshold. (PhysicalIndex=[INTEGER1], BaseTrapType=[INTEGER2], TrapSeverity=[INTEGER3], BaseTrapCause=[INTEGER4], PhysicalName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMacTrapHashConflictAlarm: OID [oid] A hash conflict occurs in MAC addresses. (IfIndex=[INTEGER], MacAddr=[OPAQUE], VLAN=[GAUGE], VsiName=[OCTET1], InterfaceName=[OCTET2])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwPortsecStaticFlpAlarm: OID [OID] Interface received a packet with flapping static MAC. (MACAddr=[OPAQUE], VLAN=[GAUGE], VsiName=[OCTET], IfIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwSlotMuxMacUsageAlarm: OID [OID] The MUX MAC Address usage exceeds the threshold. (EntityPhysicalIndex=[INTEGER], BaseTrapType=[INTEGER], TrapSeverity=[INTEGER], BaseTrapCause=[INTEGER], MuxMacUsage=[INTEGER], MuxMacUsageThreshold=[INTEGER], PhysicalName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwSlotMuxMacUsageResume: OID [OID] The MUX MAC Address usage falls below the threshold. (EntityPhysicalIndex=[INTEGER], BaseTrapType=[INTEGER], TrapSeverity=[INTEGER], BaseTrapCause=[INTEGER], MuxMacUsage=[INTEGER], MuxMacUsageThreshold=[INTEGER], PhysicalName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardL3FwdResLack:OID [OID] The layer 3 resource usage has reached or exceeded [Threshold]%.(EntPhysicalindex=[GAUGE],EntPhysicalName=[OCTET],Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardL3FwdResLackResume:OID [OID] The layer 3 resource usage is restored to be lower than [Threshold]%.(EntPhysicalindex=[GAUGE],EntPhysicalName=[OCTET],Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardL3ACLResLack: OID [OID] [OCTET] (Slot=[OCTET],ReasonID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardServiceFailed: OID [OID] Failed to execute the command.(Command=[OCTET],ViewName=[OCTET],ReasonID=[INTEGER],ReasonDescr=[OCTET],Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardIPv6ACLResLack:OID [OID] IPv6 cannot be enabled on the interface because of insufficient resources.(vlanif=[OCTET],Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwFwdEntryConflict:OID [OID] L3 forward entry regularly check abnormal. (Slot=[OCTET], ReasonId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwFwdEntryConflictResume:OID [OID] L3 forward entry regularly check normal.(Slot=[OCTET], ReasonId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardL3ResFull:OID [OID] The layer 3 entry resource has been exhausted.(Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwPingfFail:OID 1.3.6.1.4.1.2011.5.25.227.2.1.73 The device may fail to send ICMP reply packets because the MAC address 0000-0000-0001 exists on the device. Delete this MAC address or disable the fast ICMP reply function.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwSaidPingPktModifiedAlarm: OID [OID] The SAID PING function detected that the packet modification.(InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LBDT/4/hwLdtPortLoopDetect: OID [OID] Loopback exists on interface([INTEGER1]) [OCTET1] ([OCTET2]), loopback detection status  [INTEGER2], auto loop detection for trap only on VLAN [OCTET3]. (Status 1 normal; 2 block; 3 shutdown; 4 trap; 5 nolearn; 6 quitvlan)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LBDT/4/hwLdtPortLoopDetectRecovery: OID [OID] Loopback is removed on interface([INTEGER1])[OCTET], loopback detection status  [INTEGER2]. (1 normal; 2 block; 3 shutdown; 4 trap; 5 nolearn; 6 quitvlan)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpEnabled: OID [oid] Global LLDP is enabled.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpDisabled: OID [oid] Global LLDP is disabled.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpLocManIPAddrChange: OID [oid] Local management address is changed. (LocManAddr=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LLDP/4/hwLldpRateExcessive: OID [oid] The rate of received PDUs exceeded the threshold. (IfName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MAD/4/hwMadConflictDetect: OID [oid] Multi-active scenario is detected.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MAD/4/hwMadConflictResume: OID [oid] Multi-active scenario is merged.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/2/hwUniMbrASDiscoverAttack: OID [oid] An AS discover packet attack is detected. (DeviceName=[OCTET], ASIndex=[INTEGER], Interface=[STRING], Rate(pps)=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwUniMbrFabricPortMemberDelete: OID [oid] The member port cancel from fabric-port. (LocalDeviceName=[STRING], LocalASIndex=[INTEGER], LocalInterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwUniMbrAsServiceAbnormal: OID [oid] The service abnormal on AS. (ASDeviceName=[STRING], ASIndex=[INTEGER], Description=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/2/hwASBrdTempAlarm: OID [oid] Temperature rise over or fall below the warning alarm threshold. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASBrdTempResume: OID [oid] Temperature is restored to the normal range. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASBoardFailResume: OID [oid] Board resume from failure. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASOpticalInvalidResume: OID [oid] Optical Module resume from invalid situation. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASPowerRemove: OID [oid] Power is absent. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASPowerInsert: OID [oid] Power is present. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/2/hwASPowerInvalid: OID [oid] Power is invalid for some reason. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASPowerInvalidResume: OID [oid] Power resume from invalid situation. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASFanRemove: OID [oid] Fan has been removed. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASFanInsert: OID [oid] Fan has been inserted. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/2/hwASFanInvalid: OID [oid] Fan is invalid. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASFanInvalidResume: OID [oid] Fan resume from invalid situation. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASCPUUtilizationRising: OID [oid] CPU utilization exceeded the pre-alarm threshold. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASCPUUtilizationResume: OID [oid] CPU utilization recovered to the normal range. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASMemUtilizationRising: OID [oid] Memory usage exceeded the threshold. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASMemUtilizationResume: OID [oid] Memory usage recovered to the normal range. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASMadConflictDetect: OID [oid] Multi-active scenario is detected. (ASName=[OCTET], ASIndex=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASMadConflictResume: OID [oid] Multi-active scenario is merged. (ASName=[OCTET], ASIndex=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardL2mcResLack: OID [OID] The l2mc index resource usage has exceeded [GAUGE]%. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardL2mcResLackResume: OID [OID] The l2mc index resource usage has fallen below [GAUGE]%. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardIpmcResLack: OID [OID] The ipmc index resource usage has exceeded [GAUGE]%. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardIpmcResLackResume: OID [OID] The ipmc index resource usage has fallen below [GAUGE]%. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardMcResFull:OID [OID] The multicast entry resource has been exhausted. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardMcResLack:OID [OID] The multicast entry resource usage has exceeded [GAUGE]%. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MCAST/4/hwBoardMcResLackResume:OID [OID] The multicast entry resource usage has fallen below [GAUGE]%. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/topologyChange:OID [OID] Bridge topology change.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProTcGuarded:OID [OID] MSTP process's instance received TC message exceeded the threshold will be deferred to deal with at the end of TC protection time. (ProcessID=[INTEGER], InstanceID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/2/hwMstpProNewBridgeLostRootPrimary:OID [oid] MSTP process [process-id] is no longer the root bridge of the instance [instance-id].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpPortCountExceedThreshold: OID [OID] The number of Up STP-capable interfaces exceeded the upper threshold, which may overload the CPU. Delete redundant member interfaces. (UpperThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpPortCountExceedThresholdResume: OID [OID] The number of Up STP-capable interfaces fell below the lower threshold.(LowerThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProRootLost: OID [OID] The bridge loses the position of root bridge.(ProcessID=[ProcessID], InstanceID=[InstanceID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MSTP/4/hwMstpProRootResume: OID [OID] The bridge resumes the position of root bridge.(ProcessID=[ProcessID], InstanceID=[InstanceID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaHTTPStatsProbeFailed:OID [oid] NQA entry probe failed. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaHTTPStatsTestFailed:OID [oid] NQA entry test failed. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaHTTPStatsTestCompleted:OID [oid] NQA entry test completed. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaHTTPStatsThresholdNotification:OID [oid] NQA entry over threshold. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaFTPStatsProbeFailed:OID [oid] NQA entry probe failed. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaFTPStatsTestFailed:OID [oid] NQA entry test failed. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaFTPStatsTestCompleted:OID [oid] NQA entry test completed. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaFTPStatsThresholdNotification:OID [oid] NQA entry over threshold. (OwnerIndex=[OCTET], TestName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaReflectorStateChangeNotification:OID [oid] The reflector changed state. (nqaReflectorID=[integer], state=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaResultsTestResultChange:OID [oid] NQA entry test result changed. (OwnerIndex=[OCTET], TestName=[OCTET], ResultsIndex=[INTEGER], ResultsHop=[INTEGER], LastRecentResult=[INTEGER], CurrentResult=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfIfRxBadPacket:OID [oid] An OSPF packet that is received on a non-virtual interface cannot be parsed. (IfIpAddress=[ip-address], AddressLessIf=[interface-index], ProcessId=[process-id], RouterId=[router-id], PacketSrc=[source-ip-address], PacketType=[packet-type], InstanceName=[instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfVirtIfRxBadPacket:OID [oid] An OSPF packet that is received on a virtual interface cannot be parsed. (VirtIfAreaId=[area-id], VirtIfNeighbor=[neighbor-router-id], ProcessId=[process-id], RouterId=[router-id], PacketType=[packet-type], InstanceName=[instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfOriginateLsa:OID [oid] An LSA is generated. (LsdbAreaId=[area-id], LsdbType=[lsa-type], LsdbLsid=[lsdb-ls-id], LsdbRouterId=[lsdb-router-id], ProcessId=[process-id], RouterId=[router-id], InstanceName=[instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OSPF/4/ospfMaxAgeLsa:OID [oid] An LSA is aged. (LsdbAreaId=[area-id], LsdbType=[lsa-type], LsdbLsid=[lsdb-ls-id], LsdbRouterId=[lsdb-router-id], ProcessId=[process-id], RouterId=[router-id], InstanceName=[instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCrlSucHttp: OID [oid] get crl successfully with HTTP. (CrlUrl=[crlurl])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCrlFailHttp: OID [oid] get crl unsuccessfully with HTTP. (CrlUrl=[crlurl])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCertSucHttp: OID [oid] get certificate successfully with HTTP. (CertUrl=[certurl], CertSaveName=[certsavename])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCertFailHttp: OID [oid] get certificate unsuccessfully with HTTP. (CertUrl=[certurl], CertSaveName=[certsavename])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKICACertValid: OID [oid] the CA certificate is valid. (CACertIssuer=[issuer], CACertSubject=[subject], CACertStartTime=[starttime], CACertFinishTime=[finishtime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKILocalCertValid: OID [oid] the local certificate is valid. (LocalCertIssuer=[issuer], LocalCertSubject=[subject], LocalCertStartTime=[starttime], LocalCertFinishTime=[finishtime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKICrlValid: OID [oid] the crl is valid. (CrlIssuer=[crlissuer], CrlStartTime=[crlstarttime], CrlFinishTime=[crlfinishtime])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIRequestCertSucScep: OID [oid] Requesting certificate through SCEP succeeded. (hwSCEPUrl=[scepurl], PkiRealmName=[realmname])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIUpdateLocalCertFailScep: OID [OID] Updating the local certificate through SCEP failed. (LocalCertIssuer=[LocalCertIssuer], LocalCertSubject=[LocalCertSubject])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PKI/4/hwPKIGetCrlFailScep: OID [OID] get crl unsuccessfully with SCEP. (CrlUrl=[CrlUrl])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePowerOff: OID [oid] PD powered off. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePowerOn: OID [oid] PD powered on. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdConnected: OID [oid] PD connected. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdDisconnected: OID [oid] PD disconnected. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdClassInvalid: OID [oid] PD of an invalid class and power denied. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdClassOvercurrent: OID [oid] has detected a classfication overcurrent PD and power denied. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdPriorityDifferent: OID [oid] priority inconsistent. (IfIndex=[INTEGER], Interface=\"[OCTET]\", PortPriority=[INTEGER], PDPriority=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePowerOverUtilizationThreshold: OID [oid] PSE is overdrawing power. (SlotID=[I NTEGER], ConsumingPower=[INTEGER], PowerThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePowerOverUtilizationThresholdResume: OID [oid] PSE is not overdrawing power. (SlotID=[INTEGER], ConsumingPower=[INTEGER], PowerThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePowerAbsent: OID [OID] PoE power is absent. (FrameID=[INTEGER], SlotID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePowerAbsentResume: OID [OID] PoE power is present. (FrameID=[INTEGER], SlotID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePortFailResume: OID [oid] PoE port is recovered. (IfIndex=[INTEGER], Interface=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RDS/4/hwRadiusAuthServerUp:OID [oid] Communication with the RADIUS authentication server is resumed. (IP=[ip-address], Vpn-Instance [vpn-instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RDS/4/hwRadiusAuthServerDown:OID [oid] Communication with the RADIUS authentication server is interrupted. (IP=[ip-address], Vpn-Instance [vpn-instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RDS/4/hwRadiusAcctServerUp:OID [oid] Communication with the RADIUS accounting server is resumed. (IP=[ip-address], Vpn-Instance [vpn-instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RDS/4/hwRadiusAcctServerDown:OID [oid] Communication with the RADIUS accounting server is interrupted. (IP=[ip-address], Vpn-Instance [vpn-instance-name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RDS/4/hwRadiusAuthServerForceUp: OID [oid] The RADIUS authentication server is forced up. (IP=[IPADDR], Vpn-Instance [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RDS/4/hwRadiusAcctServerForceUp: OID [oid] The RADIUS accounting server is forced up. (IP=[IPADDR], Vpn-Instance [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwPublicIpv4PrefixThresholdExceed:OID [oid] The number of public IPv4 prefixes exceeded the threshold. (PrefixCount=[Integer], Threshold=[Integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwPublicIpv4PrefixThresholdExceedClear:OID [oid] The number of public IPv4 prefixes falls below the threshold. (PrefixCount=[Integer], Threshold=[Integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwPublicIpv6PrefixThresholdExceedClear:OID [oid] The number of public IPv6 prefixes falls below the threshold. (PrefixCount=[Integer], Threshold=[Integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortInputDiscardNotice:OID [oid] Remote unit interface input discard exceed the trap threshold. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], Statistics=[COUNTER64], TrapThreshold=[ULONG], TrapInterval=[ULONG](s))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortOutputDiscardNotice:OID [oid] Remote unit interface output discard exceed the trap threshold. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], Statistics=[COUNTER64], TrapThreshold=[ULONG], TrapInterval=[ULONG](s))",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortInputRateRising:OID [oid] Remote unit interface input flow bandwidth usage exceeded the trap threshold. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortInputRateResume:OID [oid] Remote unit interface input flow bandwidth usage was restored to the trap threshold. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortOutputRateRising:OID [oid] Remote unit interface output flow bandwidth usage exceeded the trap threshold. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortOutputRateResume:OID [oid] Remote unit interface output flow bandwidth usage was restored to the trap threshold. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], BandWidthUsage=[INTEGER], TrapThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortOpticalPowerAbnormal:OID [oid] Remote unit optical module power is abnormal. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], ReasonDescription=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortOpticalPowerResume:OID [oid] Remote unit optical module recovered from power abnormal. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET], ReasonDescription=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuMngDevFull:OID [oid] The number of remote unit exceeds the specification. (RemoteUnitEsn=[OCTET], Spec=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuMngPortRuFull:OID [oid] The number of remote units connected to Eth-Trunk exceeds the upper limit. (ConnectInterface=[OCTET], RemoteUnitEsn=[OCTET], Spec=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuMngOnline:OID [oid] The remote-unit is online. (RemoteUnitEsn=[OCTET], ConnectInterface=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuMngOffline:OID [oid] The remote-unit is offline. (RemoteUnitEsn=[OCTET], ConnectInterface=[OCTET], Reason=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortCongestAlarm: OID [oid] The remote unit interface is congested and packet loss may occur. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuPortCongestResume: OID [oid] The congestion on the remote unit interface is cleared and no packet loss occurs. (RemoteUnitEsn=[OCTET], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SCMTRAP/4/hwSrvServiceExceedThreshould: OID [oid] The service configurations on the device exceed the recommended threshold, which may result in CPU overload. Delete redundant services. (Service ID=[INTEGER], Service Description=\"[OCTET]\", Recommended Threshold=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SCMTRAP/4/hwSrvServiceExceedThreshouldResume: OID [oid] The service configurations on the device fall below the restore threshold. (Service ID=[INTEGER], Service Description=\"[OCTET]\", Recommended Threshold=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackUserInfo: OID [oid] An attack occurred. (Interface=[OCTET], SourceMAC=[OCTET], InnerVlan=[INTEGER], OuterVlan=[INTEGER], EndTime=[OCTET], TotalPackets=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackIfVlanInfo: OID [oid] An attack occurred. (Interface=[OCTET], InnerVlan=[INTEGER], OuterVlan=[INTEGER], EndTime=[OCTET], TotalPackets=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackDenyPacket: OID [oid] Some packets are dropped because an attack is detected. (Interface=[OCTET], SourceMAC=[OCTET], SourceIP=[OCTET], InnerVlan=[INTEGER], OuterVlan=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackErrorDown: OID [oid] Interface's status is changed to error-down because an attack is detected, Interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackUserAbnormal: OID [oid] The rate of packets received by a board exceeds the average rate. (board=[OCTET], UserIp=[OCTET], PacketType=[OCTET], NormalRate=[OCTET], ActualRate=[INTEGER]pps)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSEntryCheck: OID [oid] Arp entry attack. (SourceInterface=[OCTET], SourceIP=[OCTET], SourceMAC=[OCTET], OuterVlan=[INTEGER], InnerVlan=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSPacketCheck: OID [oid] Invalid packet. (SourceInterface=[OCTET], SourceIP=[OCTET], SourceMAC=[OCTET], OuterVlan=[INTEGER], InnerVlan=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSDaiDropALarm: OID [oid] The packet number dropped by DAI reaches [INTEGER], exceed the alarm threshold [INTEGER], Interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPGlobalSpeedLimitALarm: OID [oid] The global arp packet speed exceed the speed-limit value configured [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPIfSpeedLimitALarm: OID [oid] The interface arp packet speed exceed the speed-limit value configured [INTEGER], interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPVlanSpeedLimitALarm: OID [oid] The vlan arp packet speed exceed the speed-limit value configured [INTEGER1], Vlan [INTEGER2].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwArpSourceIpSpeedLimitALarm: OID [oid] The arp packet speed with source ip [OCTET] exceed the speed-limit value configured [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwArpIfRateLimitBlockALarm: OID [oid] All arp packets will be blocked on interface [OCTET], block time [INTEGER] seconds.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSDaiBDDropALarm: OID [oid] The packet dropped by DAI exceeds the alarm threshold. (DroppedNum=[INTEGER], Threshold=[INTEGER], BD=[INTEGER], PacketInfo=[OCTET]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSDaiVlanDropALarm: OID [oid] The packet dropped by DAI exceeds the alarm threshold. (DroppedNum=[INTEGER], Threshold=[INTEGER], VLAN=[INTEGER], PacketInfo=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIPSGDropALarm: OID [oid] The packet number dropped by IPSG reaches [INTEGER1], exceed the alarm threshold [INTEGER2], interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIPSGVlanDropALarm:OID [oid] The packet dropped by IPSG exceeds the alarm threshold. (DroppedNum=[INTEGER], Threshold=[INTEGER], VLAN=[INTEGER], PacketInfo=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIPSGv4ResourceALarm: OID [oid] The usage of IPSGv4 rule resources reached [INTEGER]%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIPSGv4ResourceResume: OID [oid] The usage of IPSGv4 rule resources fell below [INTEGER]%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIPSGv6ResourceALarm: OID [oid] The usage of IPSGv6 rule resources reached [INTEGER]%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIPSGv6ResourceResume: OID [oid] The usage of IPSGv6 rule resources fell below [INTEGER]%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwIcmpGlobalDropALarm: OID [oid]. Global icmp packet speed exceed the speed-limit value configured [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwICMPIfDropALarm: OID [oid] Interface icmp packet speed exceed the speed-limit value configured [INTEGER], Interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackPortAtk: OID [oid] An port attack occurred. (Interface=[OCTET], Protocol=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwXQoSStormControlTrap:STORMCONTROL  OID [oid],StormControlAlarm. (IfIndex=[INTEGER], BroadcastMinRate=[INTEGER], BroadcastMaxRate=[INTEGER], MulticastMinRate=[INTEGER], MulticastMaxRate=[INTEGER], Action=[INTEGER], Interval=[INTEGER], Status=[INTEGER], UnicastMinRate=[INTEGER], UnicastMaxRate=[INTEGER], BroadcastMode=[INTEGER], MulticastMode=[INTEGER], UnicastMode=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwXQoSStormControlTrapExt:STORMCONTROL  OID [oid] StormControlAlarm. (IfIndex=[INTEGER], IfName=[OCTET], BroadcastMinRate=[INTEGER], BroadcastMaxRate=[INTEGER], MulticastMinRate=[INTEGER], MulticastMaxRate=[INTEGER], Action=[INTEGER], Interval=[INTEGER], Status=[INTEGER], UnicastMinRate=[INTEGER], UnicastMaxRate=[INTEGER], BroadcastMode=[INTEGER], MulticastMode=[INTEGER], UnicastMode=[INTEGER], BroadcastRate=[INTEGER], MulticastRate=[INTEGER], UnicastRate=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwXQoSTrafficSuppressionTrap: OID [oid] Incoming packet loss occurs due to traffic suppression. (IfIndex=[INTEGER], IfName=[OCTET], BroadcastPktDropped=[OCTET], MulticastPktDropped=[OCTET], UnicastPktDropped=[OCTET], KnownMulticastPktDropped=[OCTET], KnownUnicastPktDropped=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwOlcStartAlarm: OID [oid] CPU overload control start in slot [OCTET]. (Threshold1=[INTEGER]%, CurrentCpuUsage=[INTEGER]%, Cycle=[INTEGER]s)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwOlcStopAlarm: OID [oid] CPU overload control stop in slot [OCTET]. (Threshold1=[INTEGER]%, CurrentCpuUsage=[INTEGER]%, Cycle=[INTEGER]s)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwWeakEAConfigAlarm: OID [OID] Insecure encryption algorithms exist on the device.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwSSHAttackAlarm:OID [oid] SSH attack occurred.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/hwSNMPLockThreshold:OID [oid] The number of unauthorized users reached the upper threshold of the lock queue. (FallingThreshold=[INTEGER], RaisingThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SNMP/4/hwSNMPLockThresholdResume:OID [oid] The number of unauthorized users fell back to the lower threshold of the lock queue. (FallingThreshold=[INTEGER], RaisingThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SOCKET/4/hwTCPMD5AuthenFail:OID [oid] MD5 authentication failed. (SourceAddress=[IPADDR], SourcePort=[INTEGER], ForeignAddress=[IPADDR], ForeignPort=[INTEGER], Protocol=[OCTET], VrfName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SOCKET/4/hwTCPBindPort:OID [oid] The TCP port was bound to socket. (TaskName=[OCTET], SocketID=[INTEGER], PortNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwEntityOnline: OID [OID] fan plug in. (EntityPhysicalIndex[INTEGER1], BaseTrapSeverity=[INTEGER2], BaseTrapProbableCause=[INTEGER3], BaseTrapEventType=[INTEGER4], EntPhysicalContainedIn=[INTEGER5], EntPhysicalName=[OCTET1], RelativeResource=[OCTET2], ReasonDescription=[OCTET3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwTempRisingResume: OID [OID] temperature over major threshold resumes. (EntityPhysicalIndex=[INTEGER1], BaseThresholdEntry_entPhysicalIndex=[INTEGER2], BaseThresholdEntry_hwBaseThresholdType=[INTEGER3], BaseThresholdEntry_hwBaseThresholdIndex=[INTEGER4], BaseTrapSeverity=[INTEGER5], BaseTrapProbableCause=[INTEGER6], BaseTrapEventType=[INTEGER7], EntPhysicalName=[OCTET], BaseThresholdValue=[INTEGER8], BaseThresholdUnit=[INTEGER9], BaseThresholdHighWarning=[INTEGER10], BaseThresholdHighCritical=[INTEGER11])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwTempFallingResume: OID [OID] temperature below minor threshold resumes. (EntityPhysicalIndex=[INTEGER1], BaseThresholdEntry_entPhysicalIndex=[INTEGER2], BaseThresholdEntry_hwBaseThresholdType=[INTEGER3], BaseThresholdEntry_hwBaseThresholdIndex=[INTEGER4], BaseTrapSeverity=[INTEGER5], BaseTrapProbableCause=[INTEGER6], BaseTrapEventType=[INTEGER7], EntPhysicalName=[OCTET], BaseThresholdValue=[INTEGER8], BaseThresholdUnit=[INTEGER9], BaseThresholdLowCritical=[INTEGER10], BaseThresholdLowWarning=[INTEGER11])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwPortPhysicalEthHalfDuplexAlarm: OID [OID] The port works in half duplex mode. (EntityPhysicalIndex=[INTEGER1], BaseTrapSeverity=[INTEGER2], BaseTrapProbableCause=[INTEGER3], BaseTrapEventType=[INTEGER4], EntPhysicalName=[OCTET1], RelativeResource=[OCTET2])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwPortPhysicalEthFullDuplexClear: OID [oid] The port works in full duplex mode. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalName=[OCTET],RelativeResource=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/2/hwEntityInvalid: OID [oid] Power is abnormal. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalContainedIn=[INTEGER], EntPhysicalName=[OCTET], RelativeResource=[OCTET], ReasonDescription=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwEntityInvalid: OID [oid] u-disk plug in. (EntityPhysicalIndex=[INTEGER1], BaseTrapSeverity=[INTEGER2], BaseTrapProbableCause=[INTEGER3], BaseTrapEventType=[INTEGER4], EntPhysicalContainedIn=[INTEGER5], EntPhysicalName=[OCTET1], RelativeResource=[OCTET2], ReasonDescription=[OCTET3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwEntityResume: OID [OID] temperature chip resume.(EntityPhysicalIndex[INTEGER1], BaseTrapSeverity=[INTEGER2], BaseTrapProbableCause=[INTEGER3], BaseTrapEventType=[INTEGER4], EntPhysicalContainedIn=[INTEGER5], EntPhysicalName=[OCTET1], RelativeResource=\"[OCTET2]\", ReasonDescription=\"[OCTET3]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SRM/4/hwOpticalPowerResume: OID [oid] Optical module recovered from power abnormal. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalContainedIn=[INTEGER], EntPhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SSPADP/4/hwPatchDelNeedReStartTrap: OID [OID] The device needs to restart after the patch is deleted.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SW_SNPG/4/hwMCastTableLoadAbnormalNotify:[OID] Multicast table of router was full.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SW_SNPG/4/hwMCastTableLoadAbnormalResume:[OID] Multicast table of router was normal.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwSysClockChangedNotification:OID [oid] System clock changed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwSysReloadNotification:[OID] Reload operation completed",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwPatchErrorTrap:OID [oid] Patch operation failed. (ErrorIndex=[GAUGE], ErrorSlot=[GAUGE], PatchIndex=[GAUGE], ErrorCode=[INTEGER], PatchFileName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwPatchActiveOverTimeTrap:OID [oid] The patch is active for 24 hours.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/2/hwPatchMalfunctionComebackTrap:OID [oid] The patch fault is removed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwSysIssuNotification:OID [OID] ISSU upgrade complete. (issuState=[integer], issuConditionCheck=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSRES/4/hwSysResourceThresholdExceed:OID [oid] The whole device system resource exceeded the threshold. (Service=[INTEGER], ResType=[INTEGER], ServiceIndex=[STRING], Description=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSRES/4/hwSysResourceThresholdExceedResume:OID [oid] The whole device system resource fell from the threshold. (Service=[INTEGER], ResType=[INTEGER], ServiceIndex=[STRING], Description=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSRES/4/hwSysSecureRiskWarning: OID [oid] Secure risk warning.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSRES/4/hwSysSecureRiskWarningClear: OID [oid] Secure risk warning clear.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/4/hwExtTrunkMemberCountExceedThreshold: OID [OID] The number of members of the Eth-Trunk in LACP mode exceeded the upper threshold.(UpperThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TRUNK/4/hwExtTrunkMemberCountExceedThresholdResume: OID [OID] The number of members of the Eth-Trunk in LACP mode fell below the lower threshold.(LowerThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstPVNumResumed: OID [OID] The limit of port-VLAN resumed. (entPhysicalIndex=[ULONG], entPhysicalName=[STRING], MaxNum=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstTrapInvalidPV:OID [OID] The number of VLANs that do not participate in calculation in the VBST packets received by interface is [ULONG]. (interface name=[STRING], vlan id=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstTrunkPVNumExceeded:OID [OID] The number of port VLANs of Eth-Trunk exceeds the limit of VBST. (max=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstTrunkPVNumResumed:OID [OID] The number of port VLANs of Eth-Trunk falls below the limit of VBST. (max=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VCMP/4/hwVcmpServerMacConflict: OID [oid] More than one server exists in the VCMP domain. (VcmpDeviceMac=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VCMP/4/hwVcmpRevisionConflict: OID [oid]  A server received a VCMP packet with a higher revision number. (VcmpDeviceMac=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VFS/4/hwFlhOperNotification:OID [oid] Copy operation completed. (CopyIndex=[integer], CopyStatus=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VFS/4/hwFlhSyncSuccessNotification:OID [oid] Copy operation success. (CopyIndex=[integer], SyncSourceFile=[OCTET], SyncDestinationFile=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VFS/4/hwFlhSyncFailNotification:OID [oid] Copy operation failed. (CopyIndex=[integer], SyncSourceFile=[OCTET], SyncDestinationFile=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalServerUp:OID [OID] The portal server is up.(IP [IPADDR] Vpn-Instance [OCTET]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalServerDown:OID [OID] The portal server is down.(IP [IPADDR] Vpn-Instance [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalMaxUserAlarm: OID [OID] The number of portal users reached the maximum.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalUserClearAlarm: OID [OID] The Portal Max User Alarm is cleared.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalPassDNS: OID [OID] DNS packets are allowed to pass through during Portal authentication.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwMaxUclGroupIpNumAlarm: OID [OID] The number of dynamic ucl group is reaching the max.(CurrentNum=[INTEGER], Threshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwMaxUclGroupIpNumClearAlarm: OID [OID] The max dynamic ucl group alarm is cleared.(CurrentNum=[INTEGER], Threshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwIPGroupChannelUp:OID [OID] The state of ip group channel is up.(IPAddress=[OCTET], PortName=[INTEGER], PkiDomain=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwIPGroupChannelDown: OID [OID] The state of ip group channel is down.(IPAddress=[OCTET], PortName=[INTEGER], PkiDomain=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ADPVXLAN/4/hwNotsuppDecapVxlanFragPackets:OID [OID] The slot does not support to decapsulate VXLAN fragments.(Slot=[OCTET1],Vni=[INTEGER],SourceIP=[OCTET2],PeerIP=[OCTET3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ADPVXLAN/4/hwVxlanTnlCfgFailed:OID [OID] Failed to add VXLAN tunnel table due to hash conflict.(Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ADPVXLAN/4/hwNotsuppDecapVxlanPackets:OID [OID] The slot does not support to encapsulate and decapsulate VXLAN packets.(Slot=[OCTET1],Vni=[INTEGER],SourceIP=[OCTET2],PeerIP=[OCTET3])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsNormalNotify: OID [oid] The AS recovers from a communication failure. (AS Index=[INTEGER], AS Name=[STRING], AS Model=[STRING], AS MAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsAddOffLineNotify: OID [oid] The AS is added offline. (AS Index=[INTEGER], AS Name=[STRING], AS Model=[STRING], AS MAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsDelOffLineNotify: OID [oid] The AS is deleted offline. (AS Index=[INTEGER], AS Name=[STRING], AS Model=[STRING], AS MAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsPortStateChangeToDownNotify: OID [oid] AS interface turned into DOWN state. (AS Index=[INTEGER], AS IfIndex=[INTEGER], AS Name=[STRING], Slot Model=[STRING], AS MAC=[OPAQUE], Interface=[STRING], ifAdminStatus=[INTEGER], ifOperStatus=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsPortStateChangeToUpNotify: OID [oid] AS interface turned into UP state. (AS Index=[INTEGER], AS IfIndex=[INTEGER], AS Name=[STRING], Slot Model=[STRING], AS MAC=[OPAQUE], Interface=[STRING], ifAdminStatus=[INTEGER], ifOperStatus=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsFullNotify: OID [oid] The AS capacity on the Parent is full. (AS Name=[STRING], AS Model=[STRING], AS MAC=[OPAQUE], Maximum AS Number=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsBoardAddNotify: OID [oid] A board is added into AS slot. (AS Index=[INTEGER], AS Name=[STRING], Added Slot Model=[STRING], Added Slot ID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsBoardDeleteNotify: OID [oid] A board is deleted from AS slot. (AS Index=[INTEGER], AS Name=[STRING], Deleted Slot Model=[STRING], Deleted Slot ID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsBoardPlugInNotify: OID [oid] A board is installed into AS slot. (AS Index=[INTEGER], AS Name=[STRING], Plugged in Slot Model=[STRING], Plugged in Slot ID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsBoardPlugOutNotify: OID [oid] A board is removed from AS slot. (AS Index=[INTEGER], AS Name=[STRING], Pulled Out Slot Model=[STRING], Pulled Out Slot ID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsComboPortTypeChangeNotify: OID [oid] The type of AS interface changed. (AS Index=[INTEGER], AS IfIndex=[INTEGER], AS Name=[STRING], Interface=[STRING], ifType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ASMNG/4/hwAsSysmacSwitchCfgErrNotify: OID [oid] An error occurs in the configuration of AS system MAC switching delay. (AS Name=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/2/hwEntityDyingGasp: OID [OID] Dying Gasp event is occurred. (MacAddress=\"[OCTET]\", ReasonCode=\"[INTEGER]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceFailed: OID [oid] The state of clock source is failed. (hwClockSrcCfgChassisIndex = [integer], hwClockSrcCfgSourceTypeIndex = [integer], hwClockSrcCfgSourceIndex = [integer], hwClockChassisId = [integer], hwClockCurSourceName = [STRING], hwClockCfgSourceState = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceValid: OID [oid] The state of clock source is valid.(hwClockSrcCfgChassisIndex = [integer], hwClockSrcCfgSourceTypeIndex = [integer], hwClockSrcCfgSourceIndex = [integer], hwClockChassisId = [integer], hwClockCurSourceName = [STRING], hwClockCfgSourceState = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceFreqCheckResume:OID [oid] The check of frequence normal notification. (hwClockSrcCfgChassisIndex=[integer], hwClockSrcCfgSourceTypeIndex=[integer], hwClockSrcCfgSourceIndex=[integer], hwClockChassisId=[integer], hwClockCurSourceName=[STRING], hwClockSrcCfgFreqCheckResult=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceOutputBelowThresholdResume:OID [oid] The SSM of output above threshold notification. (hwClockAttributeChassisIndex=[integer], hwClockChassisId =[integer], hwClockPllId=[integer], hwClockAttributeOutThreshold=[integer], hwClockAttributeOutValue=[integer], hwClockCurSourceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceSwitch: OID [oid] Clock source switch notification. (hwClockSrcSelChassisIndex = [integer],hwClockSrcSelType = [integer], hwClockChassisId = [integer], hwClockPllId = [integer], hwClockLastSourceName = [STRING], hwClockCurSourceName = [STRING], hwClockSourceSelMode = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceSysClkLockModeChange: OID [oid] The work mode of system clock source change notification. (hwClockAttributeChassisIndex = [integer], hwClockChassisId = [integer], hwClockSourceOldWorkMode = [integer], hwClockAttributeSysClkLockMode = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceStateChange: OID [oid] The state of clock source change notification. (hwClockSrcCfgChassisIndex = [integer], hwClockSrcCfgSourceTypeIndex = [integer], hwClockSrcCfgSourceIndex = [integer], hwClockChassisId = [integer], hwClockCurSourceName = [STRING], hwClockOldSourceState = [integer], hwClockSrcCfgSourceState = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceFreqCheck: OID [oid] The check of frequence abnormal notification. (hwClockSrcCfgChassisIndex = [integer], hwClockSrcCfgSourceTypeIndex = [integer], hwClockSrcCfgSourceIndex = [integer], hwClockChassisId = [integer], hwClockCurSourceName = [STRING], hwClockSrcCfgFreqCheckResult = [integer]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockSourceOutputBelowThreshold: OID [oid] The SSM of output below threshold notification.(hwClockAttributeChassisIndex = [integer], hwClockChassisId = [integer], hwClockPllId = [integer], hwClockAttributeOutThreshold = [integer], hwClockAttributeOutValue = [integer], hwClockCurSourceName = [STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockNotInLockedMode: OID [oid] The work mode of system clock is not in locked mode.(hwClockAttributeChassisIndex = [integer], hwClockChassisId = [integer],hwClockSourceSysClkWorkMode = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CLKMIB/4/hwClockInLockedMode: OID [oid] The work mode of system clock is in locked mode.(hwClockAttributeChassisIndex = [integer], hwClockChassisId = [integer],hwClockSourceSysClkWorkMode = [integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENERGY/4/hwEnergyDevChangeToSleep: OID [oid] The device [INTEGER] enters sleeping mode.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCardPortInvalid: OID [oid] Card port is invalid. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwIntegratedPowerFault:OID [oid] Integrated power failure. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwIntegratedPowerFaultResume:OID [oid] Integrated power resume from failure. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBatteryFull:OID [oid] Battery is fully charged. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwBatteryGroupFault: OID [oid] A battery group failed. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBatteryGroupFaultResume: OID [oid] A battery group recovered. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwBatteryFault: OID [oid] A battery failed. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBatteryFaultResume: OID [oid] A battery recovered. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBatteryMinorFaultResume: OID [oid] A minor alarm of a battery fault is cleared. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardPortsConflict: OID [oid] Some ports on the board and subcard conflict with each other. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/4/hwBoardUpCoverAlarm:OID [oid] The cover is opened.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/4/hwBoardUpCoverResume:OID [oid] The cover is closed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwY1731AisDefectAlarm: OID [OID] MEP enters AIS defect condition. (MdIndex=[INTEGER], MaIndex=[INTEGER], MdName=[STRING], MaName=[STRING], MepID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwY1731AisDefectAlarmRecovery: OID [OID] MEP exits AIS defect condition. (MdIndex=[INTEGER], MaIndex=[INTEGER], MdName=[STRING], MaName=[STRING], MepID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwY1731AisExceedMaxPktNumCleared:OID [OID] The number of AIS packets transmitted in one second under the maximum.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwY1731TestIdStatistic: OID [OID] The Y.1731 statistic value exceeded the upper limit value. (TestID=[GAUGE], Type=[STRING], Value=[INTEGER], UpperLimitThreshold=[INTEGER], LowerLimitThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM_Y1731/4/hwY1731TestIdStatisticClear: OID [OID] The Y.1731 statistic value fell below the lower limit value. (TestID=[GAUGE], Type=[STRING], Value=[INTEGER], UpperLimitThreshold=[INTEGER], LowerLimitThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwETrunkStatusChange:OID [oid] The status of an E-Trunk changed.(Index=[integer], State=[integer], Reason=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ETRUNK/4/hwETrunkMemberStatusChange:OID [oid] The status of an E-Trunk member changed. (E-Trunk ID=[integer], Member type=[integer], Member ID=[integer], Member status=[integer], Status reason=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "HSB/4/hwEsapHsbStatusNotification: OID [oid] Hot Standby Group status change trap.(HsbIndex=[hsbindex],HsbGroupId=[hsbgroupid],Time=[time], EsapHsbBasicEventDescription=[eventdescription])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/2/hwIfMonitorHalfduplexRising: OID [oid] The work mode is half duplex. (hwIfMonitorIndex=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/2/hwPortErrorRateExceed: OID [OID] The interface rate of incoming error packets exceeded the trap threshold, which may affect forwarding. Handle it as soon as possible. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], ErrorRate=[OCTET], TrapThreshold=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwSubIfNumExceededSpecAlarmResume: OID [OID] The number of subinterfaces on the switch falls below the limit. (SubIfSpec=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwCableSnrAbnormal:OID [oid] The current network cable is of poor quality, and there is a risk of packet loss. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwCableSnrNormal:OID [OID] The current network cable is of good quality. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwCableSnrDetectNotSupport:OID [OID] The port goes down, and the network cable quality cannot be detected. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwVxlanTrunkHashNotSupport:OID [oid] The Eth-Trunk cannot function normally as an outbound interface for vxlan packets when IP address-based load balancing is configured. (InterfaceIndex=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPortLRMStateAbnormal: OID [OID] The interface does not support the LRM optical module. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPortSfpNotSupportSingleFiber:OID [OID] The optical module used by the port does not support single-fiber. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwPortSfpWorkOnlyNonNego:OID [OID] A 1000M optical module has been installed and the port can work only at 1000 Mbit/s in non-auto-negotiation mode. Configure the connected port to work at 1000 Mbit/s forcibly. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/isisLSPTooLargeToPropagate:OID [oid] The length of the PDU to be sent is greater than the MTU. (sysInstance=[integer], sysInstanceofLevel=[integer], sysLevel=[integer], sysInstanceofCircIfIndex=[integer], circIndex=[integer], circIfIndex=[integer], lspSizeSupport=[integer], pduLspId=[opaque])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPV/4/hwLspPingProbe: OID [oid] The trap of LSP ping test.(hwLspTunnelID=[INTEGER], hwLspSenderAddress=[INTEGER], hwLspEndPointAddress=[INTEGER], hwLspTTL=[INTEGER], hwLspHandle=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPV/4/hwLspTraceProbe: OID [oid] The trap of LSP trace test.(hwLspTunnelID=[INTEGER], hwLspSenderAddress=[INTEGER], hwLspEndPointAddress=[INTEGER], hwLspTTL=[INTEGER], hwLspHandle=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPV/4/hwLspPingIPv4VpnProbe: OID [oid] The trap of IPv4 VPN LSP ping test.(hwLspIPv4VpnName=[STRING], hwLspIPv4VpnSrcAddr=[INTEGER], hwLspIPv4VpnDstAddr=[INTEGER], hwLspTTL=[INTEGER], hwLspHandle=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwMuxVlanGroupCountExceedThreshold: OID [oid] The number of group VLANs of the MUX-VLAN's primary VLAN exceeded the upper threshold. (PrincipalVLANId=[INTEGER], UpperThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwMuxVlanGroupCountExceedThresholdResume: OID [oid] The number of group VLANs of the MUX-VLAN's primary VLAN fell below the lower threshold. (PrincipalVLANId=[INTEGER], LowerThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwVlantransCountExceedThreshold: OID [oid] The number of vlan mapping or vlan stacking configurations on the interface exceeded the upper threshold. (PortIndex=[INTEGER], UpperThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IF/4/hwVlantransCountExceedThresholdResume: OID [oid] The number of vlan mapping or vlan stacking configurations on the interface fell below the lower threshold. (PortIndex=[INTEGER], LowerThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpVsiAlarm: OID [OID] MAC move detected, VSI-Name=[OCTET], [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpBdAlarm: OID [OID] MAC move detected, bridge-domain ID=[GAUGE], original-port=[OCTET1], flapping-port 1=[OCTET2], flapping-port 2=[OCTET3], [OCTET4].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwVplsVcDeleted:OID [oid] The VPLS VC has been deleted. (VsiName=[STRING], PwId=[GAUGE], RemoteIp=[IPADDR], PwType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwVplsVcStatusChange:OID [OID] The status of the VPLS VC changed. (VsiName=[STRING], PwId=[GAUGE], RemoteIp=[IPADDR], HWL2VpnStateChangeReason=[INTEGER], HWPwState=[INTEGER], HWPwWorkingState=[INTEGER], SysUpTime=[TIMETICK])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwVplsVsiDeleted:OID [oid] The VPLS VSI has been deleted. (VsiName=[STRING], VsiId=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/2/hwVplsVcBackup:OID [oid] The status of the VPLS VC turned BACKUP. (VsiName=[STRING], PwId=[GAUGE], RemoteIp=[IPADDR], PwType=[INTEGER], HWL2VpnStateChangeReason=[INTEGER], SysUpTime=[TIMETICK])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwPWVcSwitchWtoP:OID [oid] The status of the PWE3 VC turned protecting from working. ( VcId=[GAUGE], VcType=[INTEGER], CtrlWord=[INTEGER], SecondaryPwId=[GAUGE], HWL2VpnStateChangeReason=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwPWVcSwitchPtoW:OID [oid] The status of the PWE3 VC turned working from protecting. (VcId=[GAUGE], VcType=[INTEGER], CtrlWord=[INTEGER], PrimaryPwId=[GAUGE], HWL2VpnStateChangeReason=[INTEGER], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwPWVcDeleted:OID [oid] The PWE3 VC has been deleted. (VcId=[GAUGE], VcType=[INTEGER], PeerAddress=[IPADDR], InterfaceIndex=[INTEGER], VcInboundLabel=[GAUGE], VcOutboundLabel=[GAUGE], SecondaryPw=[INTEGER], InterfaceName=[STRING], SwitchVcId=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwSvcDeleted:OID [oid] The SVC has been deleted. (InterfaceIndex=[INTEGER], InterfaceIndex=[INTEGER], SvcId=[GAUGE], SVcType=[INTEGER], PeerAddress=[IPADDR], SvcInboundLabel=[GAUGE], SvcOutboundLabel=[GAUGE], InterfaceName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2V/4/hwPWVcStatusChange:OID [oid] The active state of the PWE3 VC changed. (VcId=[GAUGE], VcType=[INTEGER], PeerAddress=[IPADDR], VcStatus=[INTEGER], ActiveState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBfdConfigIntervalShort: OID [oid] The interval for receiving or sending BFD packets is too small, and the BFD session may flap. (LocalDis=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3VPN/4/hwTnl2VpnTrapEvent:OID [oid] The tunnel up/down event is occurred. (VpnIndex=[gauge], NextHop=[ipaddr], Ckey=[gauge], TrapType=[gauge])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/mplsLdpInitSessionThresholdExceeded: [oid] The number of failures in LDP session negotiation reached threshold. (LdpId=[OPAQUE], LdpEntityIndex=[GAUGE], Times=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LDP/4/mplsLdpPathVectorLimitMismatch:OID [oid] PVL mismatch between entities. (PVLimitValue=[threshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/mplsXCUp:OID [oid] LSP went Up. (BeginLspIndex=[octet].[octet].[octet], EndLspIndex=[octet].[octet].[octet])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/mplsXCDown:OID [oid] LSP went Down. (BeginLspIndex=[octet].[octet].[octet], EndLspIndex=[octet].[octet].[octet])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/mplsTunnelRerouted: OID [oid] Tunnel Re-routed.(SessionTunnelId=[integer], LocalLspId=[integer], IngressLsrId=[integer], EgressLsrId=[integer], MplsTunnelAdminStatus=[integer], MplsTunnelOperStatus=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/mplsTunnelReoptimized: OID [oid] Tunnel Re-Optimized.(SessionTunnelId=[integer], LocalLspId=[integer], IngressLsrId=[integer], EgressLsrId=[integer], MplsTunnelAdminStatus=[integer], MplsTunnelOperStatus=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/hwMplsTunnelChangeBw:OID [oid] The bandwidth of the tunnel has changed. (SessionTunnelId=[integer1], LocalLspId=[integer2], IngressLsrId=[integer3], EgressLsrId=[integer4])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/2/hwMplsLdpVirtualTunnelUp:OID [oid] LDP virtual tunnel went Up. (VirtualTunnelIndex=[gauge][gauge], FecNodeIpAddress=[IPADDR], FecNodeMask=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/2/hwMplsLdpVirtualTunnelDown:OID [oid] LDP virtual tunnel went Down. (VirtualTunnelIndex=[gauge], FecNodeIpAddress=[IPADDR], FecNodeMask=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/hwMplsDynamicLabelThresholdExceed:OID [oid] The dynamic label usage exceeds the threshold. BGP, LDP, RSVP TE, or MPLS VPN creation will be affected. ( hwMplsDynamicLabelTotalCount=[INTEGER], hwMplsDynamicLabelCurrentCount=[INTEGER], hwMplsDynamicLabelThresholdUpperLimit=[INTEGER], hwMplsDynamicLabelThresholdLowerLimit=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LSPM/4/hwMplsDynamicLabelThresholdExceedClear:OID [oid] The dynamic label usage falls from the threshold. (hwMplsDynamicLabelTotalCount=[INTEGER], hwMplsDynamicLabelCurrentCount=[INTEGER], hwMplsDynamicLabelThresholdUpperLimit=[INTEGER], hwMplsDynamicLabelThresholdLowerLimit=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LOOPDETECT/4/hwPortL2vpnLoopDetect: OID [OID] The port detected L2VPN loop. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET], VsiName=[OCTET], LoopPeVlan=[OCTET], LoopCeVlan=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LOOPDETECT/4/hwPortL2vpnLoopDetectRecovery: OID [OID] The detected L2VPN loop is removed. (InterfaceIndex=[INTEGER], InterfaceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASCommunicateError: OID [oid] Communication error has been detected. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityCommunicateType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MBR/4/hwASCommunicateResume: OID [oid] Resume from communication error situation. (ASName=[OCTET], ASIndex=[INTEGER], Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityCommunicateType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS/4/hwBoardMplsPhpResLack:OID [OID] PHP labels added failed because of insufficient resource. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS/4/hwBoardMplsNonSupport:OID [OID] The board does not support the MPLS function due to hardware limit, it will be reset. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS/4/hwBoardMplsFwdResLack:OID [OID] The MPLS resource usage has reached or exceeded [GAUGE]%. (EntPhysicalIndex=[GAUGE], Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS/4/hwBoardMplsFwdResLackResume:OID [OID] The MPLS resource usage is restored to be lower than [GAUGE]%. (EntPhysicalIndex=[GAUGE], Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS/4/hwBoardMplsFwdResFull: OID [OID] The MPLS entry resource has been exhausted. (Slot=[OCTET], ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MONITOR/4/CARDABNORMAL: OID [oid] Monitor card is abnormal.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MONITOR/4/CARDNORMAL: OID [oid] Monitor card is normal.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MONITOR/4/INPUTLINEABNORMAL: OID [oid] Input line [INTEGER] is abnormal.Configuration = [INTEGER] ,Current = [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MONITOR/4/INPUTLINENORMAL: OID [OID] Input line [INTEGER] is normal.Configuration = [INTEGER] ,Current = [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NSADP/4/hwNsOrigFlexFlowExceedAlarm: OID [oid] The usage of NetStream original and flexible flow entries exceeded 80%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NSADP/4/hwNsOrigFlexFlowExceedResume: OID [oid] The usage of NetStream original and flexible flow entries fell below 70%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NSADP/4/hwNsAggFlowExceedAlarm: OID [oid] The usage of NetStream aggregation flow entries exceeded 80%. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NSADP/4/hwNsAggFlowExceedResume: OID [oid] The usage of NetStream aggregation flow entries fell below 70%.(Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimInterfaceElection:OID [oid] Interface is elected to be DR. (IfIndex=[integer], IfIPverion=[integer], IfAddrType=[integer], Addr=[binary], IfName=[string], InstanceID=[integer], InstanceName=[string])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimMrtLimit:OID [oid] PIM entries cannot be created because the upper limit is crossed. (GrpAddrType=[integer], SrcAddr=[binary], GrpAddr=[binary], InstanceID=[integer], InstanceName=[string])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM/2/hwPimMrtLimitClear:OID [oid] PIM entries can be created because the number of PIM entries falls below the upper limit. (GrpAddrType=[integer], SrcAddr=[binary], GrpAddr=[binary], InstanceID=[integer], InstanceName=[string]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PIM-STD/2/PimInterfaceElection:OID [oid] Interface is elected to be DR. (IfIndex=[integer], IfIPverion=[integer], IfAddrType=[integer], Addr=[binary])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PM/4/hwPMStatisticsTaskThresholdTriggerAlarm: OID [OID] The statistics value exceeded the threshold. (StatisticsTaskName=[OCTET], StatisticsTaskName=[OCTET], StatisticsObjectType=[GAUGE], StatisticsObjectName=[OCTET], StatisticsTaskName=[OCTET], StatisticsObjectType=[GA UGE], StatisticsIndicatorID=[GAUGE], StatisticsTaskName=[OCTET], StatisticsObjectType=[GAUGE], StatisticsIndicatorID=[GAUGE], TriggerType=[integer], StatisticsCycle=[integer], TriggerHighValue=[GAUGE], TriggerLowValue=[GAUGE], CurrentHighValue=[GAUGE], CurrentLowValue=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PM/4/hwPMStatisticsTaskThresholdClearAlarm: OID [OID] The threshold alarm is cleared. (StatisticsTaskName=[OCTET], StatisticsTaskName=[OCTET], StatisticsObjectType=[GAUGE], StatisticsObjectName=[OCTET], StatisticsTaskName=[OCTET], StatisticsObjectType=[GAUGE], StatisticsIndicatorID=[GAUGE], StatisticsTaskName=[OCTET], StatisticsObjectType=[GAUGE], StatisticsIndicatorID=[GAUGE], TriggerType=[integer], StatisticsCycle=[integer], ResumeHighValue=[GAUGE], ResumeLowValue=[GAUGE], CurrentHighValue=[GAUGE], CurrentLowValue=[GAUGE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoeRpsPowerOutputAlarmResume: OID [oid] RPS power can provide PoE power for this device. (DevID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPortStateChange:OID [oid] The state of port [ULONG] changed.(portname=[STRING], currentstate=[STRING], oldstate=[STRING]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "PTP/4/hwPtpPortBmcInfoChange:OID [oid] The bmc info of port [integer] changed.(hwPtpPortName=[STRING], hwPtpPortSourcePortClockId =[STRING], hwPtpPortSourcePortNum=[integer],hwPtpPortSourceStepsRemoved =[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwL3vpnIpv6PrefixThresholdExceed:OID [OID] The number of IPv6 prefixes in the VPN instance exceeded the threshold. (VpnInstanceName=[octet], PrefixCount=[Integer], Threshold=[Integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwStrackIPInfo: OID [oid] An attack occurred. (Interface=[OCTET], SourceIP=[OCTET], InnerVlan=[INTEGER], OuterVlan=[INTEGER], EndTime=[OCTET], TotalPackets=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSGatewayConflict: OID [oid] Gateway conflict. (SourceInterface=[OCTET], SourceIP=[OCTET], SourceMAC=[OCTET], OuterVlan=[INTEGER], InnerVlan=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPMissGlobalSpeedLimitALarm: OID [oid] The global arp-miss packet speed exceed the speed-limit value configured [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPMissIfSpeedLimitALarm: OID [oid] The interface arp-miss packet speed exceed the speed-limit value configured [INTEGER], interface [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPMissVlanSpeedLimitALarm: OID [oid] The vlan arp-miss packet speed exceed the speed-limit value configured [INTEGER], Vlan [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPMissSIPSpeedLimitALarm: OID [oid] The arp-miss packet speed with source ip [OCTET] exceed the speed-limit value configured [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwArpSourceMacSpeedLimitAlarm: OID [oid] The arp packet speed with source mac [OCTET] exceed the speed-limit value configured [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwCpcarDropPacketAlarm: OID [oid] Rate of packets to CPU exceeded the CPCAR limit in slot [OCTET]. (Protocol=[OCTET], CIR/CBS=[INTEGER]/[INTEGER], ExceededPacketCount=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwEngineSessThresholdAlarm: OID [OID] The number of sessions exceeds threshold. (SessionNumber=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwEngineSessThresholdResume:OID [OID] The number of sessions fell below the upper limit. (SessionNumber=[ULONG])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwTerminalStatusAbnormal: OID [OID] The status of the terminal is abnormal. (Interface=[OCTET], SourceMAC=[OCTET], TerminalType=[OCTET], IPAddress=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwTerminalNumAlarm: OID [OID] The number of terminal entries has reached the maximum.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TPLMNG/4/hwTplmCmdExecuteSuccessfulNotify: OID [oid] AS [STRING] successfully executed the command.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL/4/hwMplsPsSwitchPtoW: OID [OID] switched to work tunnel. (IfIndex=[INTEGER], WorkTunnel=[OCTET], WorkTunnelId=[INTEGER], ProtectionTunnel=[OCTET], ProtectionTunnelId=[INTEGER], SwitchResult=[INTEGER], WorkTunnelState=[INTEGER], ProtTunnelState=[INTEGER], LocalState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "TUNNEL/4/hwMplsPsSwitchWtoP: OID [OID] switched to protection tunnel. (IfIndex=[INTEGER], WorkTunnel=[OCTET], WorkTunnelId=[INTEGER], ProtectionTunnel=[octet], ProtectionTunnelId=[INTEGER], SwitchResult=[INTEGER], WorkTunnelState=[INTEGER], ProtTunnelState=[INTEGER], LocalState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "USBLOAD/4/hwEntityInvalid: OID [oid] u-disk plug in. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalContainedIn=[INTEGER], EntPhysicalName=[OCTET], RelativeResource=[OCTET], ReasonDescription=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "USBLOAD/4/hwEntityResume: OID [oid] u-disk plug out. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalContainedIn=[INTEGER], EntPhysicalName=[OCTET], RelativeResource=[OCTET], ReasonDescription=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "UNI-TOPOMNG/4/hwTopomngLinkNormal: OID [oid] A new link is normal. (SrcMAC=[OPAQUE], SrcPort=[STRING], SrcTrunk=[INTEGER], DstMAC=[OPAQUE], DstPort=[STRING], DstTrunk=[INTEGER], Reason=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "UNI-TOPOMNG/4/hwTopomngLinkAbnormal: OID [oid] A link is abnormal. (SrcMAC=[OPAQUE], SrcPort=[STRING], SrcTrunk=[INTEGER], DstMAC=[OPAQUE], DstPort=[STRING], DstTrunk=[INTEGER], Reason=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VBST/4/hwVbstRspanCfgConflict: OID [OID] In VBST mode, the Eth-Trunk configuration conflicts with the remote observing port configuration. (Description=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "VRRP/2/vrrpTrapAuthFailure:OID [oid] VRRP failed to authentication. (IPAddress=[IPAddress], AuthErrorType=[AuthErrorType])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaNumReachWarningRestoreTrap: OID [oid] The number of stations is less than 80% of the maximum specifications.(MaxStaNum =[INTEGER], CurStaNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaNumReachMaxTrap: OID [oid] The number of stations reaches the maximum specifications.(MaxStaNum=[INTEGER],CurStaNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaNumReachMaxRestoreTrap: OID [oid] The number of stations is less than the maximum specifications.(MaxStaNum =[INTEGER], CurStaNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanCableSnrNormalTrap:OID [oid] The current network cable quality is good. (APMAC=[OPAQUE], APName=[STRING], InterfaceIndex=[INTEGER], InterfaceName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanCableSnrAbnormalTrap:OID [oid] The current network cable quality is poor, causing packet loss risks.(APMAC=[OPAQUE], APName=[STRING], InterfaceIndex=[INTEGER], InterfaceName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanCableSnrDetectNotSupportTrap:OID [OID] The port is Down, resulting in a failure to detect the network cable quality. (APMAC=[OPAQUE], APName=[STRING], InterfaceIndex=[INTEGER], InterfaceName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanShareLicAgeTrap:OID [oid] Shared licenses are aging, and this license will age after 29 days. (ACMAC=[OPAQU E], Number of shared licenses=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanShareLicAgeRestoreTrap: OID [oid] Shared licenses stop aging. (ACMAC=[OPAQUE], Number of Shared licenses=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanPoolLicAgeTrap: OID [oid] The license resource pool is aging. After the pool is aged, only the local AC license is valid. (Total number of licenses=[INTEGER], Number of local shared licenses=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanPoolLicAgeRestoreTrap: OID [oid] The license resource pool stops aging. (Total number of licenses=[INTEGER], Number of local Shared licenses=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanWapiCertificateNearlyExpiredTrap: OID [oid] The WAPI certificate is nearly expired. (SecurityProfileName=[STRING], CertType=[STRING], CertFileName=[STRING], CertStartTime=[STRING], CertEndTime=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanWapiCertificateNearlyExpiredTrapRestore: OID [oid] The alarm of the WAPI certificate reaching expiration is cleared. (SecurityProfileName=[STRING], CertType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanInsecureEncryptionAlgorithm: OID [oid] The encryption algorithm is insecure. (SecurityProfileName=[STRING], EncryptionAlgorithm=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanSecurityParaNotSetTrap: OID [oid] WLAN security parameters are not set. (Parameter=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanSecurityParaNotSetTrapRestore: OID [oid] The alarm indicating no WLAN security parameter setting is cleared. (Parameter=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApNormalTrap:OID [oid] The AP recovers or has been deleted. (APMAC=[OPAQUE], APType=[STRING], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPingResultTrap:OID [oid] AP ping result. (APMAC=[OPAQUE], APType=[STRING], APName=[STRING], SuccessCount=[INTEGER], FailureCount=[INTEGER]. AverageResponseTime=[INTEGER]ms. MinimumResponseTime=[INTEGER]ms, MaximumResponseTime=[INTEGER]ms, APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApConfigCommitTrap:OID [oid] AP is committed over. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwUnAuthorizedApRecordExistTrap:OID [oid] Unauthorized AP record exists.(Record number=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwUnAuthorizedApRecordClearTrap:OID [oid] Unauthorized AP record clear.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApCpuOverloadTrap: OID [oid] AP CPU overload notify. (APMAC=[OPAQUE], APName=[STRING], ApCpuRate=[INTEGER], the top three threads CPU occupancy are [STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApCpuOverloadRestoreTrap: OID [oid] AP CPU overload notify restore.(APMAC=[OPAQUE], APName=[STRING], ApCpuRate=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApMemoryOverloadTrap: OID [oid] AP memory overload notify.(APMAC=[OPAQUE], APName=[STRING], ApMemRate=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApMemoryOverloadRestoreTrap:OID [oid] AP memory overload notify restore.(APMAC=[OPAQUE], APName=[STRING], ApMemRate=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApStaFullTrap:OID [oid] AP has the max number of stations notify.(APMAC=[OPAQUE], APName=[STRING], FailCause=[INTEGER], PermitNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApStaFullRecoverTrap:OID [oid] AP has the max number of stations notify restore.(APMAC=[OPAQUE], APName=[STRING], FailCause=[INTEGER], CurrentNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAcDevicesSwitchTrap: OID [oid] AC has system switched notify.(APMAC=[OPAQUE], APName=[STRING], APSN=[OCTET], SwitchType=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwDyingGaspTrap: OID [oid] Dying gasp notify.(APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApTemperatureTooLowTrap:OID [oid] The AP's temperature is too low. (APMAC=[OPAQUE], APName=[STRING], Temperature=[INTEGER]\u00b0C, APID=[INTEGER], TemperaturType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApTemperatureTooLowRestoreTrap:OID [oid] The AP's temperature changes to normal. (APMAC=[OPAQUE], APName=[STRING], Temperature=[INTEGER]\u00b0C, APID=[INTEGER], TemperaturType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApTemperatureTooHighTrap:OID [oid] The AP's temperature is too high. (APMAC=[OPAQUE], APName=[STRING], Temperature=[INTEGER]\u00b0C, APID=[INTEGER], TemperaturType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApTemperatureTooHighRestoreTrap:OID [oid] The AP's temperature changes to normal. (APMAC=[OPAQUE], APName=[STRING], Temperature=[INTEGER]\u00b0C, APID=[INTEGER], TemperaturType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalRxPowerTooHighTrap:OID [oid] AP optical module received power is too high notify. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical RxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalRxPowerTooHighRestoreTrap:OID [oid] The receive power of the AP's optical module falls below the upper threshold. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical RxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalRxPowerTooLowTrap:OID [oid] AP optical module received power is too low notify. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical RxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalRxPowerTooLowRestoreTrap:OID [oid] The receive power of the AP's optical module increases above the lower threshold.(APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical RxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTemperatureTooHighTrap:OID [oid] AP optical module temperature is too high notify. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical Temperature=[INTEGER]\u00b0C, ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTemperatureTooHighRestoreTrap:OID [oid] The temperature of the AP's optical module falls below the upper threshold. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical Temperature=[INTEGER]\u00b0C, ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTemperatureTooLowTrap:OID [oid] AP optical module temperature is too low notify. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical Temperature=[INTEGER]\u00b0C, ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTemperatureTooLowRestoreTrap:OID [oid] The temperature of the AP's optical module increases above the lower threshold. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical Temperature=[INTEGER]\u00b0C, ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApNotSupportCountryCodeTrap:OID [oid] AP not support configured country code notify.(APMAC=[MacAddress], APName=[STRING], APLockCountryCode=[OCTET], APID=[INTEGER], ConfigCountryCode=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApColdBootTrap:OID [oid] The AP cold boot. (APMAC=[MacAddress], AP TYPE=[OCTET], AP Sys Name=[OCTET], AP Sys Time=[OCTET], AP Alarm name=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApColdBootRestoreTrap:OID [oid] The AP cold boot restore. (APMAC=[MacAddress], AP TYPE=[OCTET], AP Sys Name=[OCTET], AP Sys Time=[OCTET], AP Alarm name=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApHotBootTrap:OID [oid] AP hot boot. (APMAC=[OPAQUE], APType=[OCTET], APName=[OCTET], APOccurTime=[OCTET], NotifyName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApHotBootRestoreTrap:OID [oid] AP hot boot restore. (APMAC=[OPAQUE], APType=[OCTET], APName=[OCTET], APOccurTime=[OCTET], NotifyName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApCRCTooHighTrap:OID [oid] AP CRC is abnormal notify. (APMAC=[OPAQUE], APName=[STRING], APCrcErrRate=[LONG]/10000, PortType=[OCTET], PortID=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApCRCTooHighRestoreTrap:OID [oid] The number of the AP's CRC errors changes to normal.(APMAC=[OPAQUE], APName=[STRING], APCrcErrRate=[LONG]/10000, PortType=[OCTET], PortID=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApConflictApNameTrap:OID [oid] Report ap name conflict. (APMAC=[OPAQUE], APReportName=[OCTET], APOccurTime=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApLicenseTrap:OID [oid] AP License Notify. (Info = [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFmeaIICFaultTrap:OID [oid] AP IIC channel fault. (AP MAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFmeaIICFaultRestoreTrap:OID [oid] AP IIC channel fault clear. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFmeaPHYFaultTrap:OID [oid] AP PHY CMOS fault. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFmeaPHYFaultRestoreTrap:OID [oid] AP PHY CMOS fault clear. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFmeaFaultRestoreTrap:OID [oid] AP FMEA fault clear. (APMAC=[OPAQUE], APName=[STRING], FaultID=[INTEGER], Index=[INTEGER], FaultInfo=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalInsertTrap:OID [oid] AP optical insert. (APMAC=[OPAQUE], APName=[STRING], IfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalRemoveTrap:OID [oid] AP optical remove. (APMAC=[OPAQUE], APName=[STRING], IfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApReceivedInvalidArpNewTrap:OID [oid] AP received invalid arp packet notify.(APMAC=[OPAQUE], APName=[STRING], RadioID=[INTEGER], WlanID=[INTEGER], Drop Num=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApVersionMismatchTrap:OID [oid] AP software version is not match with AC software version.(APMAC=[OPAQUE], APName=[STRING], APType=[OCTET], APSoftWareVersion=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioUploadRemoteCaptureFileTrap:OID [oid] Upload remote capture file notify. (APMAC=[OPAQUE], APName=[STRING], RadioID=[INTEGER], Info = [OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwMPJoinedOnEthernetTrap:OID [oid] MP reached AC through the Ethernet port,and this MP doesn't setup mesh link in avoid of loopback.(APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwMPJoinedOnEthernetRestoreTrap: OID [oid] MP reached AC through the air,and this MP has reported 'MP joined AC through Ethernet port'warning,so restore it. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwMPPJoinedOnAirTrap:OID [oid] MPP can't reach AC through the Ethernet port,so this MPP joins AC through the air,changes itself to MP,and forbid traffic on the Ethernet port in avoid of loopback. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwMPPJoinedOnAirRestoreTrap: OID [oid] MPP reached AC through the Ethernet port,and this MP has reported 'MPP joined AC through air'warning,so restore it. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTxPowerTooHighTrap:OID [oid] AP optical module transfer power is too high notify. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical TxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTxPowerTooHighRestoreTrap:OID [oid] The transmit power of the AP's optical module falls below the upper threshold. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical TxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTxPowerTooLowTrap:OID [oid] AP optical module transfer power is too low notify. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical TxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalTxPowerTooLowRestoreTrap:OID [oid] The transfer power of the AP's optical module increases above the lower threshold. (APMAC=[MacAddress], APName=[STRING], ApIfIndex=[INTEGER], Ap Optical TxPower=[INTEGER](0.1uw), ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFanInvalidTrap:OID [oid] All functions of the fan module failed. (APMAC=[OPAQUE], APName=[STRING], ApFanIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApFanInvalidRestoreTrap:OID [oid] The fan module recovered from a complete function failure. (APMAC=[OPAQUE], APName=[STRING], ApFanIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApStorageDevRemoveTrap:OID [oid] A storage card is removed. (APMAC=[OPAQUE], APName=[STRING], ApStorageIndex=[INTEGER], ApStorageName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApStorageDevInsertTrap:OID [oid] A storage card is inserted. (APMAC=[OPAQUE], APName=[STRING], ApStorageIndex=[INTEGER], ApStorageName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePowerOffTrap:OID [oid] A port is powered off. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER], Reason=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePowerOnTrap:OID [oid] A port is powered on. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePdConnectedTrap:OID [oid] A port detects connection of a PD. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePdDisconnectedTrap:OID [oid] A port detects disconnection of a PD. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePdClassOvercurrentTrap:OID [oid] A port detects a PD whose current exceeds the threshold of the corresponding class. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePdPriorityDifferentTrap:OID [oid] The port priority is different from the PD priority. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], ApPoePdPriority=[INTEGER], ApPoePortPriority=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePowerOverUtilizationThresholdTrap:OID [oid] The power load of a PoE card exceeds the upper limit. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], ApPoeCurConsumPower=[INTEGER], ApPoeConsumPowerThreshold=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPoePowerOverUtilizationThresholdRestoreTrap:OID [oid] The power load of a PoE card falls below the upper limit. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], ApPoeCurConsumPower=[INTEGER], ApPoeConsumPowerThreshold=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApSTPAutoShutdownTrap:OID [oid] Interface has turned into DOWN state. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApSTPAutoShutdownRestoreTrap:OID [oid] Interface has turned into UP state. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalInvalidTrap:OID [oid] The optical transceiver does not work normally. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], hwWlanApOpticalFaultID=[INTEGER], APID=[INTEGER], hwWlanApOpticalFaultReason=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOpticalInvalidRestoreTrap:OID [oid] The optical transceiver has restored. (APMAC=[OPAQUE], APName=[STRING], ApIfIndex=[INTEGER], ApEntityPhysicalName=[OCTET], hwWlanApOpticalFaultID=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApVapStaFullTrap:OID [oid] VAP has the max number of stations notify.(APMAC=[OPAQUE], APName=[STRING], RADIOID=[INTEGER], WLANID=[INTEGER], FailCause=[INTEGER], PermitNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwVapStaFullRecoverTrap:OID [oid] VAP has the max number of stations notify restore.(APMAC=[OPAQUE], APName=[STRING], RADIOID=[INTEGER], WLANID=[INTEGER], FailCause=[INTEGER], CurrentNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLELowPowerTrap: OID [oid] The battery is low at the BLE site. (BLEMAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLELowPowerRestoreTrap: OID [oid] The battery recovers at the BLE site. (BLEMAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLEOfflineTrap: OID [oid] An exception occurs at the BLE site. (BLEMAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLEOfflineRestoreTrap: OID [oid] The BLE site recovers. (BLEMAC=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLEFaultyTrap: OID [oid] The AP's internal BLE module fails. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLEFaultyRestoreTrap: OID [oid] The AP's internal BLE module recovers. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPIoTCardInsertTrap:OID [oid] A iot card is inserted. (APMAC=[OPAQUE], APName=[STRING], APIotCardId=[INTEGER], APID=[INTEGER], APIotCardType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPIoTCardRemoveTrap:OID [oid] A iot card is removed. (APMAC=[OPAQUE], APName=[STRING], APIotCardId=[INTEGER], APID=[INTEGER], APIotCardType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanApSubFirmwareMismatchTrap:OID [oid] SubFirmware is not match AP version. (APMAC=[OPAQUE], APName=[STRING], APSubFirmwareName=[STRING], APSubFirmware=[INTEGER], RealVersion=[STRING], ExpectVersion=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApConfigInconsistWithActualTrap:OID [oid] The AP configuration is inconsistent with the actual attribute. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], Config=[OCTET], Reason=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLEDetachedTrap:OID [oid] The BLE site detached. (BLEMAC=[OPAQUE(hex)])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanBLEDetachedRestoreTrap:OID [oid] The BLE site detached restore. (BLEMAC=[OPAQUE(hex)])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPowerInsufficientResumeTrap:OID [oid] AP power supply insufficient resume. (APMAC=[OPAQUE], APName=[STRING], PowerWorkMode=[OCTET], ExpectPowerWorkMode=[OCTET], APID=[INTEGER], Impact=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwPortVlanSecureMacTrap:OID [oid] Interface receive insecure mac-address.(APMAC=[OPAQUE], APName=[STRING], IllegalMAC=[OPAQUE], VLANID=[INTEGER], InterfaceName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApTypeMismatchTrap:OID [oid] The configured and reported AP types are different. (APMAC=[OPAQUE], APName=[STRING], APActualType=[STRING], APConfigType=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApSoftGreDownTrap:OID [oid] AP detect softgre tunnel down notify.(APMAC=[OPAQUE], DstIP=[IPADDR], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApVersionNotRecommendedTrap:OID [oid] The AP version is not recommended for the current AC.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApVersionNotRecommendedTrapRestore:OID [oid] AP-version-not-recommended alarm Restore.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApDiskOverloadRestoreTrap:OID [oid] The Disk usage of an AP restores to the allowed range.( APMAC=[OPAQUE], APName=[STRING],APDiskThresholdWarning=[INTEGER],APDiskThresholdCurrent=[INTEGER],APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPowerLimitedTrap:OID[oid] The AP works in Limited mode due to insufficient power supply.(APMAC=[OPAQUE], APName=[STRING], PowerWorkMode=[OCTET], ExpectPowerWorkMode=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApPowerLimitedResumeTrap:OID [oid] The AP resumes from the Limited mode.(APMAC=[OPAQUE], APName=[STRING], PowerWorkMode=[OCTET], ExpectPowerWorkMode=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPIpConflictTrap: OID [oid] The AP's IP address conflicts with that of another NE. (APMAC=[OPAQUE], APID=[INTEGER], APName=[STRING], IP address=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApNumReachMaxResumeTrap:OID [oid] The number of online APs is less than the maximum specifications.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApNumReachWarningTrap:OID [oid] The number of online APs reaches 80% of the maximum specifications.(APMaxNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApNumReachWarningResumeTrap:OID [oid] The number of online APs is less than 80% of the maximum specifications.(APMaxNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPIotCardConnectServerTrap:OID [oid] The IoT card is connected to the server. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], APIotCardId=[INTEGER], APIotCardType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPIotCardTypeMatchTrap:OID [oid] The IoT card matches the configured type. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], APIotCardId=[INTEGER], APIotCardType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPFanInsertTrap:OID [oid] Fan has been inserted. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], APFanId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPPowerInsertTrap: OID [oid] Power has been inserted. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], APPowerId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPPowerFailResumeTrap: OID [oid] Power resume from failure. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], APPowerId=[INTEGER], FaultID=[INTEGER], FaultReasonDesc=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPPowerInvalidResumeTrap: OID [oid] Power resume from invalid situation. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], APPowerId=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApServiceInterruptAlertTrap: OID [oid] The AP service may be unavailable after a period of time. (Type=[OCTET], Reason=[OCTET], RemainTime=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApRTUDemoLicenseExpireTrap: OID [oid] RTU demo license is near deadline. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], RemainTime=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApTypeInfoInconsistentTrap: OID [oid] APs of the same type report different AP type attributes.  (APMAC=[OPAQUE], APType=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApEMDISessionOverloadTrap: OID [oid] The EMDI session usage on the AP is high. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], CurEmdiSessionRate=[INTEGER]%, UpperEmdiSessionThreshold=[INTEGER]%, LowerEmdiSessionThreshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApSipfpmFlowOverloadTrap: OID [oid] The iPCA flow usage on the AP is high. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], CurSipfpmFlowRate=[INTEGER]%, UpperSipfpmFlowThreshold=[INTEGER]%, LoweSipfpmFlowThreshold=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanApUpdateBeginTrap:OID [oid] AP begins to update. Do not power off the AP during the upgrade. (APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanApUpdateResultTrap:OID [oid] AP updates completely. (APMAC=[OPAQUE], APName=[STRING],UpdateResult=[INTEGER],UpdateTime=[OCTET],UpdateFileName=[OCTET],UpdateNextOper=[INTEGER], UpdateStatus=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanApUpdateUbootNotMatchTrap:OID [oid] AP uboot is not match AP version.(APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanWidsRogueDeviceTrap:OID [oid] Detected rogue devices. (Device count=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanWidsAttackDeviceTrap:OID [oid] Detected attack devices. (Device count=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanWidsNonWifiDeviceTrap:OID [oid] Detected non-Wi-Fi devices. (Device count=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanWidsAttackDetectedTrap:OID [oid] The AP detected an attacking device. (Attack device=[OPAQUE], Attack type=[STRING], Attack sub type=[STRING], Monitor AP ID=[INTEGER], Monitor AP name=[STRING], Monitor AP MAC=[OPAQUE], Frequency=[STRING], Channel=[INTEGER], SSID=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioChannelChangedTrap:OID [oid] Channel of radio is changed. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], Channel1=[OCTET], Channel2=[OCTET], CauseId=[INTEGER], CauseStr=[OCTET], PreChannel1=[OCTET], PreC-hannel2=[OCTET], APID=[INTEGER], NewChannelHasRadarChannel=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioSignalEnvDeteriorationTrap:OID [oid] Radio signal environment deteriorates. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], PER=[INTEGER]%, RetransmissionRate=[INTEGER]%, APID=[INTEGER], NoiseFloor=[INTEGER]dBm, Reason=[OCTET], BadChannel=[INTEGER], InterferenceRate=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioSignalEnvResumeTrap:OID [oid] Radio signal environment resumes. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], APID=[INTEGER] )",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApMonitorModeChangedTrap: OID [oid] The AP's working mode is changed.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], Mode=[INTEGER], PreMode=[INTEGER], APID=[INTEGER], ModeDesc=[STRING], PreModeDesc=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPCoInterfDetectedTrap: OID [oid] The co-channel interference exceeds the alarm threshold.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], APChannel=[INTEGER], APID=[INTEGER], IntfBssId=[OPAQUE], RSSI percent=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwAPCoInterfClearTrap: OID [oid] The co-channel interference alarm is cleared.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], APChannel=[INTEGER], APID=[INTEGER], IntfBssId=[OPAQUE])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwNerborInterfDetectedTrap: OID [oid] The adjacent-channel interference exceeds the alarm threshold.(APMAC=[OPAQUE], RadioID=[INTEGER],APName=[OCTET], APChannel=[INTEGER], APID=[INTEGER], IntfBssId=[OPAQUE], IntfChnl=[INTEGER], RSSI percent=[INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwNeiborInterfClearTrap: OID [oid] The adjacent-channel interference alarm is cleared.(APMAC=[OPAQUE],  RadioID=[INTEGER], APName=[OCTET], APChannel=[INTEGER], APID=[INTEGER], IntfBssId=[OPAQUE], IntfChnl=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwStaInterfDetectedTrap: OID [oid] Jam of station is detected notify.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwStaInterfClearTrap: OID [oid] Jam of station is cleared notify.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET],  APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwOtherDeviceInterfDetectedTrap: OID [oid] Jam of Other devices is detected.(APMAC=[OPAQUE], RadioID=[INTEGER],APName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwOtherDeviceInterfClearTrap: OID [oid] Jam of Other devices is cleared.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioDownTrap: OID [oid] AP radio is down notify.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], CauseId=[INTEGER], CauseStr=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioDownRecovTrap: OID [oid] AP radio down is recovered notify.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], CauseId=[INTEGER], CauseStr=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWIDSDetectRogueTrap:OID [oid] Rogue device is detected notify.( APName=[OCTET], RadioID=[INTEGER], APMAC=[OPAQUE], RogueDeviceMAC=[OPAQUE], RogueDeviceSSID=[STRING], RogueDeviceType=[INTEGER], RogueDeviceRSSI=[INTEGER], RogueDeviceChannelID=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioNotSupportChannelTrap:OID [oid] AP not support configured channel notify.(APMAC=[MacAddress],RadioID=[INTEGER], APName=[OCTET], CONFIGURED BANDWIDTH=[INTEGER], CONFIGURED CHANNEL1=[INTEGER], CONFIGURED CHANNEL2=[INTEGER], ACTUAL BANDWIDTH=[INTEGER], ACTUAL CHANNEL1=[INTEGER], ACTUAL CHANNEL2=[INTEGER], REASON=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioAntennaGainIsUnlawfulTrap:OID [oid] The EIRP is unlawful due to high antenna gain.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], ConfigAntennaGain=[INTEGER], LegitimateAntennaGain=[INTEGER], APID=[INTEGER], LegitimateEIRP=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioPowerChangedTrap:OID [oid] Power of radio is changed.(APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], ACTUAL POWER=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApAccessUserNumExceedThresholdTrap:OID [oid] AP access user number exceed threshold notify. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], UserNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApAccessUserNumExceedThresholdRecovTrap:OID [oid] AP access user number exceed threshold notify restore. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], UserNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApRoamUserNumExceedThresholdTrap:OID [oid] AP roam user number exceed threshold notify. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], UserNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApRoamUserNumExceedThresholdRecovTrap:OID [oid] AP roam user number exceed threshold notify restore. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], UserNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwRadioDownTrapFat:OID [oid] The radio changes to down. (APMAC=[OPAQUE], ApName=[OCTET], event=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwVapIGMPSnoopingBandwidthExceedTrap: OID [oid] The IGMP snooping bandwidth of VAP has reached the maximum. (APMAC=[OPAQUE], RADIOID=[INTEGER], WLANID=[INTEGER], APName=[STRING], MaxBandWidth=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwVapIGMPSnoopingUserExceedTrap: OID [oid] The IGMP snooping user of VAP has reached the maximum. (APMAC=[OPAQUE], RADIOID=[INTEGER], WLANID=[INTEGER], APName=[STRING], MaxUserNum=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwVapCreateFailTrap: OID [oid] VAP create fail.(Reason=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwVapCreateFailTrapRestore: OID [oid] VAP create fail restore.(Reason=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwVapNumReachWarningTrap: OID [oid] The number of VAPs reaches 80% of the maximum. (MaxNum=[INTEGER], CurNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaAuthErrorTrap: OID [oid] Station author is error notify.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET],StaAuthenticationMode=[INTEGER],StaFailCodeType=[OCTET],StaAuthenticationFailCause=[INTEGER],StaAuthenticationFailCauseStr=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaAssoFailTrap: OID [oid] Station association is failed notify.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET],StaFailCodeType=[OCTET],StaAuthenticationFailCause=[INTEGER], StaAssociationFailCauseStr=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanUserInvalidCerficationTrap: OID [oid] User with an invalid certificate accesses the network.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaRepititiveAttackTrap:OID [oid] STA replay attack.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaTamperAttackTrap: OID [oid] Tamper attack notify.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaLowLevelSecAttackTrap: OID [oid] Low safelevel attack notify.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaAddressRedirectionAttackTrap:OID [oid] Address redirection attack notify.(APMAC=[OPAQUE],APMAC=[OPAQUE],RadioID=[INTEGER],StaMac=[OPAQUE],APName=[OCTET],StaAssocBssid=[OPAQUE],Ssid=[OCTET], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanStaWepIdConflictTrap:OID [oid] SSID Wep key conflict notify.(APMAC=[OPAQUE],WepIDConflictTrapAPMAC=[OPAQUE],WepIDConflictTrapAPName=[OCTET],WepIDConflictTrapRadioId=[INTEGER],WepIDConflictTrapPreSSID=[OCTET],WepIDConflictTrapCurrSSID=[OCTET],WepIDConflictTrapCipherIdx=[INTEGER], APID=[INTEGER] )",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwStationIPConflictTrap: OID [oid] The IP address of the user conflicts with that of the gateway. (APMAC=[OPAQUE], StaMac=[OPAQUE], APName=[STRING], IPAddress=[STRING], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwStationIPAddressConflictTrap: OID [oid] User IP address conflict.(StaMac=[OPAQUE], APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], ConflictingStaMac=[OPAQUE], IPAddress=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApSipfpmUserFlowFullTrap: OID [oid] Reached the maximum number of iPCA flows of the STA. (STAMAC=[OPAQUE], APMAC=[OPAQUE], APName=[STRING], APID=[INTEGER], MaxUserSipfpmFlowNum=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwWlanAeroscoutLocationViaAcTrap: OID [oid] An exception occurred in the AeroScout location function (via AC). (Reason=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwPPPUserClearAlarm: OID [OID] The PPP Max User Alarm is cleared.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwIpStaticUserMixedInsertAlarm: OID [OID] The Eth-Trunk contains member ports on different types of cards, IP static user of the Eth-Trunk may be abnormal. (EntityIfIndex=[INTEGER], EntPhysicalName=[OCTET]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityRemove: OID [oid] Physical entity is removed. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityInsert: OID [oid] Physical entity is inserted. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityReset: OID [oid] Physical entity is reset. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityResetDone: OID [oid] Physical entity resetting ended. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/2/hwEntityCommunicateError: OID [oid] Communication channel failed. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityCommunicateResume: OID [oid] Communication channel recovered from a failure. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/2/hwEntityInvalid: OID [oid] Physical entity failed. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalContainedIn=[INTEGER], EntPhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityResume: OID [oid] Physical entity recovered from a failure. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER] , EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityBecomeMaster: OID [oid] Physical entity changed to the master state. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityRegSuccess: OID [oid] Physical entity registered successfully. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescription=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwTempRisingResume: OID [oid] Temperature recovered to the normal range and the high temperature alarm was cleared. (Index=[INTEGER], BaseThresholdPhyIndex=[INTEGER], ThresholdType=[INTEGER], ThresholdIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", ThresholdValue=[INTEGER], ThresholdUnit=[INTEGER], ThresholdHighWarning=[INTEGER], ThresholdHighCritical= [INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/2/hwVoltRisingAlarm: OID [oid] Voltage exceeded the upper pre-alarm limit. (Index=[INTEGER], BaseThresholdPhyIndex=[INTEGER], ThresholdType=[INTEGER], ThresholdIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", ThresholdValue=[INTEGER], ThresholdUnit=[INTEGER], ThresholdHighWarning=[INTEGER], ThresholdHighCritical= [INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwVoltRisingResume: OID [oid] Voltage recovered to the normal range and the high voltage alarm was cleared. (Index=[INTEGER], BaseThresholdPhyIndex=[INTEGER], ThresholdType=[INTEGER], ThresholdIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", ThresholdValue=[INTEGER], ThresholdUnit=[INTEGER], ThresholdHighWarning=[INTEGER], ThresholdHighCritical=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/2/hwVoltFallingAlarm: OID [oid] Voltage has fallen below the lower pre-alarm limit. (Index=[INTEGER], BaseThresholdPhyIndex=[INTEGER], ThresholdType=[INTEGER], ThresholdIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", ThresholdValue=[INTEGER], ThresholdUnit=[INTEGER], ThresholdLowWarning=[INTEGER], ThresholdLowCritical=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwVoltFallingResume: OID [oid] Voltage recovered to the normal range and the low voltage alarm was cleared. (Index=[INTEGER], BaseThresholdPhyIndex=[INTEGER], ThresholdType=[INTEGER], ThresholdIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", ThresholdValue=[INTEGER], ThresholdUnit=[INTEGER], ThresholdLowWarning=[INTEGER], ThresholdLowCritical=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwPowerInsufficiencyResume: OID [oid] The available power of the device is enough for the board. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", EntityRatedPower=[INTEGER], DevAvailablePower=[INTEGER],  DeviceTotalPower=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/2/hwPowerOff: OID [oid] The power supply is off. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwPowerOn: OID [oid] The power supply is on. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwPortPhysicalEthHalfDuplexAlarm: OID [oid] The port works in half duplex mode. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwPortPhysicalEthFullDuplexClear: OID [oid] The port works in full duplex mode. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalName=\"[STRING]\", RelativeResource=\"[STRING]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwPortPhysicalPortTypeChange: OID [oid] Physical entity port type changed. (EntityPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], EntPhysicalName=\"[OCTET]\", EntityPhysicalLastPortType=[INTEGER], EntityPhysicalCurPortType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwStorageUtilizationResume: OID [oid] Storage utilization resumed to normal range. (Index=[INTEGER], BaseUsagePhyIndex=[INTEGER], UsageType=[INTEGER], UsageIndex=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", UsageValue=[INTEGER], UsageUnit=[INTEGER], UsageThreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwOpticalPowerResume: OID [oid] Optical module recovered from power abnormal. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER] , EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\", RelativeResource=\"[OCTET]\", ReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityHeartbeatTrap: OID [oid] Network heart beat.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSSM/4/hwCssLinkUp: OID [OID] [INTEGER1]/[INTEGER2] CSS port [INTEGER3] up.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSSM/4/hwCssSwitchOver: OID [OID] CSS switchover is complete. The new master chassis ID is [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSSM/4/hwCssEstablish: OID [OID] CSS system established.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSSM/4/hwCssPortErrorDownRecover: OID [OID] CSS port [STRING] has recovered from error-down state.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSSM/4/hwCssStandbyErrorRestore: OID [OID] The CSS is recovered from the standby-no-MPU state.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwChassisInvalid: OID [oid] Physical chassis is invalid. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwChassisInvalidResume: OID [oid] Chassis resumes from invalid situation. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardInvalidResume: OID [oid] Board resumes from invalid situation. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardOffline: OID [oid] The card went offline because OFL was activated. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCardInconsistent: OID [oid] The card types are different. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwVoltAlarm: OID [oid] Voltage of power rises over or falls below the alarm threshold. (EntityPhysicalIndex=[INTEGER], EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwVoltResume: OID [oid] Voltage is restored to the normal range. (EntityPhysicalIndex=[INTEGER], EntityThresholdType=[INTEGER], EntityThresholdValue=[INTEGER], EntityThresholdCurrent=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardRemove: OID [oid] Board has been removed. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardInsert: OID [oid] Board has been inserted. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwBoardBecomeMaster: OID [oid] MPU becomes master role. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCommunicateError: OID [oid] Communication error has been detected. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityCommunicateType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCommunicateResume: OID [oid] Communication is restored. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityCommunicateType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/4/hwEntityPositionMismatchNotify: OID [oid] The temperature and fan noise in slot 6 are higher than other slots. Install the board into another slot. (SlotID=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYEXTTRAP/2/hwEntityHigCrcErrorAlarm: OID [oid] Input packets are discarded for an error in physical layer detection. (SlotID=[STRING], UnitID=[INTEGER], PortID=[STRING], PeerSlotID=[STRING], ErrorPacketStatistics=[STRING], ErrorPacketThreshold=[STRING], MonitorInterval=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwFIBOverloadSuspend: OID [oid] The interface board is in the overload suspension state because the FIB module is overloaded. (EntityPhysicalIndex=[INTEGER], HwBaseTrapSeverity=[INTEGER], HwBaseTrapProbableCause=[INTEGER], HwBaseTrapEventType=[INTEGER], HwFibOverloadModule=[INTEGER], entPhysicalName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwFIBOverloadSusResume: OID [oid] The interface board changes from the overload suspension state to the normal state. (EntityPhysicalIndex=[INTEGER], HwBaseTrapSeverity=[INTEGER], HwBaseTrapProbableCause=[INTEGER], HwBaseTrapEventType=[INTEGER], HwFibOverloadModule=[INTEGER], entPhysicalName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwFIBOverloadFwResume: OID [oid] The interface board changes from the overload forwarding state to the normal state. (EntityPhysicalIndex=[INTEGER], HwBaseTrapSeverity=[INTEGER], HwBaseTrapProbableCause=[INTEGER], HwBaseTrapEventType=[INTEGER], HwFibOverloadModule=[INTEGER], entPhysicalName=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/4/hwWholeFwdResThresholdExceedResume:OID [oid] The whole device forwarding engine resources fell from the threshold. (EntPhysicalindex=[INTEGER], EntPhysicalName=[OCTET], Reason=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/4/hwBoardFwdResThresholdExceedResume:OID [oid] The board forwarding engine resources fell from the threshold. (EntPhysicalindex=[INTEGER], EntPhysicalName=[OCTET], Reason=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfControlFlapSuppress:OID [OID] The state of interface changed from unsuppress to suppress. (InterfaceIndex=[INTEGER], InterfaceExtIndex=[INTEGER], InterfaceName=[STRING], SuppressState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfControlFlapSuppressIPv6:OID [OID] The IPv6 state of interface changed from unsuppress to suppress. (InterfaceIndex=[INTEGER], InterfaceExtIndex=[INTEGER], InterfaceName=[STRING], SuppressState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfControlFlapResume:OID [OID] The state of interface changed from suppress to unsuppress. (InterfaceIndex=[INTEGER], InterfaceExtIndex=[INTEGER], InterfaceName=[STRING], SuppressState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFNET/4/hwIfControlFlapResumeIPv6:OID [OID] The IPv6 state of interface changed from suppress to unsuppress. (InterfaceIndex=[INTEGER], InterfaceExtIndex=[INTEGER], InterfaceName=[STRING], SuppressState=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwNotSameBoardInTrunk: OID [oid] The Eth-Trunk contains member ports on different types of cards, Load balancing of the Eth-Trunk may be abnormal. (EntityIfIndex=[INTEGER], EntPhysicalName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwBoardNotSupportAssignTrunk: OID [OID] This card does not support extensions of Eth-Trunk specifications. The number of Eth-Trunk members on this card is 8. (PhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "IFPDT/4/hwTrunkUUHashRisk:OID [OID] Packet loss or excess packets may occur when some Eth-Trunks on the device are forwarding unknown unicast packets. (Reason=[STRING])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMacFlappingAlarm: OID [oid] The MAC address has flap value. (L2IfPort=[INTEGER], entPhysicalIndex=[INTEGER], BaseTrapSeverity=[INTEGER], BaseTrapProbableCause=[INTEGER], BaseTrapEventType=[INTEGER], MacAddr=[OCTET], VLANID=[INTEGER], FormerIfDescName=[OCTET], CurrentIfDescName=[OCTET], DeviceName=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpIfBlock: OID [oid] Loop exists in VLAN [INTEGER], Interface [OCTET1] blocked, block-time is [GAUGE] for [OCTET2], Mac Address is [OCTET3].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpIfResume: OID [oid] Loop does not exist in VLAN [INTEGER], Interface [OCTET1] resumed, block-time is [GAUGE] for [OCTET2].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpMacAddrAlarm: OID [oid] Loop exists in VLAN [INTEGER], MAC Address [OCTET1] blocked, block-time is [GAUGE], the former Interface [OCTET2], the latter Interface [OCTET3], for [OCTET4].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwMflpMacAddrResume: OID [oid] Loop does not exist in VLAN [INTEGER], MAC Address [OCTET1] resumed, block-time is [GAUGE], the former Interface [OCTET2], the latter Interface [OCTET3], for [OCTET4].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2IFPPI/4/hwBoardPowerOff: OID [OID] The LPU is powered off. This LPU only supports the trunks with index 127 or smaller than 127. Delete the trunks with index larger than 127 and power on the LPU. (Index=[INTEGER1], EntityPhysicalIndex=[INTEGER2], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER3], EntityTrapFaultID=[INTEGER4])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "MPLS/4/hwBoardMplsFlowLabelNonSupp:OID [OID] The board does not support MPLS flow label. (Slot=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaFtpSaveRecordNotification: OID [oid] The latest test's result record has saved to FTP server. (FileName=[OCTET]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "OAM/2/hwMplsOamEgrRlsnDown:OID [OID] LSP announces RLSN Down. ( LspName=[OCTET], LsrId=[OCTET], TunnelId=[INTEGER], IfIndex=[INTEGER] )",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoeNotAvailable: OID [oid] PoE function is not available. (ChassisID=[INTEGER], SlotID=[INTEGER], TrapProbableCause=[STRING]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoeNotAvailableResume: OID [oid] PoE function is available. (ChassisID=[INTEGER], SlotID=[INTEGER]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdOvercurrentPoweroff: OID [oid] The PD connected to the port is powered off due to overcurrent. (IfIndex=[INTEGER], InterfaceName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "POE/4/hwPoePdOverloadPoweroff: OID [oid] The PD connected to the port is powered off due to overload. (IfIndex=[INTEGER], InterfaceName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwIpv4PrefixThresholdExceedClear:OID [oid] The number of IPv4 prefixes falls below the threshold. (PrefixCount=[Integer], MaxValue=[Integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RM/4/hwIpv6PrefixThresholdExceedClear:OID [oid] The number of IPv6 prefixes falls below the threshold. (PrefixCount=[Integer], MaxValue=[Integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SMLK/4/hwSmartLinkLinkSwitch:OID [oid] Smart link group [INTEGER] status turned to [STRING].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SMLK/4/hwSmartLinkInactiveLinkFail:OID [OID] [STRING] link port [INTEGER1] of smart link group [INTEGER2] was abnormal, the port is [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SMLK/4/hwSmartLinkInactiveLinkResume:OID [OID] [STRING] link port [INTEGER1] of smart link group [INTEGER2] was normal, the port is [OCTET].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SMLK/4/hwSmartLinkGroupEnable:OID [oid] Smart link group [INTEGER] was [STRING].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SMLK/4/hwSmartLinkGroupDisable:OID [OID] Smart link group [INTEGER] was [STRING].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SW_SNPG/4/hwL2mcCacVsiCountExceed:OID [OID] Exceed the count limit on multicast groups. (VsiName=[STRING], ConfiguredValue=[INTEGER], CurrentMulticastGroup=[IPADDR])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SW_SNPG/4/hwL2mcCacVsiChannelCountExceed:OID [OID] Exceed the count limit on multicast groups. (ChannelName=[STRING], VsiName=[STRING], ConfiguredValue=[INTEGER], CurrentMulticastGroup=[IPADDR])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SW_SNPG/4/hwL2mcCacLdpPwCountExceed:OID [OID] Exceed the count limit on multicast groups. (PwId=[INTEGER], RemoteIpAddress=[IPADDR], ConfiguredValue=[INTEGER], CurrentMulticastGroup=[IPADDR])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SW_SNPG/4/hwL2mcCacLdpPwChannelCountExceed:OID [OID] Exceed the count limit on multicast groups. (PwId=[INTEGER], RemoteIpAddress=[IPADDR], ConfiguredValue=[INTEGER], CurrentMulticastGroup=[IPADDR])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApOnLineNumExceedCardSpecTrap: OID [oid] The number of online APs on the card has exceeded the maximum value. (Slot = [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DCB/4/hwXQosHeadRoomPoolApplyFailAlarm:Failed to configure the headroom buffer threshold. (SlotId=[hwXQosHeadRoomPoolApplyFailAlarmSlotId])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MQC/4/hwCBQosMirrorArpResourceExceedAlarm:ARP link-layer encapsulation resources are insufficient, and mirror fails to deliver ARP entries. (SlotID=[hwCBQoSMirrorSlotId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CPUDEFEND/4/hwARPSDaiBDDropALarm:The packet dropped by DAI exceeds the alarm threshold. (DroppedNum=[INTEGER1], Threshold=[INTEGER2], BD=[INTEGER3], PacketInfo=[OCTET]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DCB/4/hwXQosPfcBufferApplyFailAlarm:Failed to configure the buffer threshold for a PFC queue. (interface=[hwXQosPfcBufferApplyFailAlarmIfName], lossless priority=[hwXQosPfcBufferApplyFailAlarmPriority], buffer type=[hwXQosPfcBufferApplyFailAlarmBufferType])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "MQC/3/hwCBQosMirrorResourceAlarm:Mirroring resources are used up. (SlotID=[hwCBQoSMirrorSlotId], ServiceType=[hwCBQoSMirrorServiceType], Direction=[hwCBQoSMirrorDirection])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "ACL/4/hwAclResThresholdExceedClearTrap:OID [OID] The rule resource usage is restored to be lower than [INTEGER]%.(Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACL/4/hwAclResThresholdExceedTrap:OID [OID] The rule resource usage has exceeded [INTEGER]%.(Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACL/4/hwAclResTotalCountExceedClearTrap:OID [OID] The rule resource usage is restored to be lower than [INTEGER]%.(Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ACL/4/hwAclResTotalCountExceedTrap:OID [OID] The rule resource usage has reached [INTEGER]%.(Slot=[OCTET], Stage=[OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwCardFailResume: OID [oid] Card resume from failure.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRA/4/1.3.6.1.4.1.2011.5.25.219.2.3.4: OID [oid] Card resume from failure.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRA/2/1.3.6.1.4.1.2011.5.25.219.2.3.5:OID [oid] Card is invalid for some reason.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRA/2/1.3.6.1.4.1.2011.5.25.219.2.3.6: OID [oid] Card resume from invalid situation.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/2/hwCardInvalidResume: OID [oid] Card resume from invalid situation.(Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType= [INTEGER], EntityTrapFaultID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FSP/4/hwStackLinkDown: OID [oid] Stack-port [integer]/[integer] state is down.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisL1ImportRouteThresholdReach:OID [oid] The number of level-1 imported routes has reached the upper threshold value.(sysInstance=[integer], sysProtocol=[integer], sysMTIndex=[integer], sysMaxLimit=[integer], sysUpperThresholdValue=[integer], sysLowerThresholdValue=[integer], sysTotalRedist=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisL1ImportRouteThresholdReachClear:OID [oid] The number of level-1 imported routes has been less than the lower threshold value.(sysInstance=[integer], sysProtocol=[integer], sysMTIndex=[integer], sysMaxLimit=[integer], sysUpperThresholdValue=[integer], sysLowerThresholdValue=[integer], sysTotalRedist=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisL2ImportRouteThresholdReach:OID [oid] The number of level-2 imported routes has reached the upper threshold value.(sysInstance=[integer], sysProtocol=[integer], sysMTIndex=[integer], sysMaxLimit=[integer], sysUpperThresholdValue=[integer], sysLowerThresholdValue=[integer], sysTotalRedist=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS/4/hwIsisL2ImportRouteThresholdReachClear:OID [oid] The number of level-2 imported routes has been less than the lower threshold value.(sysInstance=[integer], sysProtocol=[integer], sysMTIndex=[integer], sysMaxLimit=[integer], sysUpperThresholdValue=[integer], sysLowerThresholdValue=[integer], sysTotalRedist=[integer])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ISIS-STD/4/isisLSPTooLargeToPropagate:OID [oid] The length of the PDU to be sent is greater than the MTU. (NotificationSysLevelIndex=[integer], CircIfIndex=[integer], PduLspSize=[integer], PduLspId=[opaque]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2BPTNL/2/hwL2ProtocolTunnelDropThresholdRaising:OID [oid] The number of the protocol transmit on the port reach the drop threshold. (PortName=[OCTET], ProtocolName=[OCTET], Dropthreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2BPTNL/2/hwL2ProtocolTunnelDropThresholdFalling:OID [oid] The number  of the protocol transmit on the port below the drop threshold.(PortName=[OCTET], ProtocolName=[OCTET], Dropthreshold=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardL2mcResLack:OID 1.3.6.1.4.1.2011.5.25.227.2.1.8 The l2mc index resource usage has exceeded [GAUGE]%.(Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardL2mcResLackResume:OID 1.3.6.1.4.1.2011.5.25.227.2.1.9 The l2mc index resource usage has fallen below [GAUGE]%.(Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardipmcResLack:OID 1.3.6.1.4.1.2011.5.25.227.2.1.10 The ipmc index resource usage has exceeded [GAUGE]%.(Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L3MB/4/hwBoardipmcResLackResume:OID 1.3.6.1.4.1.2011.5.25.227.2.1.11 The ipmc index resource usage has fallen below [GAUGE]%.(Slot=[OCTET],ResourceType=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsJitterThresholdNotificationSD:OID [oid] NQA entry Jitter-SD over threshold. (OwnerIndex=[OCTET], TestName=[OCTET]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "NQA/4/nqaJitterStatsJitterThresholdNotificationDS:OID [oid] NQA entry Jitter-DS over threshold. (OwnerIndex=[OCTET], TestName=[OCTET]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WE/4/1.3.6.1.4.1.2011.5.4.2.2.1.3: OID [OID] The number of portal users reached the maximum.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WE/4/1.3.6.1.4.1.2011.5.4.2.2.1.4: OID [OID] The Portal Max User Alarm is cleared.(Slot [OCTET] User-num [INTEGER] Threshold [INTEGER]%)",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RD/4/1.3.6.1.4.1.2011.5.25.40.15.2.2.1.1:OID 1.3.6.1.4.1.2011.5.25.40.15.2.2.1.1 RADIUS authentication server is up. (IP=[IPADDR], Vpn-Instance [OCTET]) ",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RD/4/1.3.6.1.4.1.2011.5.25.40.15.2.2.1.2:OID 1.3.6.1.4.1.2011.5.25. 40.15.2.2.1.2 RADIUS authentication server is down. (IP=[IPADDR], Vpn-Instance [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RD/4/1.3.6.1.4.1.2011.5.25.40.15.2.2.1.3:OID 1.3.6.1.4.1.2011.5.25.40.15.2.2.1.3 RADIUS accounting server is up. (IP=[IPADDR], Vpn-Instance [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RD/4/1.3.6.1.4.1.2011.5.25.40.15.2.2.1.4:OID 1.3.6.1.4.1.2011.5.25.40.15.2.2.1.4 RADIUS accounting server is down. (IP=[IPADDR], Vpn-Instance [OCTET])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPGlobleSpeedLimitALarm:OID [oid] The globle arp packet speed exceed the speed-limit value configed [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwARPSIPSpeedLimitALarm:OID [oid] The arp packet speed with source ip [OCTET] exceed the speed-limit value configed [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SECE/4/hwICMPGlobleDropALarm:OID [oid]. Globle icmp packet speed exceed the speed-limit value configed [INTEGER].",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwSysCfgFileErrorNotification:OID [oid] The configuration file is invalid. (HwSysCFGFileIndex=[HwSysCFGFileIndex], HwSysCFGFileName=[HwSysCFGFileName], HwSysCfgFileReason=[HwSysCfgFileReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SYSMIB/4/hwSysImageErrorNotification:OID [oid] The image file failed to upgrade. (HwSysImageIndex=[HwSysImageIndex], HwSysCurrentImageName=[HwSysCurrentImageName], HwSysUpgradeImageName=[HwSysUpgradeImageName], HwSysImageReason=[HwSysImageReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "UCM/4/hwVpVmAuthenticateFail:OID [oid] Failed to pass authentication. (VMVlan=[Vlan], VMMac=[MAC], ProfileId=[ProfileId], IfIndex=[IfIndex], IfName=[IfName]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "UCM/4/hwVpVmDeliverAuthorInformationFail:OID [oid] Failed to deliver authorization information. (VMVlan=[Vlan], VMMac=[MAC], ProfileId=[ProfileId], IfIndex=[IfIndex], IfName=[IfName]).",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "BASETRAP/4/hwEntityInert: OID [oid] Physical entity is inserted. (Index=[INTEGER], Severity=[INTEGER], ProbableCause=[INTEGER], EventType=[INTEGER], ContainedIn=[INTEGER], PhysicalName=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApAccessChannelUtilExceedThresholdTrap:OID [oid] AP access channelutilization exceed threshold notify. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET],ChannelUtil=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApAccessChannelUtilExceedThresholdRecovTrap:OID [oid] AP access channelutilization exceed threshold notify restore. (APMAC=[OPAQUE], RadioID=[INTEGER],APName=[OCTET],ChannelUtil=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApRoamChannelUtilExceedThresholdTrap:OID [oid] AP roam channelutilization exceed threshold notify. (APMAC=[OPAQUE],  RadioID=[INTEGER], APName=[OCTET],ChannelUtil=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "WLAN/4/hwApRoamChannelUtilExceedThresholdRecovTrap:OID [oid] AP roam channelutilization exceed threshold notify restore. (APMAC=[OPAQUE], RadioID=[INTEGER], APName=[OCTET], ChannelUtil=[INTEGER], APID=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSISSU/4/hwCssIssuUpgradeComplete: OID [OID] CSS ISSU has been completed.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CSSM/2/hwCssLpuInvalidLicense: OID [OID] The license on the device is not activated or has expired, so the Lpu-based CSS function can not be used.",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwNomatchSnpBindTblDhcpPktAlarmBd:  OID [OID] The number of the discarded DHCP request packets that do not match the binding table exceeds the threshold on the interface. (IfIndex=[INTEGER], Interface=[OCTET], BdID=[INTEGER], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/2/hwUntrustedReplyPktAlarmBd: OID [OID] The number of the discarded DHCP reply packets on the untrusted interface exceeds the threshold. (IfIndex=[INTEGER], Interface=[OCTET], BdID=[INTEGER], DiscardedNumber=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/4/hwDHCPv6SnpDetectAlarm: OID [OID] The received DHCPv6 packet is inconsistent with the snooping entry. (IP=[IPADDR], PEVLAN=[INTEGER], CEVLAN=[INTEGER], VRFIndex=[INTEGER], VSIIndex=[INTEGER], Client MAC=[OCTET], Interface=[OCTET], VLAN=[INTEGER])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FIB/2/hwFIBOverloadForward: OID [oid] The interface board is in the overload forwarding state because the FIB module is overloaded. (EntityPhysicalIndex=[INTEGER], HwBaseTrapSeverity=[INTEGER], HwBaseTrapProbableCause=[INTEGER], HwBaseTrapEventType=[INTEGER], HwFibOverloadModule=[INTEGER], entPhysicalName=[STRING])\"",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "ENTITYTRAP/4/hwPortInvalid: OID [oid] Port is invalid. (Index=[INTEGER], EntityPhysicalIndex=[INTEGER], PhysicalName=\"[OCTET]\", EntityTrapEntType=[INTEGER], EntityTrapFaultID=[INTEGER], EntityTrapReasonDescr=\"[OCTET]\")",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "SUM/4/hwSmartUpgradeUserDataRetentionPeriodHasExpired:Your personal information has expired, if you continue to accept the results of the smart upgrade, please re-enter the phone and email.",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuCertMisMatch:Remote unit certificate version does not match the central device. (RemoteUnitEsn=[RemoteUnitEsn])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CFGMGR/4/hwMacMovedQuietUserClearAlarm:The MAC Moved Quiet Max User Alarm is cleared. (SpecOfUserNum=[SpecOfUserNum], CurrentThreshold=[CurrentThreshold]%, LowerThreshold=[LowerThreshold]%, UpperThreshold=[UpperThreshold]%, ProcessName=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DLDP/3/hwDldpNeighborNum:The number of DLDP neighbors of the device reached the upper limit. (neighbor limit=[TotalNeighborLimit])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "USA/4/hwAuthenAssociateAccessLimitTrap:Associate user access limit. (Period=[Period], IfName=[IfName], CurrentNum=[CurrentNum], UpperLimit=[UpperLimit])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackMemberExceedSpec:The number of stack members exceeds the upper limit. (UpperLimit=[hwStackMemberSpec])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731AisDefectAlarm:MEP enters AIS defect condition. (MdIndex=[MdIndex], MaIndex=[MaIndex], MdName=[MdName], MaName=[MaName], MepID=[MepId])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-ETH/4/hwPortsecStaticFlpAlarm:Interface received a packet with flapping static MAC. (MACAddr=[MacAddr], VLAN=[VLAN], IfIndex=[IfIndex], InterfaceName=[InterfaceName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "CFGMGR/4/hwBindAuthenProfileFail:Failed to bind the authentication profile to the port. (IfIndex=[IfIndex], IfName=[IfName], AuthenProfileName=[AuthenProfileName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuAuthFail:The authentication to the remote unit failed. (RemoteUnitEsn=[RemoteUnitEsn])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackMemberLeave:The CSS or stack member device left. (hwStackIdIndex=[hwStackIdIndex], hwStackId=[hwStackId], hwStackMacAddress=[hwStackMacAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/2/hwStackLinkTopoSinglePortAlarm:A Stack-Port in a link-topo CSS or stack has only one available member link. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/3/hwRuIICFault:Remote unit IIC channel fault. (RemoteUnitEsn=[RemoteUnitEsn], IIC_ID=[IIC_ID], IIC_Name=[IIC_Name])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EAP/4/hwMacQuietMaxUserAlarm:The number of mac quiet users reached the maximum. (Spec of User Num=[SpecofUserNum], Current Threshold=[CurrentThreshold], Lower Threshold=[LowerThreshold], Upper Threshold=[UpperThreshold], Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuUartStatAbnormal:Remote unit UART communication is abnormal. (RemoteUnitEsn=[RemoteUnitEsn])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuMngRuLinkAbnormal:The link connected to the remote unit is abnormal. (RemoteUnitEsn=[RemoteUnitEsn], ConnectInterface=[ConnectInterface], AbnormalReason=[AbnormalReason])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EAP/4/hwMacQuietUserClearAlarm:The MAC Quiet Max User Alarm is cleared. (Spec of User Num=[SpecofUserNum], Current Threshold=[CurrentThreshold], Lower Threshold=[LowerThreshold], Upper Threshold=[UpperThreshold], Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/2/hwStackLinkTopoAlarm:The system is a link-topo stack that contains more than two member switches.",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackMemberPortSpeedDifferentAlarm:The rates of member ports in a Stack-Port are different. (hwStackPortName=[hwStackLocalIfName])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/1/hwStackLogicStackPortLinkErr:Stack-Ports are incorrectly connected. (hwStackLocalIfName=[hwStackLocalIfName], hwStackPeerIfName=[hwStackPeerIfName], Reason=[Reason])",
  "output": "environmentalAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackRenStkidNoResetAlarm:The device does not restart after the stack ID is changed. (SlotId=[hwStackLocalSlotID])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackMemberLimit:The number of CSS or stack members has reached the upper limit and new members failed to join. (hwStackMemberThreshold=[hwStackMemberThreshold])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcVlanEntryReachLimit:The number of multicast layer-2 entries on the VLAN reached the upper limit. (AddressFamily=[AddressFamily], VlanId=[VlanId], CurrentNumber=[CurrentNumber], LimitNumber=[LimitNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuMacUsageRaising:The MAC Address usage of remote unit exceeds the threshold. (RemoteUnitEsn=[RemoteUnitEsn], MacUsage=[MacUsage], MacUsageThreshold=[MacUsageThreshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731AisExceedMaxPktNum:The number of AIS packets transmitted in one second exceeds the maximum. (Maximum=[MAXIMUM])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/UCMACCHANGETRAP:Unicaset MAC address changed. (ucMacChange=[ucMacChange])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuPseV33Abnormal:Remote unit V33 voltage of PSE chip is abnormal. (RemoteUnitEsn=[RemoteUnitEsn], ReasonDescription=[ReasonDescription])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuPortCrcErrorRising:Remote unit CRC error is rising. (RemoteUnitEsn=[RemoteUnitEsn], InterfaceName=[InterfaceName], CrcErrorStatistics=[CrcErrorStatistics], CrcErrorThreshold=[CrcErrorThreshold], CrcErrorInterval=[CrcErrorInterval](s))",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-SLICE/2/hwBoardNetworkSliceResourceInsufficient:The network slice resources are insufficient. (Slot=[SlotString], InterfaceName=[InterfaceName], SliceId=[SliceId], TrunkInterfaceName=[TrunkIfName], ReasonId=[ReasonId], ReasonDescription=[ReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "FWM-SLICE/2/hwBoardNetworkSliceConflict:The network slice configuration failed to take effect. (Slot=[SlotString], InterfaceName=[InterfaceName], SliceId=[SliceId], TrunkInterfaceName=[TrunkInterfaceName], ReasonId=[ReasonId], ReasonDescription=[ReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CFGMGR/4/hwMacMovedQuietMaxUserAlarm:The number of mac moved quiet users reached the maximum. (SpecOfUserNum=[SpecOfUserNum], CurrentThreshold=[CurrentThreshold], LowerThreshold=[LowerThreshold], UpperThreshold=[UpperThreshold], ProcessName=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "FWM-SLICE/2/hwBoardNetworkSliceTrafficAbnormal:The traffic does not hit the slice. (Slot=[SlotString], InterfaceName=[InterfaceName], SliceId=[SliceId], TrunkInterfaceName=[TrunkIfName], SourceInterfaceName=[SrcIfName], ReasonId=[ReasonId], ReasonDescription=[ReasonDescription])",
  "output": "processingErrorAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/USEROPERTRAP:User operate command. (userOperIndex=[userOperIndex], userOperName=[userOperName], userOperIP=[userOperIP], userOperCommand=[userOperCommand])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwDadPortProtocolAlarm:The protocol status of the dual-active port is down. (hwDadDetectPort=[hwDadDetectPort])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwCfmVlanTwowayDelay:The result of two-way delay-measure exceeded the threshold. (MdIndex=[MdIndex], MaIndex=[MaIndex], RemoteMacAddress=[RemoteMacAddress], Timestamp=[Timestamp], DelayValue=[DelayValue], ThresholdValue=[ThresholdValue], DelayValueHigh=[DelayValueHigh], DelayValueLow=[DelayValueLow])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackLinkDown:The interface Stack-Port is down. (StackPortName=Stack-Port[hwStackPortStackId]/[hwStackPortId], hwStackPortStatus=[hwStackPortStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "DHCP/1/hwDhcpv6PktRateAlarm:The rate of DHCPv6 packets exceeds the speed limit. (Interface=[Interface], VlanID=[VlanID], DiscardedNumber=[DiscardedNumber])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuMngRuPortLinkDown:Interface on remote unit turned into DOWN state. (RemoteUnitEsn=[RemoteUnitEsn], InterfaceName=[InterfaceName], AdminStatus=[AdminStatus], OperStatus=[OperStatus])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuPhyStatAbnormal:Remote unit PHY chip is abnormal. (RemoteUnitEsn=[RemoteUnitEsn])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackLinkLimitAlarm:The number of CSS or stack links has reached the alarm threshold. (hwStackLocalIfName=[hwStackLocalIfName], hwStackCurrentLinkNum=[hwStackCurrentLinkNum], hwStackLinkAlarmThreshold=[hwStackLinkAlarmThreshold])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/2/hwStackAutoConfigFailed:Failed to auto configure stack port. (SlotID=[hwStackAutoConfigFailedSlotID], Port=[hwStackAutoConfigFailedIfName], Reason=[hwStackAutoConfigFailedReason])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "LACP/4/hwLacpPartnerExpiredLoss:The member of LAG receive expired PDU from partner. (TrunkIndex=[TrunkIndex], PortIfIndex=[PortIfIndex], TrunkId=[TrunkId], TrunkName=[TrunkName], PortName=[PortName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwCfmVlanOnewayDelay:The result of one-way delay-measure exceeded the threshold. (MdIndex=[MdIndex], MaIndex=[MaIndex], RemoteMacAddress=[RemoteMacAddress], Timestamp=[Timestamp], DelayValue=[DelayValue], ThresholdValue=[ThresholdValue], DelayValueHigh=[DelayValueHigh], DelayValueLow=[DelayValueLow])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/5/hwStackLinkUp:The interface Stack-Port is up. (StackPortName=Stack-Port[hwStackPortStackId]/[hwStackPortId], hwStackPortStatus=[hwStackPortStatus])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackMemberPortProtocolAlarm:The physical status of the Stack-Port member is up, but its protocol status is down. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuTemperatureAbnormal:Remote unit temperature is abnormal. (RemoteUnitEsn=[RemoteUnitEsn], TemperatureVal=[TemperatureVal])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/2/hwRuPsePowerStatAbnormal:Remote unit PSE power state is abnormal. (RemoteUnitEsn=[RemoteUnitEsn])",
  "output": "equipmentAlarm"
 },
 {
  "instruction": "alarms",
  "input": "CFGMGR/4/hwMaxUclGroupIpNumAlarm:The number of dynamic ucl-group IPs is reaching the max. (CurrentNum=[CurrentNum], Threshold=[Threshold]%, ProcessName=[ProcessName])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalQuietUserClear:The Portal quiet max user alarm is cleared. (SpecOfUserNum=[SpecOfUserNum], CurrentThreshold=[CurrentThreshold], LowerThreshold=[LowerThreshold], UpperThreshold=[UpperThreshold], ProcessName=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/5/hwPhyStackPortIsUp:The Stack-Port member's link state is up. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/1/hwDadConflictDetect:Dual-active scenario is detected.",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwPhyStackPortIsDown:The Stack-Port member's link state is down. (hwStackLocalIfName=[hwStackLocalIfName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcInterfaceVlanEntryReachLimit:The number of multicast layer-2 entries on the interface and VLAN reached the upper limit. (AddressFamily=[AddressFamily], IfIndex=[IfIndex], Ifname=[IfName], VlanId=[VlanId], CurrentNumber=[CurrentNumber], LimitNumber=[LimitNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "EAP/4/MACAREACHMAXNUM:The number of users has reached the max number. (ifIndex=[ifIndex], PortName=[PortName], Process Name=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "EOAM-Y1731/4/hwY1731Statistic:The Y.1731 statistic value exceeded the upper limit value. (MdIndex=[MdIndex], MaIndex=[MaIndex], MepID=[MepID], Type=[Type], MAC=[MAC], Priority=[Priority], MdName=[MdName], MaName=[MaName], Value=[Value], UpperLimitThreshold=[UpperLimitThreshold], LowerLimitThreshold=[LowerLimitThreshold], ValueHigh=[ValueHigh], ValueLow=[ValueLow])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "WEB/4/hwPortalQuietMaxUser:The number of portal quiet users reached the maximum. (SpecOfUserNum=[SpecOfUserNum], CurrentThreshold=[CurrentThreshold], LowerThreshold=[LowerThreshold], UpperThreshold=[UpperThreshold], ProcessName=[ProcessName])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/hwStackMemberAdd:The CSS or stack member device joined in. (hwStackIdIndex=[hwStackIdIndex], hwStackId=[hwStackId], hwStackMacAddress=[hwStackMacAddress])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "L2-MULTICAST/4/hwL2mcInterfaceEntryReachLimit:The number of multicast layer-2 entries on the interface reached the upper limit. (AddressFamily=[AddressFamily], IfIndex=[IfIndex], Ifname=[IfName], CurrentNumber=[CurrentNumber], LimitNumber=[LimitNumber])",
  "output": "qualityOfServiceAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/4/USERTRAP:User status changed. (userIndex=[userIndex], userName=[userName], userType=[userType], userStatus=[userStatus], userModified=[userModified], userIP=[userIP])",
  "output": "EventTrap"
 },
 {
  "instruction": "alarms",
  "input": "AAA/4/hwHacaChannelDown:Channel with the HACA server is interrupted. (IPAddress=[IPAddress], PortNumber=[PortNumber])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "STACK/1/hwStackProPacketTamperAlarm:The CSS or stack protocol packets are tampered with. (hwStackPeerSlotName=[hwStackPeerSlotName], hwPacketPaddingContent=[hwPacketPaddingContent])",
  "output": "communicationsAlarm"
 },
 {
  "instruction": "alarms",
  "input": "RUMNG/4/hwRuMngFirmwareUpdateFail:The remote-unit firmware upgrade failed. (RemoteUnitEsn=[RemoteUnitEsn], InterfaceName=[InterfaceName], Firmware=[Firmware], Reason=[Reason])",
  "output": "EventTrap"
 }
]